<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>현수쓰</title>
  
  <subtitle>하루를 기록하다</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://khs9628.github.io/"/>
  <updated>2019-09-28T12:56:02.007Z</updated>
  <id>https://khs9628.github.io/</id>
  
  <author>
    <name>현수쓰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(AWS) EC2에 배포하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws3/"/>
    <id>https://khs9628.github.io/2019/09/25/aws3/</id>
    <published>2019-09-25T09:40:21.000Z</published>
    <updated>2019-09-28T12:56:02.007Z</updated>
    
    <content type="html"><![CDATA[<h1 id="서버-배포-방법"><a href="#서버-배포-방법" class="headerlink" title="서버 배포 방법"></a>서버 배포 방법</h1><p>인스턴스에 배포하기 전에 서버를 구성하는 방법의 종류를 알아 보겠습니다</p><h2 id="Django로만-배포"><a href="#Django로만-배포" class="headerlink" title="Django로만 배포"></a>Django로만 배포</h2><p>Django 프로젝트를 인스턴스에 그대로 옮겨 <code>python manage.py runserver</code> 를 켜서 서버를 돌리는 방법입니다.<br>하지만 Django의 runserver는 개발할 때 쓰는 작은 디버깅용 웹 서버이기 때문에 실제 프로젝트를 이 방법으로 배포하지는 않고, 아래의 두가지 방법을 이용합니다.</p><h2 id="uWSGI-Django로-배포"><a href="#uWSGI-Django로-배포" class="headerlink" title="uWSGI + Django로 배포"></a>uWSGI + Django로 배포</h2><p>Django 프로젝트를 생성하면 wsgi.py 파일이 생성되는 것을 많이 보셨을 겁니다. 우선 WSGI의 개념부터 살펴보면, <code>Web Server Gateway Interface</code>의 약자로 <strong><em>웹 서버(Apache, Nginx 등)와 웹 애플리케이션(Django, Flask 등) 사이를 이어주는 역할</em></strong>을 합니다. 즉 웹 서버로 들어온 요청을 Python 언어로 만들어진 웹 애플리케이션과 소통할 수 있도록 해주는 역할을 합니다.<br><code>uWSGI</code>는 이 WSGI 규격으로 만들어진 서버 중에 하나이며 Django 프로젝트를 배포할 때 가장 일반적으로 사용됩니다.</p><p>Django는 수많은 request를 처리할 수 있도록 설계되어 있지 않기 때문에, Django로만 배포하지 않고 수많은 request를 처리하도록 설계된 uWSGI를 함께 사용해서 배포합니다. 그렇기 때문에 물론 uWSGI + Django 만으로도 충분히 배포가 가능하지만 추천하지는 않습니다</p><h2 id="Nginx-uWSGI-Django로-배포"><a href="#Nginx-uWSGI-Django로-배포" class="headerlink" title="Nginx + uWSGI + Django로 배포"></a>Nginx + uWSGI + Django로 배포</h2><p><img alt data-src="/img/Django/AWS/aws.PNG" class="lozad"><br>위의 그림에서처럼 <code>Nginx</code>는 클라이언트로부터 HTTP 요청을 받아 request에 따라 바뀌지 않는 즉 정적파일(HTML, CSS, JavaScript)을 돌려주고, 동적데이터가 필요한 요청은 웹 애플리케이션으로 보내줍니다. 이게 바로 웹 서버가 하는 일입니다. 위의 방법을 추천하지 않은 이유 역시 이 웹 서버가 정적파일을 미리 클라이언트에게 보여줌으로써 서버 성능을 높여주기 때문입니다.</p><p>Nginx에서 받은 요청은 <code>unix socket</code>을 거쳐 uWSGI로 보내지며, uWSGI가 받은 요청을 Python 개발 환경에서 이해할 수 있도록 중계해주면 최종적으로 Django에서 요청을 처리하게 됩니다.</p><p>그럼 Nginx + uWSGI + Django의 일련의 과정을 실제로 배포하는 방법을 아래에서 알아보도록 하겠습니다.</p><h1 id="Django-Setting"><a href="#Django-Setting" class="headerlink" title="Django Setting"></a>Django Setting</h1><p>인스턴스에 배포하기 전에 Django를 세팅합니다.</p><h2 id="구조"><a href="#구조" class="headerlink" title="구조"></a>구조</h2><p>먼저 제가 사용 중인 <a href="https://github.com/khs9628/Django_deep/tree/master/RESTful-project/proj" rel="external nofollow noopener noreferrer" target="_blank">프로젝트</a>의 <code>tree 구조</code>는 아래와 같습니다.</p><pre><code>nginx_test└── app    ├── .config    │   ├── nginx-app.conf    │   ├── uwsgi.ini    │   └── uwsgi.service    ├── config    │   ├── __init__.py    │   ├── __pycache__    │   ├── settings.py    │   ├── urls.py    │   └── wsgi.py    ├── manage.py    └── post (app)        ├── /__pycache__        ├── /migrations        │   └── __init__.py        ├── __init__.py        ├── admin.py        ├── apps.py        ├── models.py        ├── serializers.py        ├── urls.py        ├── tests.py        └── views.py</code></pre><h4 id="cf-오류가-나는-경우"><a href="#cf-오류가-나는-경우" class="headerlink" title="cf) 오류가 나는 경우"></a>cf) 오류가 나는 경우</h4><p><code>forigenKey</code>를 <code>author_name</code> field와 잡아놨기 때문에 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py createsuperuser</span><br></pre></td></tr></table></figure><p>을 통해 계정을 만들고 로그인 후 올리면 가능할 것입니다.</p><h3 id="Django-static-media-파일-처리-설정"><a href="#Django-static-media-파일-처리-설정" class="headerlink" title="Django static, media 파일 처리 설정"></a>Django static, media 파일 처리 설정</h3><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ROOT_DIR = os.path.dirname(BASE_DIR)</span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATIC_ROOT = os.path.join(ROOT_DIR, <span class="string">'.static'</span>)</span><br><span class="line"></span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(ROOT_DIR, <span class="string">'.media'</span>)</span><br><span class="line">STATIC_DIR = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    STATIC_DIR,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="gitignore-추가"><a href="#gitignore-추가" class="headerlink" title=".gitignore 추가"></a><code>.gitignore</code> 추가</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Custom</span><br><span class="line">/.media</span><br><span class="line">/.static</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/AWS/aws14.PNG" class="lozad"></p><h4 id="cf-gitignore는-링크된-사이트에서-만들-수-있습니다"><a href="#cf-gitignore는-링크된-사이트에서-만들-수-있습니다" class="headerlink" title="cf) .gitignore는 링크된 사이트에서 만들 수 있습니다."></a>cf) <a href="http://gitignore.io/" rel="external nofollow noopener noreferrer" target="_blank">.gitignore</a>는 링크된 사이트에서 만들 수 있습니다.</h4><p><img alt data-src="/img/Django/AWS/aws13.PNG" class="lozad"></p><h2 id="Django-DEBUG-설정-및-ALLOWED-HOST-설정-변경"><a href="#Django-DEBUG-설정-및-ALLOWED-HOST-설정-변경" class="headerlink" title="Django DEBUG 설정 및 ALLOWED_HOST 설정 변경"></a>Django DEBUG 설정 및 ALLOWED_HOST 설정 변경</h2><p>개발을 완료하고 배포하는 단계이므로 DEBUG 모드를 False로 바꾸고, ALLOWED_HOST에 aws 주소를 허용합니다.</p><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [</span><br><span class="line">    <span class="string">'.amazonaws.com'</span>,</span><br><span class="line">    <span class="comment"># '*'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="uWSGI-사이트-파일-작성"><a href="#uWSGI-사이트-파일-작성" class="headerlink" title="uWSGI 사이트 파일 작성"></a>uWSGI 사이트 파일 작성</h2><p>app폴더와 같은 위치에 .config폴더를 만든후, uwsgi.ini 파일에 아래와 같이 작성합니다.</p><p><code>app/.config/uwsgi.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[uwsgi]</span></span><br><span class="line"><span class="attr">chdir</span> = /srv/&lt;nginx_test/app&gt;</span><br><span class="line"><span class="attr">module</span> = config.wsgi</span><br><span class="line"><span class="attr">home</span> = /home/ubuntu/.pyenv/versions/가상환경이름(ec2-deploy)</span><br><span class="line"></span><br><span class="line"><span class="attr">uid</span> = ubuntu</span><br><span class="line"><span class="attr">gid</span> = ubuntu</span><br><span class="line"><span class="attr">socket</span> = /tmp/app.sock</span><br><span class="line"><span class="attr">chmod-socket</span> = <span class="number">666</span></span><br><span class="line"><span class="attr">chown-socket</span> = ubuntu:ubuntu</span><br><span class="line"></span><br><span class="line"><span class="attr">master</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">vacuum</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">logto</span> = /tmp/uwsgi.log</span><br><span class="line"><span class="attr">log-reopen</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>–http 포트 번호를 지정한다.<br>–home virtualenv 가상환경 디렉토리를 지정한다.<br>–chdir manage.py가 들어있는 Django 프로젝트 디렉토리를 지정한다.<br>–module WSGI 모듈을 지정한다.</p></blockquote><h2 id="uWSGI-서비스-설정-파일-작성"><a href="#uWSGI-서비스-설정-파일-작성" class="headerlink" title="uWSGI 서비스 설정 파일 작성"></a>uWSGI 서비스 설정 파일 작성</h2><p>.config폴더에 uwsgi.service 파일에 아래와 같이 작성합니다.<br><code>app/.config/uwsgi.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=EC2 Deploy uWSGI service</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/ubuntu/.pyenv/versions/ipsw/bin/uwsgi -i &lt;/srv/nginx_test/app/.config/uwsgi.ini&gt;</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">Type=notify</span><br><span class="line">StandardError=syslog</span><br><span class="line">NotifyAccess=all</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="Nginx-설정-파일-작성"><a href="#Nginx-설정-파일-작성" class="headerlink" title="Nginx 설정 파일 작성"></a>Nginx 설정 파일 작성</h2><p>.config 폴더에 nginx-app.conf라는 Nginx 설정 파일을 만들고 아래 내용을 작성합니다.<br><code>nginx_test/.config/nigx-app.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name *.amazonaws.com;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    client_max_body_size 128M;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        uwsgi_pass      unix:///tmp/app.sock;</span><br><span class="line">        include         uwsgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        alias /srv/app/.static/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /media/ &#123;</span><br><span class="line">        alias /srv/app/.media/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="requirements-txt-파일-업데이트"><a href="#requirements-txt-파일-업데이트" class="headerlink" title="requirements.txt 파일 업데이트"></a>requirements.txt 파일 업데이트</h2><p>uWSGI를 설치 후, Django 프로젝트에 사용된 패키지들을 서버에 올리기 전에 최종적으로 업데이트 해줍니다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  pip install uwsgi</span><br></pre></td></tr></table></figure><h4 id="“requirement”-파일에-기술된-모든-라이브러리를-설치하는-pip-명령은-다음과-같습니다"><a href="#“requirement”-파일에-기술된-모든-라이브러리를-설치하는-pip-명령은-다음과-같습니다" class="headerlink" title="“requirement” 파일에 기술된 모든 라이브러리를 설치하는 pip 명령은 다음과 같습니다."></a>“requirement” 파일에 기술된 모든 라이브러리를 설치하는 pip 명령은 다음과 같습니다.</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="Pillow-동작을-위한-Ubuntu-python-라이브러리-설치"><a href="#Pillow-동작을-위한-Ubuntu-python-라이브러리-설치" class="headerlink" title="Pillow 동작을 위한 Ubuntu python 라이브러리 설치"></a>Pillow 동작을 위한 Ubuntu python 라이브러리 설치</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-dev python-setuptools</span><br></pre></td></tr></table></figure><h2 id="인스턴스-세팅"><a href="#인스턴스-세팅" class="headerlink" title="인스턴스 세팅"></a>인스턴스 세팅</h2><p>인스턴스에 복사한 파일들로 인스턴스에도 세팅을 해줍니다.</p><h3 id="pip-list-설치"><a href="#pip-list-설치" class="headerlink" title="pip list 설치"></a>pip list 설치</h3><p><code>인스턴스 접속</code></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  ssh -i &lt;pem경로&gt; &lt;user name&gt;@&lt;public dns name&gt;</span><br><span class="line"></span><br><span class="line">or `putty`</span><br></pre></td></tr></table></figure><h4 id="인스턴스에서-복사한-프로젝트-폴더로-들어가-로컬-프로젝트와-동일한-가상환경명으로-만들어줍니다"><a href="#인스턴스에서-복사한-프로젝트-폴더로-들어가-로컬-프로젝트와-동일한-가상환경명으로-만들어줍니다" class="headerlink" title="인스턴스에서 복사한 프로젝트 폴더로 들어가 로컬 프로젝트와 동일한 가상환경명으로 만들어줍니다."></a>인스턴스에서 복사한 프로젝트 폴더로 들어가 로컬 프로젝트와 동일한 가상환경명으로 만들어줍니다.</h4><ul><li><p>프로젝트폴더 cd</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /srv/nginx_test</span><br></pre></td></tr></table></figure></li><li><p>python 3.7.3 버전 설치</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv install 3.7.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 사용할 Python 버전 정해주기</span></span><br><span class="line">$ pyenv global 3.7.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># + 현재 디렉토리에서 사용할 python 버전 설정</span></span><br><span class="line">$ pyenv <span class="built_in">local</span> 3.7.3</span><br></pre></td></tr></table></figure></li><li><p>ec2-deploy 가상환경을 생성</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenv 3.7.3 ec2-deploy</span><br></pre></td></tr></table></figure></li></ul><p>-&gt; /home/ubuntu/.pyenv/versions/3.7.3/envs/ec2-deploy 위치로 저장</p><ul><li><p>중간 확인</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app폴더 (manage.py가 있는 폴더)</span></span><br><span class="line">$ python manage.py runserver [aws Public주소:8000]</span><br></pre></td></tr></table></figure></li><li><p>가상환경 실행</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv activate ec2-deploy</span><br></pre></td></tr></table></figure></li><li><p>requirements.txt로 pip list 설치</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul><h2 id="인스턴스에-Nginx-및-uWSGI-설정"><a href="#인스턴스에-Nginx-및-uWSGI-설정" class="headerlink" title="인스턴스에 Nginx 및 uWSGI 설정"></a>인스턴스에 Nginx 및 uWSGI 설정</h2><p>아래 내용은 모두 로컬이 아니라 인스턴스에서 진행해야 합니다.</p><h3 id="Nginx-설치"><a href="#Nginx-설치" class="headerlink" title="Nginx 설치"></a>Nginx 설치</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  sudo add-apt-repository ppa:nginx/stable</span><br><span class="line">$  sudo apt-get update</span><br><span class="line">$  sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h4 id="nginx-app-conf-파일-sites-available-폴더에-복사"><a href="#nginx-app-conf-파일-sites-available-폴더에-복사" class="headerlink" title="nginx-app.conf 파일 sites-available 폴더에 복사"></a>nginx-app.conf 파일 sites-available 폴더에 복사</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo cp -f /srv/nginx_test/app/.config/nginx-app.conf /etc/nginx/sites-available/nginx-app.conf</span><br></pre></td></tr></table></figure><h4 id="site-enabled에-링크-걸어주기"><a href="#site-enabled에-링크-걸어주기" class="headerlink" title="site-enabled에 링크 걸어주기"></a>site-enabled에 링크 걸어주기</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo ln -sf /etc/nginx/sites-available/nginx-app.conf /etc/nginx/sites-enabled/nginx-app.conf</span><br></pre></td></tr></table></figure><h4 id="uwsgi-sevice-파일-system-폴더에-복사"><a href="#uwsgi-sevice-파일-system-폴더에-복사" class="headerlink" title="uwsgi.sevice 파일 system 폴더에 복사"></a>uwsgi.sevice 파일 system 폴더에 복사</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo cp -f /srv/nginx_test/app/.config/uwsgi.service /etc/systemd/system/uwsgi.service</span><br></pre></td></tr></table></figure><h4 id="manage-py가-복사된-위치로-이동-후-manage-py-collectstatic-실행"><a href="#manage-py가-복사된-위치로-이동-후-manage-py-collectstatic-실행" class="headerlink" title="manage.py가 복사된 위치로 이동 후, manage.py collectstatic 실행"></a>manage.py가 복사된 위치로 이동 후, manage.py collectstatic 실행</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  python manage.py collectstatic --noinput</span><br></pre></td></tr></table></figure><h4 id="uwsgi-사용"><a href="#uwsgi-사용" class="headerlink" title="uwsgi 사용"></a>uwsgi 사용</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl <span class="built_in">enable</span> uwsgi</span><br></pre></td></tr></table></figure><h4 id="daemon-reload"><a href="#daemon-reload" class="headerlink" title="daemon-reload"></a>daemon-reload</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h4 id="uwsgi-재부팅"><a href="#uwsgi-재부팅" class="headerlink" title="uwsgi 재부팅"></a>uwsgi 재부팅</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl restart uwsgi nginx</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/AWS/aws15.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;서버-배포-방법&quot;&gt;&lt;a href=&quot;#서버-배포-방법&quot; class=&quot;headerlink&quot; title=&quot;서버 배포 방법&quot;&gt;&lt;/a&gt;서버 배포 방법&lt;/h1&gt;&lt;p&gt;인스턴스에 배포하기 전에 서버를 구성하는 방법의 종류를 알아 보겠습니다&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(AWS) Setting 하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws2/"/>
    <id>https://khs9628.github.io/2019/09/25/aws2/</id>
    <published>2019-09-25T09:40:08.000Z</published>
    <updated>2019-09-28T10:12:11.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EC2-인스턴스-가상환경-세팅"><a href="#EC2-인스턴스-가상환경-세팅" class="headerlink" title="EC2 인스턴스 가상환경 세팅"></a>EC2 인스턴스 가상환경 세팅</h1><p>인스턴스 환경을 현재 사용중인 로컬 컴퓨터의 환경과 같게 만들어주기 위해서 세팅해줍니다.</p><h2 id="pyenv-설치"><a href="#pyenv-설치" class="headerlink" title="pyenv 설치"></a>pyenv 설치</h2><ul><li><p>터미널로 인스턴스에 접속합니다.<br><code>Window</code> - <strong>putty</strong> 접속<br><code>Mac</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -i &lt;pem경로&gt; &lt;user name&gt;@&lt;public dns name&gt;</span><br></pre></td></tr></table></figure></li><li><p>locale 오류(한글 깨짐 현상) fix</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/default/locale</span><br></pre></td></tr></table></figure><p>  <img alt data-src="/img/Django/AWS/aws11.PNG" class="lozad"></p></li><li><p>다시 시작</p></li><li><p><code>apt-get</code> 업데이트</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/pyenv/pyenv/wiki/Common-build-problems" rel="external nofollow noopener noreferrer" target="_blank">Common build problems</a>에 나온 내용부터 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \</span><br><span class="line">libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \</span><br><span class="line">xz-utils tk-dev</span><br></pre></td></tr></table></figure></li><li><p><code>pyenv</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://www.tuwlab.com/ece/26135" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h2 id="zsh-설치"><a href="#zsh-설치" class="headerlink" title="zsh 설치"></a>zsh 설치</h2><p>좀 더 사용성을 좋게 하기 위해 기본 bash을 zsh로 변경합니다.</p><ul><li><p><code>zsh</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install zsh</span><br></pre></td></tr></table></figure></li><li><p><code>oh-my-zsh</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L http://install.ohmyz.sh | sh</span><br></pre></td></tr></table></figure></li><li><p>기본 쉘을 bash에서 zsh로 변경</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chsh ubuntu -s `<span class="built_in">which</span> zsh`</span><br></pre></td></tr></table></figure></li><li><p>재접속</p></li><li><p>zshrc에 pyenv 관련 내용 추가</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  vi ~/.zshrc</span><br></pre></td></tr></table></figure><ul><li><p>2번째 줄 export PATH ~ 부분 주석 해제</p></li><li><p>맨아래 내용 추가</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/home/ubuntu/.pyenv/bin:$PATH&quot;</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br><span class="line">eval &quot;$(pyenv virtualenv-init -)&quot;</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/AWS/aws12.PNG" class="lozad"></p></li><li><p>zshrc 새로고침</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="srv-폴더-권한-수정"><a href="#srv-폴더-권한-수정" class="headerlink" title="/srv 폴더 권한 수정"></a>/srv 폴더 권한 수정</h2><p>로컬의 파일을 이제 인스턴스에 옮길 차례입니다. 파일은 인스턴스의 /srv 폴더로 옮겨야하는데, 권한이 필요합니다. 옮길 수 있도록 아래 명령어로 권한을 ubuntu로 변경합니다. (참고 : <a href="https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_%EA%B3%84%EC%B8%B5%EA%B5%AC%EC%A1%B0_%ED%91%9C%EC%A4%80" rel="external nofollow noopener noreferrer" target="_blank">리눅스 폴더 구조</a>)</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R ubuntu:ubuntu /srv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;EC2-인스턴스-가상환경-세팅&quot;&gt;&lt;a href=&quot;#EC2-인스턴스-가상환경-세팅&quot; class=&quot;headerlink&quot; title=&quot;EC2 인스턴스 가상환경 세팅&quot;&gt;&lt;/a&gt;EC2 인스턴스 가상환경 세팅&lt;/h1&gt;&lt;p&gt;인스턴스 환경을 현재 사용
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(AWS) EC2 생성하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws/"/>
    <id>https://khs9628.github.io/2019/09/25/aws/</id>
    <published>2019-09-25T08:48:03.000Z</published>
    <updated>2019-09-27T10:01:41.804Z</updated>
    
    <content type="html"><![CDATA[<p><img alt="기초구조" data-src="/img/Django/AWS/aws.PNG" class="lozad"></p><h2 id="Django-서버-기본-틀"><a href="#Django-서버-기본-틀" class="headerlink" title="Django 서버 기본 틀"></a>Django 서버 기본 틀</h2><ol><li><p>웹 클라이언트가 <code>웹 서버(Nginx)</code>에 HTTP 프로토콜로 요청(request)를 보낸다.</p></li><li><p>CSS, JavaScript, Images, PDF 문서 등 파일 시스템에 저장되어있는 각종 정적 파일(static file)들은 웹 서버가 바로 처리할 수 있다.</p></li><li><p>정적 파일 외의 동적인 부분은 웹 서버가 처리할 수 없으므로 웹 <code>어플리케이션 서버(uWSGI)</code>에게 위임한다. 웹 서버가 웹 어플리케이션 서버에게 요청을 위임하고, 웹 어플리케이션 서버가 이를 대행해서 웹 서버에게 응답해주는 관계다. 이 사이를 매개해주는게 바로 앞에서 설명한 Unix Socket이다. 웹 서버와 웹 어플리케이션 서버 사이의 통신도 HTTP 프로토콜을 사용할 수 있지만, 같은 OS상에 존재하는 두 개체이므로 더 빠른 uwsgi 프로토콜을 사용한다.</p></li><li><p>웹 클라이언트가 요청한 HTTP 프로토콜의 메시지를, Python call로 변환해줘야 Python으로 기술된 어플리케이션이 동작할 수 있다. Python에서는 이 매핑 관계로 <code>WSGI</code>를 표준으로 사용한다. <code>WSGI</code>는 Web Server Gateway Interface의 약자이다. uWSGI는 이 WSGI 표준의 구현이라고 이해하면 된다. uWSGI는 웹 서버에게서 받은 HTTP 요청을 Python call로 변환해서 Django 프레임워크와 협업한다.</p></li><li><p><code>Django</code> 프레임워크는 사용자가 Python으로 작성한 어플리케이션 코드를 실행한다.</p></li><li><p>또한 필요하다면 <code>ORM(Object-Relational Mapping)</code>을 사용해서 DB에서 데이터를 읽거나 쓴다. 프레임워크가 제공해주는 강력한 기능 중 하나가 ORM이라고 생각한다. SQL 문법을 몰라도, Python 코드로 DB를 다룰 수 있다.</p></li></ol><p><a href="https://technerd.tistory.com/55" rel="external nofollow noopener noreferrer" target="_blank">출처</a></p><h1 id="Django-AWS-EC2로-배포하기"><a href="#Django-AWS-EC2로-배포하기" class="headerlink" title="Django AWS EC2로 배포하기"></a>Django AWS EC2로 배포하기</h1><h2 id="STEP1-AWS-가입하기"><a href="#STEP1-AWS-가입하기" class="headerlink" title="[STEP1] AWS 가입하기"></a>[STEP1] AWS 가입하기</h2><ol><li><a href="https://aws.amazon.com/" rel="external nofollow noopener noreferrer" target="_blank">AWS 사이트</a>에 접속합니다. …</li><li>이메일 주소, 암호, 암호확인, AWS 계정 이름을 입력 하고 [동의하고 계정 만들기]를 클릭합니다.</li><li>해당 정보를 입력합니다. …</li><li>결제 정보를 입력합니다. …</li><li>전화번호를 입력하고 인증을 마무리 합니다.</li></ol><h2 id="STEP2-EC2-가상-서버-생성하기"><a href="#STEP2-EC2-가상-서버-생성하기" class="headerlink" title="[STEP2] EC2 (가상 서버) 생성하기"></a>[STEP2] EC2 (가상 서버) 생성하기</h2><ol><li><p>AWS 접속 후 로그인</p></li><li><p>오른쪽 위에 서울 선택 &amp; 왼쪽상단 Services 클릭<br><img alt data-src="/img/Django/AWS/aws2.PNG" class="lozad"></p></li><li><p>클라우드 서버를 생성하기 위해 EC2 를 클릭한다.</p></li><li><p>인스턴스 시작 클릭</p></li></ol><ol start="5"><li><p>어떤 인스턴스를 실행할지 Ubuntu를 선택 (다른 환경 선택 가능)<br><img alt data-src="/img/Django/AWS/aws1.png" class="lozad"></p></li><li><p>인스턴스 유형은 프리티어에서 사용가능한 두번째 것을 선택하고 ‘검토 및 시작’을 클릭.<br><img alt data-src="/img/Django/AWS/aws3.PNG" class="lozad"></p></li></ol><ol start="7"><li><p>다음 화면에서는 ‘시작하기’를 누른다.<br><img alt data-src="/img/Django/AWS/aws4.PNG" class="lozad"></p></li><li><p><code>&#39;새 키 페어 생성&#39;</code>을 선택하고 ‘키 페어 이름’에 임의의 텍스트를 입력<br>그 다음 <code>&#39;키 페어 다운로드&#39;</code>를 클릭 (이 파일은 한번만 받을 수 있으니 잘 챙겨두자.)</p></li></ol><p><img alt data-src="/img/Django/AWS/aws5.PNG" class="lozad"></p><ol start="9"><li><p>인스턴스 시작을 누르면 시작됨(제대로 시작하기까지는 시간이 좀 걸린다)<br><img alt data-src="/img/Django/AWS/aws6.PNG" class="lozad"></p></li><li><p>탄력적 ip 생성 + 연결(안하셔도 가능)</p></li></ol><p><strong><code>주의</code></strong><br>프리티어에서 Elastic IP 1개를 무료로 사용할 수 있습니다.<br>하지만 Elastic IP는 EC2에 연결해두지 않으면 요금이 청구됩니다.<br>ip가 부족한 상황에서 Elastic ip를 만들어두고 EC2에 연결하지 않으면 ip가 만들어져 있지만 사용되지 않고 있으므로 요금이 청구됩니다.<br>또한, EC2에 연결해두었더라도 EC2가 stop되어있는 상태라면 요금이 청구됩니다.</p><h2 id="STEP3-SSH-를-사용해서-가상-서버-접속하기"><a href="#STEP3-SSH-를-사용해서-가상-서버-접속하기" class="headerlink" title="[STEP3] SSH 를 사용해서 가상 서버 접속하기"></a>[STEP3] SSH 를 사용해서 가상 서버 접속하기</h2><p><strong><em>cf)</em></strong> <a href="https://baked-corn.tistory.com/52" rel="external nofollow noopener noreferrer" target="_blank">SSH란?</a> </p><p><strong><em>mac에 경우</em></strong><br>1) 터미널을 실행하여  private 키를 저장했던 위치로 디렉토리를 이동시킨다.</p><ul><li>cd <del>~</del> 이용</li></ul><p>2) chmod를 이용해서 private 키를 공개적으로 보지 못하게 한다.</p><ul><li>“chmod 400 DjangoServer.pem”</li></ul><p>3) “sudo ssh -i PATH/DjangoServer.pem ubuntu@PUBLIC_DNS”</p><ul><li>PATH는 pwd했을 때 뜨는 경로 대신 채워주면됨</li><li>PUBLIC_DNS는 EC2-실행중인 인스턴스 들어가면 볼 수 있음.</li></ul><p>4) 클라우드 서버에 접속이 되면서 커맨드 창이 열림</p><p><strong><em>Window에 경우</em></strong><br><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" rel="external nofollow noopener noreferrer" target="_blank">putty</a> 프로그램 사용 - putty.exe과 puttygen.exe 다운로드</p><p>1) Puttygen을 통해 public key -&gt; private key<br><img alt data-src="/img/Django/AWS/aws7.PNG" class="lozad"></p><p><img alt data-src="/img/Django/AWS/aws8.PNG" class="lozad"></p><p>2) putty.exe를 통해 접속하기<br><img alt data-src="/img/Django/AWS/aws9.PNG" class="lozad"></p><h2 id="STEP4-보안그룹-설정"><a href="#STEP4-보안그룹-설정" class="headerlink" title="[STEP4] 보안그룹 설정"></a>[STEP4] 보안그룹 설정</h2><p><img alt data-src="/img/Django/AWS/aws10.PNG" class="lozad"></p><blockquote><hr><p>가상서버 : CPU와 메모리를 가진 클라우드 내 서버<br>인스턴스 (instance) : AWS에서 가상 서버를 부르는 용어<br>EC2 (Elastic Compute Cloud) : 가상 인스턴스를 운영하는 서비스<br>보안 그룹(security group) : 인스턴스에 대한 트래픽을 제어하는  가상 방화벽 역할<br>IAM (Identity and Access Management) : 사용자 엑세스 및 암호화 키 관리<br>관리 콘솔 : AWS 서비스를 모두 관리하는 사용자 인터페이스</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt=&quot;기초구조&quot; data-src=&quot;/img/Django/AWS/aws.PNG&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Django-서버-기본-틀&quot;&gt;&lt;a href=&quot;#Django-서버-기본-틀&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(Django) - PostgreSQL 연동</title>
    <link href="https://khs9628.github.io/2019/09/25/Django5/"/>
    <id>https://khs9628.github.io/2019/09/25/Django5/</id>
    <published>2019-09-25T08:48:00.000Z</published>
    <updated>2019-09-26T13:45:38.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PostgreSQL-연동"><a href="#PostgreSQL-연동" class="headerlink" title="PostgreSQL 연동"></a>PostgreSQL 연동</h2><h2 id="STEP1-PostgreSQL-DataBase-설치"><a href="#STEP1-PostgreSQL-DataBase-설치" class="headerlink" title="STEP1. PostgreSQL DataBase 설치"></a>STEP1. PostgreSQL DataBase 설치</h2><p><a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads#windows" rel="external nofollow noopener noreferrer" target="_blank">PostgreSql</a>  링크를 클릭해 다운로드<br>필자는 Window 기반 Os를 사용하고 있기 때문에 Window용 파일을 다운받았다 .<br><a href="http://www.postgresqltutorial.com/install-postgresql/" rel="external nofollow noopener noreferrer" target="_blank">설치 과정</a>은 이곳에 상세히 나와있다.</p><h2 id="STEP2-PgAdmin-실행"><a href="#STEP2-PgAdmin-실행" class="headerlink" title="STEP2. PgAdmin 실행"></a>STEP2. PgAdmin 실행</h2><ul><li>시작 &gt; pgadmin 검색 &gt; 실행</li><li>설치 시 저장한 비밀번호 입력<br><img alt="설치경로" data-src="/img/Django/db1.PNG" class="lozad"></li></ul><h2 id="STEP3-유저-생성"><a href="#STEP3-유저-생성" class="headerlink" title="STEP3. 유저 생성"></a>STEP3. 유저 생성</h2><p><img alt="유저" data-src="/img/Django/db2.PNG" class="lozad"></p><h2 id="STEP4-데이터베이스-생성"><a href="#STEP4-데이터베이스-생성" class="headerlink" title="STEP4. 데이터베이스 생성"></a>STEP4. 데이터베이스 생성</h2><p><img alt="DB" data-src="/img/Django/db3.PNG" class="lozad"></p><h2 id="STEP5-모듈-설치-및-세팅"><a href="#STEP5-모듈-설치-및-세팅" class="headerlink" title="STEP5. 모듈 설치 및 세팅"></a>STEP5. 모듈 설치 및 세팅</h2><p><code>psycopg2</code> 모듈 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install psycopg2</span><br></pre></td></tr></table></figure><p><code>settings.py</code> 파일 수정</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.postgresql_psycopg2'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'DB_NAME'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'User_NAME'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'USER_PW'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'5432'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="STEP5"><a href="#STEP5" class="headerlink" title="STEP5."></a>STEP5.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py makemigrations</span><br><span class="line">$ python manage.py migrate</span><br></pre></td></tr></table></figure><h2 id="STEP6-확인"><a href="#STEP6-확인" class="headerlink" title="STEP6. 확인"></a>STEP6. 확인</h2><p><img alt="TABLE" data-src="/img/Django/db4.PNG" class="lozad"></p><blockquote><p>하루를 기록하다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PostgreSQL-연동&quot;&gt;&lt;a href=&quot;#PostgreSQL-연동&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL 연동&quot;&gt;&lt;/a&gt;PostgreSQL 연동&lt;/h2&gt;&lt;h2 id=&quot;STEP1-PostgreSQL-Data
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Dnote6</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote6/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote6/</id>
    <published>2019-09-24T12:26:33.000Z</published>
    <updated>2019-09-26T13:45:10.361Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Note</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote5/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote5/</id>
    <published>2019-09-24T12:26:32.000Z</published>
    <updated>2019-09-26T08:38:07.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Header</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote4/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote4/</id>
    <published>2019-09-24T08:44:00.000Z</published>
    <updated>2019-09-26T08:37:49.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h2 id="page-routing"><a href="#page-routing" class="headerlink" title="page routing"></a>page routing</h2><p><strong>Project : frontend</strong></p><pre><code>src/        ├── styles/                 ├── utils.scss                └── index.scss        ├── containers/ # 리액트 컨테이너 파일들 집합        ├── components/ # 리액트 컴포넌트 파일들 집합                ├── /structure                        ├── /Header                                ├── Header.js   # header 관련 코드 파일                                ├── Header.scss # header 관련 scss 파일                                └── index.js    # header export   -&gt;  structure.js                        ├── MainStructure.js    # 조각 모음                        ├── MainStructure.scss  # scss 조각모음                        └── index.js            # structure export -&gt;  main.js                └── App.js  -&gt; Root.js -&gt; index.js        ├── pages/ -&gt; APP.js             ├── Auth.js     # login/register page            ├── Main.js     # Main page              ├── Notfound.js # 지정되지 않은 page            └── index.js        └── store/     # redux모듈들과 configure파일들 집합            ├── module/                    ├── index.js                    └── ping.js            └── configure.js</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 라우팅</span></span><br><span class="line">$ npm install react-router-dom</span><br></pre></td></tr></table></figure><h3 id="Root-js"><a href="#Root-js" class="headerlink" title="Root.js"></a>Root.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./components/App"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">"react-redux"</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">"./store/configure"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Root = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">            <span class="comment">// 감싸준다</span></span><br><span class="line">            &lt;BrowserRouter&gt; </span><br><span class="line">                &lt;App /&gt;</span><br><span class="line">            &lt;<span class="regexp">/BrowserRouter&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>Provider&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Root;</span><br></pre></td></tr></table></figure><h3 id="pages-Main-js-노트들이-리스트되어-나타날-페이지"><a href="#pages-Main-js-노트들이-리스트되어-나타날-페이지" class="headerlink" title="pages/Main.js : 노트들이 리스트되어 나타날 페이지"></a>pages/Main.js : 노트들이 리스트되어 나타날 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Main Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Main;</span><br></pre></td></tr></table></figure><h3 id="pages-Auth-js-로그인-회원가입-페이지"><a href="#pages-Auth-js-로그인-회원가입-페이지" class="headerlink" title="pages/Auth.js : 로그인 / 회원가입 페이지"></a>pages/Auth.js : 로그인 / 회원가입 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Auth = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Auth Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Auth;</span><br></pre></td></tr></table></figure><h3 id="pages-NotFound-js-라우팅-되지-않은-곳에서-나타날-페이지"><a href="#pages-NotFound-js-라우팅-되지-않은-곳에서-나타날-페이지" class="headerlink" title="pages/NotFound.js : 라우팅 되지 않은 곳에서 나타날 페이지"></a>pages/NotFound.js : 라우팅 되지 않은 곳에서 나타날 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> NotFound = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>NotFound Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> NotFound;</span><br></pre></td></tr></table></figure><h3 id="pages-index-js-페이지들을-한곳에-모아줌"><a href="#pages-index-js-페이지들을-한곳에-모아줌" class="headerlink" title="pages/index.js : 페이지들을 한곳에 모아줌"></a>pages/index.js : 페이지들을 한곳에 모아줌</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Main &#125; <span class="keyword">from</span> <span class="string">"./Main"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Auth &#125; <span class="keyword">from</span> <span class="string">"./Auth"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> NotFound &#125; <span class="keyword">from</span> <span class="string">"./NotFound"</span>;</span><br></pre></td></tr></table></figure><h3 id="components-App-js"><a href="#components-App-js" class="headerlink" title="components/App.js"></a>components/App.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Switch, Route &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Main, Auth, NotFound &#125; <span class="keyword">from</span> <span class="string">"../pages"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Switch&gt;</span><br><span class="line">          &lt;Route path=<span class="string">"/"</span> exact=&#123;<span class="literal">true</span>&#125; component=&#123;Main&#125; /&gt;</span><br><span class="line">          &lt;Route path=<span class="string">"/auth/:kind"</span> exact=&#123;<span class="literal">true</span>&#125; component=&#123;Auth&#125; /&gt;</span><br><span class="line">          &lt;Route component=&#123;NotFound&#125; /&gt;</span><br><span class="line">        &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/pages.PNG" class="lozad"></p><h2 id="Header-만들기"><a href="#Header-만들기" class="headerlink" title="Header 만들기"></a>Header 만들기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-icons open-color include-media classnames</span><br><span class="line"><span class="comment"># react-icons : 로그아웃 버튼</span></span><br><span class="line"><span class="comment"># open-color : color제공 라이브러리</span></span><br><span class="line"><span class="comment"># include-media : 미디어 쿼리를 좀더 자유롭게 사용하게 해줌</span></span><br><span class="line"><span class="comment"># classnames : 여러개의 클래스를 한번에 사용하게도 하고, scss와 bind하여 굳이 styles라는 이름을 사용하지 않아도 되게하는 라이브러리</span></span><br></pre></td></tr></table></figure><h2 id="기본-동작-구조"><a href="#기본-동작-구조" class="headerlink" title="기본 동작 구조"></a>기본 동작 구조</h2><p>components(header) -&gt; MainStructure -&gt; page -&gt; App -&gt; Root -&gt; index</p><h3 id="main-scss-설정-styles-utils-scss"><a href="#main-scss-설정-styles-utils-scss" class="headerlink" title="main scss 설정(styles/utils.scss)"></a>main scss 설정(styles/utils.scss)</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"~open-color/open-color"</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">"~include-media/dist/include-media"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$breakpoints</span>: (</span><br><span class="line">    small: <span class="number">320px</span>,</span><br><span class="line">    medium: <span class="number">768px</span>,</span><br><span class="line">    large: <span class="number">1024px</span>,</span><br><span class="line">    wide: <span class="number">1400px</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="header-설정"><a href="#header-설정" class="headerlink" title="header 설정"></a>header 설정</h3><p><code>/components/structure/Header/Header.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./Header.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Link &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MdLock &#125; <span class="keyword">from</span> <span class="string">"react-icons/md"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Header = <span class="function">(<span class="params">&#123; onLogout &#125;</span>) =&gt;</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"header"</span>)&#125;&gt;</span><br><span class="line">        &lt;Link to=&#123;<span class="string">"/"</span>&#125; className=&#123;cx(<span class="string">"logo"</span>)&#125;&gt;</span><br><span class="line">            D-Note</span><br><span class="line">        &lt;<span class="regexp">/Link&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div className=&#123;cx("logout")&#125;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;MdLock onClick=&#123;onLogout&#125; /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Header;</span><br></pre></td></tr></table></figure><p><code>/components/structure/Header/Header.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"../../../styles/utils.scss"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$oc-violet-6</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5rem</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.logo</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">cursor</span>: pointer;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">1rem</span>;</span><br><span class="line"></span><br><span class="line">        user-<span class="selector-tag">select</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.logout</span> &#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: auto;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">1rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export</span></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./Header'</span>;</span><br></pre></td></tr></table></figure><h3 id="MainStructure-js-여러개의-components를-모아주는-곳"><a href="#MainStructure-js-여러개의-components를-모아주는-곳" class="headerlink" title="MainStructure.js : 여러개의 components를 모아주는 곳"></a>MainStructure.js : 여러개의 components를 모아주는 곳</h3><p><code>components/structure/MainStructure.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="comment">// import styles from "./MainStructure.scss";</span></span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">"./Header"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const cx = classNames.bind(styles);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MainStructure = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;Header /&gt;</span><br><span class="line">        &lt;main&gt;&#123;children&#125;&lt;<span class="regexp">/main&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> MainStructure;</span><br></pre></td></tr></table></figure><p><code>components/structure/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./MainStructure'</span>;</span><br></pre></td></tr></table></figure><h3 id="pages-Main-js"><a href="#pages-Main-js" class="headerlink" title="pages/Main.js"></a>pages/Main.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> MainStructure <span class="keyword">from</span> <span class="string">"../components/structure/MainStructure"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">MainStructure</span>&gt;</span>Main Page<span class="tag">&lt;/<span class="name">MainStructure</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Main;</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/header.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D (Backend)</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote3/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote3/</id>
    <published>2019-09-24T08:16:36.000Z</published>
    <updated>2019-09-26T08:37:46.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h2 id="장고-API-구현"><a href="#장고-API-구현" class="headerlink" title="장고 API 구현"></a>장고 API 구현</h2><table><thead><tr><th align="left">URL</th><th align="center">METHOD</th><th align="center">Description</th><th align="center">Params</th><th align="center">Return</th></tr></thead><tbody><tr><td align="left">/api/notes/</td><td align="center">GET</td><td align="center">글 목록</td><td align="center">X</td><td align="center">[..{ Notes }]</td></tr><tr><td align="left">/api/notes/</td><td align="center">POST</td><td align="center">새로운 글 작성</td><td align="center">(text)</td><td align="center"></td></tr><tr><td align="left">/api/notes/{id}</td><td align="center">GET</td><td align="center">글 상세보기</td><td align="center">(Notes_id)</td><td align="center">{ Note }</td></tr><tr><td align="left">api/notes/{id}</td><td align="center">PATCH</td><td align="center">글 수정</td><td align="center">(Notes_id)</td><td align="center"></td></tr><tr><td align="left">api/notes/{id}</td><td align="center">DELETE</td><td align="center">글 삭제</td><td align="center">(Notes_id)</td><td align="center"></td></tr></tbody></table><h3 id="notes-app-생성"><a href="#notes-app-생성" class="headerlink" title="notes app 생성"></a>notes app 생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py startapp notes</span><br><span class="line"><span class="comment"># restframework install</span></span><br><span class="line">$ pip install djangorestframework</span><br></pre></td></tr></table></figure><h3 id="app-추가"><a href="#app-추가" class="headerlink" title="app 추가"></a>app 추가</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># settings.py</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="comment"># notes 앱 추가</span></span><br><span class="line">    <span class="string">'notes'</span>,</span><br><span class="line">    <span class="comment"># rest framework 추가</span></span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="models-py-모델-구성"><a href="#models-py-모델-구성" class="headerlink" title="models.py : 모델 구성"></a>models.py : 모델 구성</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notes</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    text = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    created_at = models.DateTimeField(auto_now=<span class="literal">False</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.text</span><br></pre></td></tr></table></figure><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ (venv) python manage.py makemigrations</span><br><span class="line">$ (venv) python manage.py migrate</span><br></pre></td></tr></table></figure><h3 id="notes-serializers-py-모델을-참조하여-구성"><a href="#notes-serializers-py-모델을-참조하여-구성" class="headerlink" title="notes/serializers.py : 모델을 참조하여 구성"></a>notes/serializers.py : 모델을 참조하여 구성</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Notes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Notes</span><br><span class="line">        fields = (<span class="string">"id"</span>, <span class="string">"text"</span>)</span><br></pre></td></tr></table></figure><h3 id="note-views-py-실제-controller-serializer-참조"><a href="#note-views-py-실제-controller-serializer-참조" class="headerlink" title="note/views.py : 실제 controller (serializer 참조)"></a>note/views.py : 실제 controller (serializer 참조)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> NoteSerializer</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Notes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    serializer_class = NoteSerializer</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Notes.objects.all().order_by(<span class="string">"-created_at"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">perform_create</span><span class="params">(self, serializer)</span>:</span></span><br><span class="line">        serializer.save()</span><br></pre></td></tr></table></figure><h3 id="urls-py-API-라우팅"><a href="#urls-py-API-라우팅" class="headerlink" title="urls.py : API 라우팅"></a>urls.py : API 라우팅</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> notes <span class="keyword">import</span> urls</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> include, url</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">"admin/"</span>, admin.site.urls), </span><br><span class="line">    url(<span class="string">r"^api/"</span>, include(urls))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> NoteViewSet</span><br><span class="line"></span><br><span class="line"><span class="comment"># notes/urls.py</span></span><br><span class="line">note_list = NoteViewSet.as_view(&#123;<span class="string">"get"</span>: <span class="string">"list"</span>, <span class="string">"post"</span>: <span class="string">"create"</span>&#125;)</span><br><span class="line"></span><br><span class="line">note_detail = NoteViewSet.as_view(</span><br><span class="line">    &#123;<span class="string">"get"</span>: <span class="string">"retrieve"</span>, <span class="string">"patch"</span>: <span class="string">"partial_update"</span>, <span class="string">"delete"</span>: <span class="string">"destroy"</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">"^notes/$"</span>, note_list, name=<span class="string">"note-list"</span>),</span><br><span class="line">    url(<span class="string">"^notes/(?P&lt;pk&gt;[0-9]+)/$"</span>, note_detail, name=<span class="string">"note-detail"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D (Redux)</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote2/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote2/</id>
    <published>2019-09-24T07:44:39.000Z</published>
    <updated>2019-09-26T08:37:39.114Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://velog.io/@killi8n/Django%EC%99%80-React%EB%A1%9C-%ED%95%9C%EC%A4%84-%EB%85%B8%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0-2.-React-Django-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1.-najmam6ds2" rel="external nofollow noopener noreferrer" target="_blank">참고 블로그</a></p><h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h2 id="STEP2-Redux-설정"><a href="#STEP2-Redux-설정" class="headerlink" title="STEP2. Redux 설정"></a>STEP2. Redux 설정</h2><p>Redux는 글로벌하게 상태관리를 할수있게 도와주는 도구</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install redux react-redux redux-observable rxjs rxjs-compat</span><br></pre></td></tr></table></figure><p><strong><em>cf)</em></strong><br><code>redux-observable</code></p><blockquote><p>rxjs의 개념이 도입된 라이브러리</p></blockquote><p><code>rxjs</code></p><blockquote><p>RxJS는 Observable를 사용하여 비동기 및 이벤트 기반 프로그램을 작성하기 위한 라이브러리이다.</p></blockquote><h3 id="store-modules-ping-js"><a href="#store-modules-ping-js" class="headerlink" title="store/modules/ping.js"></a>store/modules/ping.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PING = <span class="string">"PING"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  ping: <span class="string">"ping"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ping = <span class="function">(<span class="params">state = initialState, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> PING:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ping: <span class="string">"pong"</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="store-modules-index-js"><a href="#store-modules-index-js" class="headerlink" title="store/modules/index.js"></a>store/modules/index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ping &#125; <span class="keyword">from</span> <span class="string">"./ping"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> rootReducers = combineReducers(&#123; ping &#125;);</span><br></pre></td></tr></table></figure><h3 id="store-configure-js"><a href="#store-configure-js" class="headerlink" title="store/configure.js"></a>store/configure.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createEpicMiddleware &#125; <span class="keyword">from</span> <span class="string">"redux-observable"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; rootReducers &#125; <span class="keyword">from</span> <span class="string">"./modules"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 크롬 데브 툴스 설정입니다.</span></span><br><span class="line"><span class="keyword">const</span> composeEnhancers = <span class="built_in">window</span>.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;</span><br><span class="line"><span class="keyword">const</span> epicMiddleware = createEpicMiddleware();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(</span><br><span class="line">    rootReducers,</span><br><span class="line">    composeEnhancers(applyMiddleware(epicMiddleware))</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd" rel="external nofollow noopener noreferrer" target="_blank">redux-devtools 확장프로그램</a></p><p><img alt="실행화면" data-src="/img/React/redux.PNG" class="lozad"></p><h2 id="오류"><a href="#오류" class="headerlink" title="오류"></a>오류</h2><p><code>No store found.</code> -&gt; npm start 다시 해보면 뜰거임</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://velog.io/@killi8n/Django%EC%99%80-React%EB%A1%9C-%ED%95%9C%EC%A4%84-%EB%85%B8%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%A4%EC%9
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D (Settings)</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote1/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote1/</id>
    <published>2019-09-24T07:43:34.000Z</published>
    <updated>2019-09-26T08:37:30.535Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://velog.io/@killi8n/Django%EC%99%80-React%EB%A1%9C-%ED%95%9C%EC%A4%84-%EB%85%B8%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0-2.-React-Django-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1.-najmam6ds2" rel="external nofollow noopener noreferrer" target="_blank">참고 블로그</a></p><h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h2 id="STEP1-초기-설정"><a href="#STEP1-초기-설정" class="headerlink" title="STEP1. 초기 설정"></a>STEP1. 초기 설정</h2><h3 id="Django-앱생성"><a href="#Django-앱생성" class="headerlink" title="Django 앱생성"></a>Django 앱생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 가상환경 생성</span></span><br><span class="line">python –m venv venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 가상환경 접속</span></span><br><span class="line"><span class="built_in">source</span> venv/Scripts/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># django 프로젝트 생성</span></span><br><span class="line">(venv) pip install django</span><br><span class="line">(venv) django-admin startproject dnote</span><br><span class="line">(venv) <span class="built_in">cd</span> dnote</span><br><span class="line">(venv) python manage.py migrate</span><br><span class="line">(venv) python manage.py runserver <span class="comment"># 실행확인</span></span><br></pre></td></tr></table></figure><h3 id="react-앱생성"><a href="#react-앱생성" class="headerlink" title="react 앱생성"></a>react 앱생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g create-react-app</span><br><span class="line">create-react-app frontend</span><br><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line">npm start <span class="comment"># 실행확인</span></span><br></pre></td></tr></table></figure><h3 id="React-개발-환경-설정-및-구조-잡기-sass-설정"><a href="#React-개발-환경-설정-및-구조-잡기-sass-설정" class="headerlink" title="React - 개발 환경 설정 및 구조 잡기.(sass 설정)"></a>React - 개발 환경 설정 및 구조 잡기.(sass 설정)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frontend</span><br><span class="line"><span class="comment"># 관련 패키지 다운</span></span><br><span class="line">npm install</span><br><span class="line">npm run eject</span><br><span class="line"><span class="comment"># 오류시 git add. / git commit -m "" 해줘야함 </span></span><br><span class="line"><span class="comment"># -&gt; 최상 디렉터리에(해당 폴더 git이 있어서 충돌)</span></span><br><span class="line">npm start <span class="comment"># react 시작하기</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sass 설정</span></span><br><span class="line">npm install --save-dev node-sass</span><br><span class="line">npm install --save-dev sass-loader</span><br></pre></td></tr></table></figure><h3 id="config-paths-js"><a href="#config-paths-js" class="headerlink" title="config/paths.js"></a>config/paths.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config after eject: we're in ./config/</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// 추가해줍니다.</span></span><br><span class="line">  styles: resolveApp(<span class="string">"src/styles"</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="React-개발-환경-설정-및-구조-잡기-프로젝트-구조잡기"><a href="#React-개발-환경-설정-및-구조-잡기-프로젝트-구조잡기" class="headerlink" title="React - 개발 환경 설정 및 구조 잡기.(프로젝트 구조잡기)"></a>React - 개발 환경 설정 및 구조 잡기.(프로젝트 구조잡기)</h2><p><strong>Project : frontend</strong></p><pre><code>frontend/        # 프로젝트의 루트 디렉토리입니다.    ├── config/       # react-app 의 설정파일이 모여있는 폴더입니다.    ├── public/       #    ├── scripts/      #    ├── node_modules/   #     └── src/        ├── styles/     # scss/img 등 디자인 파일들 집합        ├── containers/ # 리액트 컨테이너 파일들 집합        ├── components/ # 리액트 컴포넌트 파일들 집합        ├── pages/    # Routing에서 사용될 page 파일들 집합        └── store/     # redux모듈들과 configure파일들 집합</code></pre><h3 id="NODE-PATH-지정"><a href="#NODE-PATH-지정" class="headerlink" title="NODE_PATH 지정"></a>NODE_PATH 지정</h3><p><code>src/.env</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NODE_PATH=src</span><br></pre></td></tr></table></figure><h3 id="기본-구조-세팅-app-js-gt-root-js-gt-index-js"><a href="#기본-구조-세팅-app-js-gt-root-js-gt-index-js" class="headerlink" title="기본 구조 세팅 app.js -&gt; root.js -&gt; index.js"></a>기본 구조 세팅 app.js -&gt; root.js -&gt; index.js</h3><p><code>src/components/App.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>App.js<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p><code>src/Root.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./components/App"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Root = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span>;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export default Root;</span></span><br></pre></td></tr></table></figure><p><code>src/index.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> Root <span class="keyword">from</span> <span class="string">"./Root"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./style/index.scss'</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> serviceWorker <span class="keyword">from</span> <span class="string">'./serviceWorker'</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">Root</span> /&gt;</span>, document.getElementById("root"));</span></span><br><span class="line"><span class="xml">serviceWorker.unregister();</span></span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/result1.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://velog.io/@killi8n/Django%EC%99%80-React%EB%A1%9C-%ED%95%9C%EC%A4%84-%EB%85%B8%ED%8A%B8-%EC%95%B1-%EB%A7%8C%EB%93%A4%EC%9
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 소셜 로그인</title>
    <link href="https://khs9628.github.io/2019/09/22/CBV6/"/>
    <id>https://khs9628.github.io/2019/09/22/CBV6/</id>
    <published>2019-09-22T08:52:13.000Z</published>
    <updated>2019-09-24T06:23:46.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-3-소셜-로그인-간편로그인"><a href="#Django-CBV-프로젝트-3-소셜-로그인-간편로그인" class="headerlink" title="Django CBV 프로젝트 3. 소셜 로그인 (간편로그인)"></a>Django CBV 프로젝트 3. 소셜 로그인 (간편로그인)</h1><p><a href="https://swarf00.github.io/2018/12/14/logout.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><h2 id="구조-변경-리팩토링"><a href="#구조-변경-리팩토링" class="headerlink" title="구조 변경(리팩토링)"></a>구조 변경(리팩토링)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># static 파일설정</span></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATIC_ROOT = <span class="string">'./static'</span></span><br><span class="line"><span class="comment"># STATIC_URL: 이 경로로 시작되는 요청은 static 핸들러로 라우팅</span></span><br><span class="line"><span class="comment"># STATIC_ROOT: collectstatic 커맨드로 static 파일들을 모을 때 저장될 디렉토리 경로</span></span><br></pre></td></tr></table></figure><h2 id="프로젝트-구성"><a href="#프로젝트-구성" class="headerlink" title="프로젝트 구성"></a>프로젝트 구성</h2><pre><code># Projectstatic              # python manage.py collectstatic 명령어 수행시 파일이 저장되는 디렉토리입니다.|      minitutorial/        # 프로젝트의 루트 디렉토리입니다. 디렉토리이름은 변경하셔도 됩니다.├── manage.py       # CLI에서 장고 프로젝트의 다양한 기능들을 사용할 수 있게 해주는 유틸리티입니다.└── minitutorial/   # 실제 프로젝트 디렉토리입니다. 프로젝트의 설정을 할 수 있으며, 파이썬 패키지로 사용됩니다.    ├── __init__.py # 파이썬 패키지에 필수로 들어있는 초기화 파일입니다. 프로젝트를 패키지로 불러올 때 가장 먼저 실행되는 스크립트입니다.    ├── settings.py # 프로젝트 설정파일입니다.    ├── urls.py     # 웹 url들을 view와 매칭시켜주는 파일입니다.    └── wsgi.py     # WSGI 호환 웹 서버로 서비스할 때 실행되는 시작점입니다.-------------------------------------------------# APPbbs/├── __init__.py      # 앱 패키지 초기화 스크립트입니다.├── admin.py         # 장고 어드민 설정파일입니다. 어드민에 등록된 모델은 장고에서 자동 생성하는 어드민 페이지에서 관리할 수 있습니다.├── apps.py          # 앱 설정 파일입니다.└── migrations/      # 데이터베이스 마이그레이션 디렉토리. 장고 ORM은 모델 스키마의 변화가 생길 때마다 migration 파일을 생성하고 이것을 통해 스키마를 업데이트 합니다. migration 파일을 통해 협업자들과 함께 데이터베이스의 스키마를 동기화할 수 있습니다.    ├── __init__.py  # 마이그레이션 패키지 초기화 스크립트입니다.    ├── models.py        # 앱 모델 파일입니다. 게시판의 모든 데이터를 저장할 데이터베이스를 장고 ORM을 통해 모델화합니다.    ├── tests.py         # 앱 내의 기능들을 테스트하는 기능을 구현하는 파일입니다.    ├── views.py         # 앱의 화면(template)과 데이터(model) 사이에서 사용자의 요청을 처리하여 모델에 저장하고, 모델에 저장된 데이터를 화면에 전달하는 역할을 합니다.├── static        └──css/            └──  bss.css    # 게시판 관련 css 파일입니다.└── templates/        ├── base.html                # 기본 틀이 되는 html        ├── article_list.html        # 게시글 목록이 보이는 html                ├── article_detail.html      # 특정 게시글이 보이는 html        └── article_update.html      # 새로운 게시글이나 특정 글을 update 하는 html-----------------------------------------------------user/├── __init__.py      # 앱 패키지 초기화 스크립트입니다.├── admin.py         # 장고 어드민 설정파일입니다. 어드민에 등록된 모델은 장고에서 자동 생성하는 어드민 페이지에서 관리할 수 있습니다.├── apps.py          # 앱 설정 파일입니다.└── migrations/      # 데이터베이스 마이그레이션 디렉토리. 장고 ORM은 모델 스키마의 변화가 생길 때마다 migration 파일을 생성하고 이것을 통해 스키마를 업데이트 합니다. migration 파일을 통해 협업자들과 함께 데이터베이스의 스키마를 동기화할 수 있습니다.    ├── __init__.py  # 마이그레이션 패키지 초기화 스크립트입니다.    ├── models.py        # 앱 모델 파일입니다. 회원의 모든 데이터를 저장할 데이터베이스를 장고 ORM을 통해 모델화합니다.    ├── tests.py         # 앱 내의 기능들을 테스트하는 기능을 구현하는 파일입니다.    ├── views.py         # 앱의 화면(template)과 데이터(model) 사이에서 사용자의 요청을 처리하여 모델에 저장하고, 모델에 저장된 데이터를 화면에 전달하는 역할을 합니다.    ├── mixins.py        # 기본 메소드(인증보내기)를 지정해서 코드를 단순화 합니다.    ├── validators.py    # 객체를 검증할 수 있는 기능을 제공 합니다.               ├── forms.py         # 앱의 form의 인자와 화면단을 구성해주는 파일입니다.├── static        └──css/            └──  user.css    # 회원 관련 css 파일입니다.         └──js            └── social_login.js # 로그인 관련 js 파일입니다.        └──img            ├──  kakao.img    # 카카오 소셜로그인 관련 파일입니다.                └──  naver.img    # 네이버 소셜로그인 관련 파일입니다.├── oauth    ├── /providers            └── naver.py      #     └── backends.py           # 네아로 계정을 local계정에 저장하도록 하는 └── templates/user/    ├── login_form.html                # 로그인 form html    ├── resend_verify_email.html       # 재 인증 메일 form html           ├── user_form.html                 # 회원가입 form html    ├── particals            ├── social_login_panel.html # 소셜로그인 form 부분 html 입니다.            └── form_field.html         # 공통 부분을 나눠 include 하기위한 html 파일입니다.    └── /email        └── registration_verification.html      # 사용자 email 보낼 때 form html</code></pre><h2 id="소셜-로그인-구현"><a href="#소셜-로그인-구현" class="headerlink" title="소셜 로그인 구현"></a>소셜 로그인 구현</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">pip install oauth</span><br></pre></td></tr></table></figure><h2 id="네아로-지정-settings-py"><a href="#네아로-지정-settings-py" class="headerlink" title="네아로 지정 (settings.py)"></a>네아로 지정 (settings.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NAVER_CLIENT_ID = <span class="string">'your client id'</span></span><br><span class="line">NAVER_SECRET_KEY = <span class="string">'your secret key'</span></span><br><span class="line"></span><br><span class="line">AUTHENTICATION_BACKENDS = [</span><br><span class="line">    <span class="string">'user.oauth.backends.NaverBackend'</span>,           <span class="comment"># 네이버 인증백엔드</span></span><br><span class="line">    <span class="string">'django.contrib.auth.backends.ModelBackend'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="소셜-로그인-폼-생성"><a href="#소셜-로그인-폼-생성" class="headerlink" title="소셜 로그인 폼 생성"></a>소셜 로그인 폼 생성</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% static '/img/kakao_login.png' as kakao_button %&#125;</span><br><span class="line">&#123;% static '/img/kakao_login_ov.png' as kakao_button_hover %&#125;</span><br><span class="line">&#123;% static '/img/naver_login_green.png' as naver_button %&#125;</span><br><span class="line">&#123;% static '/img/naver_login_white.png' as naver_button_hover %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default user-panel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line">        &#123;&#123; panel_name &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body text-center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; kakao_button &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">onmouseover</span>=<span class="string">"this.src='&#123;&#123; kakao_button_hover &#125;&#125;'"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">onmouseleave</span>=<span class="string">"this.src='&#123;&#123; kakao_button &#125;&#125;'"</span><span class="attr">height</span>=<span class="string">"34"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">onclick</span>=<span class="string">"naverLogin()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; naver_button &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">onmouseover</span>=<span class="string">"this.src='&#123;&#123; naver_button_hover &#125;&#125;'"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">onmouseleave</span>=<span class="string">"this.src='&#123;&#123; naver_button &#125;&#125;'"</span><span class="attr">height</span>=<span class="string">"34"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'js/social_login.js' %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- login / register form 에 include --&gt;</span></span><br><span class="line">&#123;% include 'user/partials/social_login_panel.html' with panel_name='소셜로그인' %&#125;</span><br></pre></td></tr></table></figure><p><img alt="form" data-src="/img/Django/social.PNG" class="lozad"></p><h2 id="클릭시-동작하는-js"><a href="#클릭시-동작하는-js" class="headerlink" title="클릭시 동작하는 js"></a>클릭시 동작하는 js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// user/static/user/js/social_login.js</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildQuery</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.keys(params).map(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;<span class="keyword">return</span> key + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(params[key])&#125;).join(<span class="string">'&amp;'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildUrl</span>(<span class="params">baseUrl, queries</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> baseUrl + <span class="string">'?'</span> + buildQuery(queries)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">naverLogin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    params = &#123;</span><br><span class="line">        response_type: <span class="string">'code'</span>,</span><br><span class="line">        client_id:<span class="string">'lkfcHFxyz5UGC0gF81Ym'</span>,</span><br><span class="line">        redirect_uri: location.origin + <span class="string">'/user/login/social/naver/callback/'</span> + location.search,</span><br><span class="line">        state: <span class="built_in">document</span>.querySelector(<span class="string">'[name=csrfmiddlewaretoken]'</span>).value</span><br><span class="line">    &#125;</span><br><span class="line">    url = buildUrl(<span class="string">'https://nid.naver.com/oauth2.0/authorize'</span>, params)</span><br><span class="line">    location.replace(url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img alt="form1" data-src="/img/Django/social2.PNG" class="lozad"></p><h2 id="CallBackView-작성"><a href="#CallBackView-작성" class="headerlink" title="CallBackView 작성"></a>CallBackView 작성</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.views.generic.base <span class="keyword">import</span> TemplateView, View</span><br><span class="line"><span class="keyword">from</span> django.middleware.csrf <span class="keyword">import</span> _compare_salted_tokens</span><br><span class="line"><span class="keyword">from</span> user.oauth.providers.naver <span class="keyword">import</span> NaverLoginMixin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SocialLoginCallbackView</span><span class="params">(NaverLoginMixin, View)</span>:</span></span><br><span class="line"></span><br><span class="line">    success_url = settings.LOGIN_REDIRECT_URL</span><br><span class="line">    failure_url = settings.LOGIN_URL</span><br><span class="line">    required_profiles = [<span class="string">'email'</span>, <span class="string">'nickname'</span>]</span><br><span class="line"></span><br><span class="line">    model = get_user_model()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line"></span><br><span class="line">        provider = kwargs.get(<span class="string">'provider'</span>)</span><br><span class="line">        success_url = request.GET.get(<span class="string">'next'</span>, self.success_url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> provider == <span class="string">'naver'</span>: <span class="comment"># provider가 naver 인경우</span></span><br><span class="line">            csrf_token = request.GET.get(<span class="string">'state'</span>)</span><br><span class="line">            code = request.GET.get(<span class="string">'code'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> _compare_salted_tokens(csrf_token, request.COOKIES.get(<span class="string">'csrftoken'</span>)):</span><br><span class="line">                messages.error(request, <span class="string">'잘못된 경로로 로그인하셨습니다.'</span>, extra_tags=<span class="string">'danger'</span>)</span><br><span class="line">                <span class="keyword">return</span> HttpResponseRedirect(self.failure_url)</span><br><span class="line">            is_success, error = self.login_with_naver(csrf_token, code)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> is_success: <span class="comment"># 로그인이 실패할 경우</span></span><br><span class="line">                messages.error(request, error, extra_tags=<span class="string">'danger'</span>)</span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(success_url <span class="keyword">if</span> is_success <span class="keyword">else</span> self.failure_url)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(self.failure_url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_session</span><span class="params">(self, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> kwargs.items():</span><br><span class="line">            self.request.session[key] = value</span><br></pre></td></tr></table></figure><h2 id="naver-py-작성"><a href="#naver-py-작성" class="headerlink" title="naver.py 작성"></a>naver.py 작성</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user/oauth/providers/naver.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaverClient</span>:</span></span><br><span class="line">    client_id = settings.NAVER_CLIENT_ID</span><br><span class="line">    secret_key = settings.NAVER_SECRET_KEY</span><br><span class="line">    grant_type = <span class="string">'authorization_code'</span></span><br><span class="line"></span><br><span class="line">    auth_url = <span class="string">'https://nid.naver.com/oauth2.0/token'</span></span><br><span class="line">    profile_url = <span class="string">'https://openapi.naver.com/v1/nid/me'</span></span><br><span class="line"></span><br><span class="line">    __instance = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> isinstance(cls.__instance, cls):</span><br><span class="line">            cls.__instance = super().__new__(cls, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls.__instance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_access_token</span><span class="params">(self, state, code)</span>:</span></span><br><span class="line">        res = requests.get(self.auth_url, params=&#123;<span class="string">'client_id'</span>: self.client_id, <span class="string">'client_secret'</span>: self.secret_key, <span class="string">'grant_type'</span>: self.grant_type, <span class="string">'state'</span>: state, <span class="string">'code'</span>: code&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res.ok, res.json()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_profile</span><span class="params">(self, access_token, token_type=<span class="string">'Bearer'</span>)</span>:</span></span><br><span class="line">        res = requests.get(self.profile_url, headers=&#123;<span class="string">'Authorization'</span>: <span class="string">'&#123;&#125; &#123;&#125;'</span>.format(token_type, access_token)&#125;).json()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> res.get(<span class="string">'resultcode'</span>) != <span class="string">'00'</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>, res.get(<span class="string">'message'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span>, res.get(<span class="string">'response'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaverLoginMixin</span>:</span></span><br><span class="line">    naver_client = NaverClient()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login_with_naver</span><span class="params">(self, state, code)</span>:</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 인증토근 발급</span></span><br><span class="line">        is_success, token_infos = self.naver_client.get_access_token(state, code)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> is_success:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">'&#123;&#125; [&#123;&#125;]'</span>.format(token_infos.get(<span class="string">'error_desc'</span>), token_infos.get(<span class="string">'error'</span>))</span><br><span class="line"></span><br><span class="line">        access_token = token_infos.get(<span class="string">'access_token'</span>)</span><br><span class="line">        refresh_token = token_infos.get(<span class="string">'refresh_token'</span>)</span><br><span class="line">        expires_in = token_infos.get(<span class="string">'expires_in'</span>)</span><br><span class="line">        token_type = token_infos.get(<span class="string">'token_type'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 네이버 프로필 얻기</span></span><br><span class="line">        is_success, profiles = self.get_naver_profile(access_token, token_type)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> is_success:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>, profiles</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 사용자 생성 또는 업데이트</span></span><br><span class="line">        user, created = self.model.objects.get_or_create(email=profiles.get(<span class="string">'email'</span>))</span><br><span class="line">        <span class="keyword">if</span> created: <span class="comment"># 사용자 생성할 경우</span></span><br><span class="line">            user.set_password(<span class="literal">None</span>)</span><br><span class="line">        user.name = profiles.get(<span class="string">'nickname'</span>)</span><br><span class="line">        user.is_active = <span class="literal">True</span></span><br><span class="line">        user.save()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 로그인</span></span><br><span class="line">        login(self.request, user, <span class="string">'user.oauth.backends.NaverBackend'</span>)  <span class="comment"># NaverBackend 를 통한 인증 시도</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 세션데이터 추가</span></span><br><span class="line">        self.set_session(access_token=access_token, refresh_token=refresh_token, expires_in=expires_in, token_type=token_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>, user</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_naver_profile</span><span class="params">(self, access_token, token_type)</span>:</span></span><br><span class="line">        is_success, profiles = self.naver_client.get_profile(access_token, token_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> is_success:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span>, profiles</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> profile <span class="keyword">in</span> self.required_profiles:</span><br><span class="line">            <span class="keyword">if</span> profile <span class="keyword">not</span> <span class="keyword">in</span> profiles:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">'&#123;&#125;은 필수정보입니다. 정보제공에 동의해주세요.'</span>.format(profile)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>, profiles</span><br></pre></td></tr></table></figure><h2 id="인증-백엔드-작성"><a href="#인증-백엔드-작성" class="headerlink" title="인증 백엔드 작성"></a>인증 백엔드 작성</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user/oauth/backends.py</span></span><br><span class="line"><span class="comment"># NaverBackend 백엔드는 기본인증백엔드(ModelBackend) 를 상속받아 대부분의 기능들을 그대로 사용</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.backends <span class="keyword">import</span> ModelBackend</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AnonymousUser</span><br><span class="line"></span><br><span class="line">UserModel = get_user_model()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NaverBackend</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, request, username=None,**kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            username = kwargs.get(UserModel.USERNAME_FIELD)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = UserModel._default_manager.get_by_natural_key(username)</span><br><span class="line">        <span class="keyword">except</span> UserModel.DoesNotExist:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> self.user_can_authenticate(user):</span><br><span class="line">                <span class="keyword">return</span> user</span><br></pre></td></tr></table></figure><h2 id="urls-py-등록"><a href="#urls-py-등록" class="headerlink" title="urls.py 등록"></a>urls.py 등록</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.views <span class="keyword">import</span> SocialLoginCallbackView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># 생략</span></span><br><span class="line">    path(<span class="string">'user/login/social/&lt;provider&gt;/callback/'</span>, SocialLoginCallbackView.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/Django/social3.PNG" class="lozad"></p><h1 id="게시판-글쓴이-연동"><a href="#게시판-글쓴이-연동" class="headerlink" title="게시판 글쓴이 연동"></a>게시판 글쓴이 연동</h1><h2 id="models-py-수정"><a href="#models-py-수정" class="headerlink" title="models.py 수정"></a>models.py 수정</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># author     = models.CharField('작성자', max_length=16, null=False)-&gt;</span></span><br><span class="line">author     = models.ForeignKey(<span class="string">'user.User'</span>, related_name=<span class="string">'articles'</span>, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><h2 id="views-py-수정"><a href="#views-py-수정" class="headerlink" title="views.py 수정"></a>views.py 수정</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#생략</span></span><br><span class="line"><span class="keyword">if</span> pk:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> article:</span><br><span class="line">        <span class="keyword">raise</span> Http404(<span class="string">'invalid pk'</span>)</span><br><span class="line">    <span class="keyword">elif</span> article.author != self.request.user:                             <span class="comment"># 작성자가 수정하려는 사용자와 다른 경우</span></span><br><span class="line">        <span class="keyword">raise</span> Http404(<span class="string">'invalid user'</span>)</span><br><span class="line"><span class="keyword">return</span> article</span><br><span class="line"></span><br><span class="line"><span class="comment"># 작성자를 현재 사용자로 설정</span></span><br><span class="line">post_data[<span class="string">'author'</span>] = self.request.user</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-3-소셜-로그인-간편로그인&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-3-소셜-로그인-간편로그인&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 3. 소셜 로그인 (간편로그인
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 이메일 인증</title>
    <link href="https://khs9628.github.io/2019/09/21/CBV5/"/>
    <id>https://khs9628.github.io/2019/09/21/CBV5/</id>
    <published>2019-09-21T07:54:48.000Z</published>
    <updated>2019-09-21T10:31:28.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-3-사용자-인증-이메일-인증"><a href="#Django-CBV-프로젝트-3-사용자-인증-이메일-인증" class="headerlink" title="Django CBV 프로젝트 3. 사용자 인증 (이메일 인증)"></a>Django CBV 프로젝트 3. 사용자 인증 (이메일 인증)</h1><p><a href="https://swarf00.github.io/2018/12/14/logout.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><blockquote><ol><li>가입즉시 인증이메일 보내기</li><li>인증토큰 생성</li><li>사용자인증 페이지로 이동할 수 있는 링크를 포함한 인증이메일 발송</li><li>인증이메일에서 인증하기 링크 클릭 후 사용자인증 페이지로 이동</li><li>사용자인증 페이지에서 url에 포함된 사용자id와 인증토큰을 비교해서 인증</li><li>정상적인 사용자인 경우 is_active 를 True 로 변경 후 인증완료 화면 표시</li><li>비정상적인 사용자인 경우 인증실패 화면 표시하여 재인증 가능한 링크 제공</li><li>인증되지 않은 사용자의 경우 인증이메일 재발송 가능하도록 링크 제공</li></ol></blockquote><h2 id="이메일-보내기"><a href="#이메일-보내기" class="headerlink" title="이메일 보내기"></a>이메일 보내기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_HOST = <span class="string">'smtp.gmail.com'</span></span><br><span class="line">EMAIL_PORT = 587</span><br><span class="line">EMAIL_HOST_USER = <span class="string">'이메일'</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'비밀번호'</span></span><br><span class="line">EMAIL_USE_TLS = True</span><br></pre></td></tr></table></figure><h2 id="화면"><a href="#화면" class="headerlink" title="화면"></a>화면</h2><ol><li><p>회원가입시 이메일 보내는 형식 지정하는 page (templates/user/email/registration_verification.html)</p></li><li><p>재 인증을 신청하는 page (templates/user/resend_verify_email.html)</p></li></ol><h2 id="models-py-수정"><a href="#models-py-수정" class="headerlink" title="models.py 수정"></a>models.py 수정</h2><p>이메일 인증을 수행시 로그인이 가능하도록<br>is_active 의 default 값을 False로 지정한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(AbstractBaseUser, PermissionsMixin)</span>:</span></span><br><span class="line">    <span class="comment"># 생략</span></span><br><span class="line">    is_staff = models.BooleanField(</span><br><span class="line">        _(<span class="string">'staff status'</span>),</span><br><span class="line">        default=<span class="literal">False</span>,</span><br><span class="line">        help_text=_(<span class="string">'Designates whether the user can log into this admin site.'</span>),</span><br><span class="line">    )</span><br><span class="line">    is_active = models.BooleanField(</span><br><span class="line">        _(<span class="string">'active'</span>),</span><br><span class="line">        default=<span class="literal">False</span>,                 <span class="comment"># 기본값을 False 로 변경</span></span><br><span class="line">        help_text=_(</span><br><span class="line">            <span class="string">'Designates whether this user should be treated as active. '</span></span><br><span class="line">            <span class="string">'Unselect this instead of deleting accounts.'</span></span><br><span class="line">        ),</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># 생략</span></span><br></pre></td></tr></table></figure><h2 id="Views-py-작성"><a href="#Views-py-작성" class="headerlink" title="Views.py 작성"></a>Views.py 작성</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># from django.contrib.auth.forms import UserCreationForm</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LoginView</span><br><span class="line"><span class="keyword">from</span> django.views.generic <span class="keyword">import</span> CreateView, FormView</span><br><span class="line"><span class="keyword">from</span> django.views.generic.base <span class="keyword">import</span> TemplateView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.forms <span class="keyword">import</span> UserRegistrationForm, LoginForm, VerificationEmailForm</span><br><span class="line"><span class="keyword">from</span> user.mixins <span class="keyword">import</span> VerifyEmailMixin</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> messages</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.tokens <span class="keyword">import</span> default_token_generator</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> minitutorial <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserRegistrationView</span><span class="params">(VerifyEmailMixin, CreateView)</span>:</span> <span class="comment"># 회원가입</span></span><br><span class="line">    template_name = <span class="string">'user_model.html'</span></span><br><span class="line">    model = get_user_model()</span><br><span class="line">    form_class = UserRegistrationForm</span><br><span class="line">    success_url = <span class="string">'/user/login/'</span></span><br><span class="line">    verify_url = <span class="string">'/user/verify/'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">form_valid</span><span class="params">(self, form)</span>:</span></span><br><span class="line">        response = super().form_valid(form)</span><br><span class="line">        <span class="keyword">if</span> form.instance:</span><br><span class="line">            self.send_verification_email(form.instance)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserVerificationView</span><span class="params">(TemplateView)</span>:</span> <span class="comment"># 인증 보내기</span></span><br><span class="line"></span><br><span class="line">    model = get_user_model()</span><br><span class="line">    redirect_url = <span class="string">'/user/login/'</span></span><br><span class="line">    token_generator = default_token_generator</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.is_valid_token(**kwargs):</span><br><span class="line">            messages.info(request, <span class="string">'인증이 완료되었습니다.'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            messages.error(request, <span class="string">'인증이 실패되었습니다.'</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(self.redirect_url)   <span class="comment"># 인증 성공여부와 상관없이 무조건 로그인 페이지로 이동</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_valid_token</span><span class="params">(self, **kwargs)</span>:</span></span><br><span class="line">        pk = kwargs.get(<span class="string">'pk'</span>)</span><br><span class="line">        token = kwargs.get(<span class="string">'token'</span>)</span><br><span class="line">        user = self.model.objects.get(pk=pk)</span><br><span class="line">        is_valid = self.token_generator.check_token(user, token)</span><br><span class="line">        <span class="keyword">if</span> is_valid:</span><br><span class="line">            user.is_active = <span class="literal">True</span></span><br><span class="line">            user.save()     <span class="comment"># 데이터가 변경되면 반드시 save() 메소드 호출</span></span><br><span class="line">        <span class="keyword">return</span> is_valid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResendVerifyEmailView</span><span class="params">(VerifyEmailMixin, FormView)</span>:</span> <span class="comment"># 재 인증 보내기</span></span><br><span class="line">    model = get_user_model()</span><br><span class="line">    form_class = VerificationEmailForm</span><br><span class="line">    success_url = <span class="string">'/user/login/'</span></span><br><span class="line">    template_name = <span class="string">'user/resend_verify_email.html'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">form_valid</span><span class="params">(self, form)</span>:</span></span><br><span class="line">        email = form.cleaned_data[<span class="string">'email'</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = self.model.objects.get(email=email)</span><br><span class="line">        <span class="keyword">except</span> self.model.DoesNotExist:</span><br><span class="line">            messages.error(self.request, <span class="string">'알 수 없는 사용자 입니다.'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.send_verification_email(user)</span><br><span class="line">        <span class="keyword">return</span> super().form_valid(form)</span><br></pre></td></tr></table></figure><h2 id="mixins-py-추가"><a href="#mixins-py-추가" class="headerlink" title="mixins.py 추가"></a>mixins.py 추가</h2><p><code>UserRegistrationView</code> 와 <code>ResendVerifyEmailView</code>의 기본 메소드(인증보내기)를 지정해서<br>코드를 단순화 시켜준다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> messages</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.tokens <span class="keyword">import</span> default_token_generator</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> minitutorial <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerifyEmailMixin</span>:</span></span><br><span class="line">    email_template_name = <span class="string">'user/email/registration_verification.html'</span></span><br><span class="line">    token_generator = default_token_generator</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send_verification_email</span><span class="params">(self, user)</span>:</span></span><br><span class="line">        token = self.token_generator.make_token(user)</span><br><span class="line">        url = self.build_verification_link(user, token)</span><br><span class="line">        subject = <span class="string">'회원가입을 축하드립니다.'</span></span><br><span class="line">        message = <span class="string">'다음 주소로 이동하셔서 인증하세요. &#123;&#125;'</span>.format(url)</span><br><span class="line">        html_message = render(self.request, self.email_template_name, &#123;<span class="string">'url'</span>: url&#125;).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        user.email_user(subject, message, from_email=settings.EMAIL_HOST_USER,html_message=html_message)</span><br><span class="line">        messages.info(self.request, <span class="string">'가입하신 이메일주소로 인증메일을 발송했으니 확인 후 인증해주세요.'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build_verification_link</span><span class="params">(self, user, token)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#125;/user/&#123;&#125;/verify/&#123;&#125;/'</span>.format(self.request.META.get(<span class="string">'HTTP_ORIGIN'</span>), user.pk, token)</span><br></pre></td></tr></table></figure><h2 id="validators-py-작성"><a href="#validators-py-작성" class="headerlink" title="validators.py 작성"></a>validators.py 작성</h2><p>이메일 재전송 시 이미 승인 받은 회원이나<br>가입되지 않은 회원에 대한 정보를 handling</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.core.exceptions <span class="keyword">import</span> ValidationError</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisteredEmailValidator</span>:</span></span><br><span class="line">    user_model = get_user_model()</span><br><span class="line">    code = <span class="string">'invalid'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, email)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = self.user_model.objects.get(email=email)</span><br><span class="line">        <span class="keyword">except</span> self.user_model.DoesNotExist:</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">'가입되지 않은 이메일입니다.'</span>, code=self.code)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> user.is_active:</span><br><span class="line">                <span class="keyword">raise</span> ValidationError(<span class="string">'이미 인증되어 있습니다.'</span>, code=self.code)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><h2 id="forms-py-작성"><a href="#forms-py-작성" class="headerlink" title="forms.py 작성"></a>forms.py 작성</h2><p>validator로 검증한 결과를 화면에 넘겨줌</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.validators <span class="keyword">import</span> RegisteredEmailValidator</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VerificationEmailForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    email = EmailField(widget=forms.EmailInput(attrs=&#123;<span class="string">'autofocus'</span>: <span class="literal">True</span>&#125;), validators=(EmailField.default_validators + [RegisteredEmailValidator()]))</span><br></pre></td></tr></table></figure><h2 id="registration-verification-html"><a href="#registration-verification-html" class="headerlink" title="registration_verification.html"></a>registration_verification.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; min-height: 150px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; width: 100%; height: 100%; background-color: rgb(234, 236, 237); font-family: Arial Black, Gadget, sans-serif;"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">bgcolor</span>=<span class="string">"rgb(234, 236, 237)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; vertical-align: top;"</span> <span class="attr">valign</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-family: Helvetica, serif; min-height: 150px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; margin-top: auto; margin-right: auto; margin-bottom: auto; margin-left: auto; height: 0px; width: 90%; max-width: 550px;"</span> <span class="attr">width</span>=<span class="string">"90%"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; vertical-align: top; font-size: medium; padding-bottom: 50px;"</span> <span class="attr">valign</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; min-height: 150px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; margin-bottom: 20px; height: 0px;"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; background-color: rgb(255, 255, 255); overflow-x: hidden; overflow-y: hidden; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-align: center;"</span> <span class="attr">bgcolor</span>=<span class="string">"rgb(255, 255, 255)"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; width: 100%; min-height: 150px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; height: 0px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; border-collapse: collapse;"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-size: 13px; line-height: 20px; color: rgb(111, 119, 125); padding-top: 10px; padding-right: 20px; padding-bottom: 0px; padding-left: 20px; vertical-align: top;"</span> <span class="attr">valign</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-size: 25px; font-weight: 300; color: rgb(68, 68, 68);"</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-family: Arial,Helvetica,sans-serif;"</span>&gt;</span>가입을 환영합니다.!!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-family: Arial,Helvetica,sans-serif;"</span>&gt;</span>회원님이 가입하신 것이 맞다면 아래 "승인" 버튼을 눌러서 인증해주세요. 가입하신 적이 없을 경우 인증하기를 누르지 마시고 무시하세요.<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; margin-top: 0px; margin-right: auto; margin-bottom: 10px; margin-left: auto; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; width: 100%;"</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box;"</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; padding-top: 20px; padding-right: 0px; padding-bottom: 20px; padding-left: 0px; text-align: center;"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">style</span>=<span class="string">"box-sizing: border-box; font-size: 20px; background-color: rgb(217, 131, 166); color: rgb(255, 255, 255); text-align: center; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-family: Arial, Helvetica, sans-serif; font-weight: 500; text-decoration: underline;"</span>&gt;</span>승인<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                      <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                                  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 생략 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="resend-verify-email-html"><a href="#resend-verify-email-html" class="headerlink" title="resend_verify_email.html"></a>resend_verify_email.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;<span class="tag">&lt;<span class="name">title</span>&gt;</span>인증메일 다시보내기<span class="tag">&lt;/<span class="name">title</span>&gt;</span>&#123;% endblock %&#125;</span><br><span class="line">&#123;% block css %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.registration</span> &#123;</span></span><br><span class="line">        width: 360px;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">    label &#123;</span><br><span class="line">        width: 50%;</span><br><span class="line">        text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.control-label</span> &#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.registration</span> <span class="selector-class">.form-actions</span> &gt; <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.link-below-button</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; <span class="attribute">text-align</span>: right;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&#123;% endblock css %&#125;</span><br><span class="line"><span class="comment">&lt;!-- 생략 --&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default registration"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line">        인증이메일 보내기</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"."</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span>재발송할 이메일주소를 입력해주세요.<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">            &#123;% for field in form %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group &#123;% if field.errors|length &gt; 0 %&#125;has-error&#123;%endif %&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"&#123;&#123; field.id_for_label &#125;&#125;"</span>&gt;</span>&#123;&#123; field.label &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"&#123;&#123; field.html_name &#125;&#125;"</span> <span class="attr">id</span>=<span class="string">"&#123;&#123; field.id_for_lable &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"&#123;&#123; field.field.widget.input_type &#125;&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; field.value|default_if_none:'' &#125;&#125;"</span>&gt;</span></span><br><span class="line">                    &#123;% for error in field.errors %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"&#123;&#123; field.id_for_label &#125;&#125;"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-actions"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-large"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>인증이메일 보내기<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><h2 id="로그아웃"><a href="#로그아웃" class="headerlink" title="로그아웃"></a>로그아웃</h2><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOGOUT_REDIRECT_URL = <span class="string">'/article/'</span></span><br></pre></td></tr></table></figure><p>urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LogoutView</span><br><span class="line">urlpatterns = [</span><br><span class="line">     path(<span class="string">'user/logout/'</span>, LogoutView.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img alt="실행결과" data-src="/img/Django/register_email.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-3-사용자-인증-이메일-인증&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-3-사용자-인증-이메일-인증&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 3. 사용자 인증 (이메일
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 로그인</title>
    <link href="https://khs9628.github.io/2019/09/21/CBV4/"/>
    <id>https://khs9628.github.io/2019/09/21/CBV4/</id>
    <published>2019-09-21T06:49:39.000Z</published>
    <updated>2019-09-22T09:57:24.934Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-3-사용자-인증-로그인"><a href="#Django-CBV-프로젝트-3-사용자-인증-로그인" class="headerlink" title="Django CBV 프로젝트 3. 사용자 인증 (로그인)"></a>Django CBV 프로젝트 3. 사용자 인증 (로그인)</h1><p><a href="https://swarf00.github.io/2018/12/10/login.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><h2 id="Views-py"><a href="#Views-py" class="headerlink" title="Views.py"></a>Views.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 추가</span></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.views <span class="keyword">import</span> LoginView</span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User <span class="comment"># 모델 import</span></span><br><span class="line"><span class="keyword">from</span> user.forms <span class="keyword">import</span> UserRegistrationForm, LoginForm <span class="comment"># form import</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> messages <span class="comment">#메세지 framework사용</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserLoginView</span><span class="params">(LoginView)</span>:</span>           <span class="comment"># 로그인</span></span><br><span class="line">    template_name = <span class="string">'user/login_form.html'</span></span><br><span class="line">    authentication_form = LoginForm</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">form_invalid</span><span class="params">(self, form)</span>:</span></span><br><span class="line">        messages.error(self.request, <span class="string">'로그인에 실패하였습니다.'</span>, extra_tags=<span class="string">'danger'</span>)</span><br><span class="line">        <span class="keyword">return</span> super().form_invalid(form)</span><br></pre></td></tr></table></figure><h2 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'user/login/'</span>, UserLoginView.as_view()), <span class="comment"># +</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="forms-py"><a href="#forms-py" class="headerlink" title="forms.py"></a>forms.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 추가</span></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.forms <span class="keyword">import</span> UserCreationForm, AuthenticationForm</span><br><span class="line"><span class="keyword">from</span> django.forms <span class="keyword">import</span> EmailField</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span><span class="params">(AuthenticationForm)</span>:</span></span><br><span class="line">    username = EmailField(widget=forms.EmailInput(attrs=&#123;<span class="string">'autofocus'</span>: <span class="literal">True</span>&#125;))</span><br><span class="line"></span><br><span class="line"><span class="comment"># field -&gt; 유효성 검증과 위젯의 기능들을 호출</span></span><br><span class="line"><span class="comment"># widget -&gt; 필드의 실제 렌더링</span></span><br></pre></td></tr></table></figure><h2 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOGIN_URL = <span class="string">'/user/login/'</span> <span class="comment"># 게시판에 로그인 사용자만 가능하게하기 위해 지정</span></span><br><span class="line">LOGIN_REDIRECT_URL = <span class="string">'/article/'</span>  <span class="comment"># 로그인이 되면 /article/로 이동</span></span><br></pre></td></tr></table></figure><h2 id="user-login-form-html"><a href="#user-login-form-html" class="headerlink" title="user/login_form.html"></a>user/login_form.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;<span class="tag">&lt;<span class="name">title</span>&gt;</span>로그인<span class="tag">&lt;/<span class="name">title</span>&gt;</span>&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block css %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.registration</span> &#123;</span></span><br><span class="line">        width: 360px;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">    label &#123;</span><br><span class="line">        width: 50%;</span><br><span class="line">        text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.control-label</span> &#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.registration</span> <span class="selector-class">.form-actions</span> &gt; <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&#123;% endblock css %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default registration"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line">        로그인하기</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"."</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            &#123;% csrf_token %&#125;</span><br><span class="line">            &#123;% for field in form %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group &#123;% if field.errors|length &gt; 0 %&#125;has-error&#123;%endif %&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"&#123;&#123; field.id_for_label &#125;&#125;"</span>&gt;</span>&#123;&#123; field.label &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"&#123;&#123; field.html_name &#125;&#125;"</span> <span class="attr">id</span>=<span class="string">"&#123;&#123; field.id_for_lable &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"&#123;&#123; field.field.widget.input_type &#125;&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; field.value|default_if_none:'' &#125;&#125;"</span>&gt;</span></span><br><span class="line">                    &#123;% for error in field.errors %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"control-label"</span> <span class="attr">for</span>=<span class="string">"&#123;&#123; field.id_for_label &#125;&#125;"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    &#123;% endfor %&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-actions"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn-large"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>로그인하기<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><h2 id="중요-Session"><a href="#중요-Session" class="headerlink" title="(중요) Session ??"></a>(중요) Session ??</h2><p>로그인한 사용자에게만 발급하는 일종의 표딱지 사용권</p><p><code>장고의 세션</code> -&gt; </p><h3 id="세션-미들웨어-여러가지-세션-백엔드-중-하나를-선택해서-백엔드에게-실제-저장기능을-위임"><a href="#세션-미들웨어-여러가지-세션-백엔드-중-하나를-선택해서-백엔드에게-실제-저장기능을-위임" class="headerlink" title="세션 미들웨어 : 여러가지 세션 백엔드 중 하나를 선택해서 백엔드에게 실제 저장기능을 위임"></a>세션 미들웨어 : 여러가지 세션 백엔드 중 하나를 선택해서 백엔드에게 실제 저장기능을 위임</h3><table><thead><tr><th align="left">세션 백엔드 모듈이름</th><th align="left">기능</th></tr></thead><tbody><tr><td align="left">django.contrib.sessions.backends.db</td><td align="left">데이터베이스에 저장하는백엔드</td></tr><tr><td align="left">django.contrib.sessions.backends.cache</td><td align="left">캐시에 저장하는 백엔드</td></tr><tr><td align="left">django.contrib.sessions.backends.cache_db</td><td align="left">캐시와 데이터베이스를 병행하는 백엔드</td></tr><tr><td align="left">django.contrib.sessions.backends.file</td><td align="left">파일에 저장하는 백엔드</td></tr><tr><td align="left">django.contrib.sessions.backends.signed_cookie</td><td align="left">쿠키에 저장하는 백엔드</td></tr></tbody></table><hr><blockquote><p>사용자가 요청을 할 때마다 쿠키의 <code>sessionid</code> 를 확인 후 세션 백엔드 세션데이터를 불러와 <code>request.session</code> 객체에 저장 ,만일 세션데이터가 유효하지 않다면(expire_date, path 등) 빈 세션데이터만 저장</p></blockquote><blockquote><p>cf) 세션데이터는 사용자가 매 요청마다 불러와야 하는 값이고 응답할 때까지 메모리에 저장하고 있어야 하기 때문에 너무 많은 데이터를 가지고 있으면 서버의 가용성에 지장이 생길 수 있습니다. 대부분의 사용자가 매번 필요한 데이터일 경우에만 세션객체에 추가하셔야 합니다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-3-사용자-인증-로그인&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-3-사용자-인증-로그인&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 3. 사용자 인증 (로그인)&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 회원가입</title>
    <link href="https://khs9628.github.io/2019/09/21/CBV3/"/>
    <id>https://khs9628.github.io/2019/09/21/CBV3/</id>
    <published>2019-09-21T05:12:36.000Z</published>
    <updated>2019-09-22T09:57:09.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-3-사용자-인증-회원가입"><a href="#Django-CBV-프로젝트-3-사용자-인증-회원가입" class="headerlink" title="Django CBV 프로젝트 3. 사용자 인증 (회원가입)"></a>Django CBV 프로젝트 3. 사용자 인증 (회원가입)</h1><p><a href="https://swarf00.github.io/2018/12/07/registration.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><h2 id="구조"><a href="#구조" class="headerlink" title="구조"></a>구조</h2><pre><code># APPuser/├── __init__.py      # 앱 패키지 초기화 스크립트입니다.├── admin.py         # 장고 어드민 설정파일입니다. 어드민에 등록된 모델은 장고에서 자동 생성하는 어드민 페이지에서 관리할 수 있습니다.├── apps.py          # 앱 설정 파일입니다.└── migrations/      # 데이터베이스 마이그레이션 디렉토리. 장고 ORM은 모델 스키마의 변화가 생길 때마다 migration 파일을 생성하고 이것을 통해 스키마를 업데이트 합니다. migration 파일을 통해 협업자들과 함께 데이터베이스의 스키마를 동기화할 수 있습니다.    ├── __init__.py  # 마이그레이션 패키지 초기화 스크립트입니다.    ├── models.py        # 앱 모델 파일입니다. 회원의 모든 데이터를 저장할 데이터베이스를 장고 ORM을 통해 모델화합니다.    ├── tests.py         # 앱 내의 기능들을 테스트하는 기능을 구현하는 파일입니다.    ├── views.py         # 앱의 화면(template)과 데이터(model) 사이에서 사용자의 요청을 처리하여 모델에 저장하고, 모델에 저장된 데이터를 화면에 전달하는 역할을 합니다.    ├── mixins.py        # 기본 메소드(인증보내기)를 지정해서 코드를 단순화 합니다.    ├── validators.py    # 객체를 검증할 수 있는 기능을 제공 합니다.               ├── forms.py         # 앱의 form의 인자와 화면단을 구성해주는 파일입니다.    └── templates/user/            ├── login_form.html                # 로그인 form html            ├── resend_verify_email.html       # 재 인증 메일 form html                   ├── user_form.html                 # 회원가입 form html            └── /email                └── registration_verification.html      # 사용자 email 보낼 때 form html</code></pre><h2 id="장고-auth-프레임워크"><a href="#장고-auth-프레임워크" class="headerlink" title="장고 auth 프레임워크?"></a>장고 auth 프레임워크?</h2><p><code>가입</code>, <code>로그인</code>, <code>로그아웃</code> 지원</p><p><strong>사용자 인증</strong> </p><ol><li>사용자정보를 데이터베이스에 저장</li><li>저장된 데이터를 구분할 수 있는 유일한(누구와도 중복되지 않는) 키(key)를 지정해서 사용자를 식별(구별)</li><li>비밀번호 암호화 (해싱함수 / 암호화)</li></ol><blockquote><p>cf) 암호화와 해시<br>공통점 - 원래의 텍스트(평문)을 알아볼 수 없는 텍스트(암호문)으로 변경시켜줍니다.<br>차이점 - 암호화는 암호문에서 평문으로 되돌릴 수 있지만 해시는 되돌릴 수 없습니다.<br>암호 알고리즘의 종류 - <code>des</code>, <code>aes</code>, <code>seed</code>, <code>rsa</code> 등<br>해시 알고리즘의 종류 - <code>md5</code>, <code>sha1</code>, <code>sha256</code>, <code>sha256</code> 등</p></blockquote><h2 id="user-App-생성"><a href="#user-App-생성" class="headerlink" title="user App 생성"></a>user App 생성</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp user</span><br></pre></td></tr></table></figure><h2 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>, <span class="comment"># auth 프레임워크</span></span><br><span class="line">     <span class="comment"># --------- #</span></span><br><span class="line">    <span class="string">'bbs'</span>, <span class="comment"># 게시판 app</span></span><br><span class="line">    <span class="string">'user'</span>, <span class="comment"># user 정보 app</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>cf) DB가 잘못 되었을 때 데이터 삭제<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . -path <span class="string">"*/migrations/*.py"</span> -not -name <span class="string">"__init__.py"</span> -delete</span><br><span class="line"><span class="comment"># + db.splite3 파일삭제</span></span><br></pre></td></tr></table></figure></p><h2 id="회원-정보-모델-설계-models-py"><a href="#회원-정보-모델-설계-models-py" class="headerlink" title="회원 정보 모델 설계 (models.py)"></a>회원 정보 모델 설계 (models.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> (</span><br><span class="line">    AbstractBaseUser, PermissionsMixin, UserManager</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.base_user <span class="keyword">import</span> AbstractBaseUser, BaseUserManager</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> PermissionsMixin</span><br><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> ugettext_lazy <span class="keyword">as</span> _</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserManager</span><span class="params">(BaseUserManager)</span>:</span></span><br><span class="line">    use_in_migrations = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_create_user</span><span class="params">(self, email, password, **extra_fields)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> email:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'The given email must be set'</span>)</span><br><span class="line">        email = self.normalize_email(email)</span><br><span class="line">        user = self.model(email=email, **extra_fields)</span><br><span class="line">        user.set_password(password)</span><br><span class="line">        user.save(using=self._db)</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_user</span><span class="params">(self, email=None, password=None, **extra_fields)</span>:</span></span><br><span class="line">        extra_fields.setdefault(<span class="string">'is_staff'</span>, <span class="literal">False</span>)</span><br><span class="line">        extra_fields.setdefault(<span class="string">'is_superuser'</span>, <span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> self._create_user(email, password, **extra_fields)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create_superuser</span><span class="params">(self, email, password, **extra_fields)</span>:</span></span><br><span class="line">        extra_fields.setdefault(<span class="string">'is_staff'</span>, <span class="literal">True</span>)</span><br><span class="line">        extra_fields.setdefault(<span class="string">'is_superuser'</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> extra_fields.get(<span class="string">'is_staff'</span>) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'Superuser must have is_staff=True.'</span>)</span><br><span class="line">        <span class="keyword">if</span> extra_fields.get(<span class="string">'is_superuser'</span>) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">'Superuser must have is_superuser=True.'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self._create_user(email, password, **extra_fields)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(AbstractBaseUser, PermissionsMixin)</span>:</span></span><br><span class="line">    email = models.EmailField(<span class="string">'email'</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    name = models.CharField(<span class="string">'이름'</span>, max_length=<span class="number">30</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    is_staff = models.BooleanField(<span class="string">'스태프 권한'</span>, default=<span class="literal">False</span>)</span><br><span class="line">    is_active = models.BooleanField(<span class="string">'사용중'</span>, default=<span class="literal">True</span>)</span><br><span class="line">    date_joined = models.DateTimeField(<span class="string">'가입일'</span>, default=timezone.now)</span><br><span class="line"></span><br><span class="line">    objects = UserManager()</span><br><span class="line">    </span><br><span class="line">    USERNAME_FIELD = <span class="string">'email'</span>                     <span class="comment"># email을 사용자의 식별자로 설정</span></span><br><span class="line">    REQUIRED_FIELDS = [<span class="string">'name'</span>]                   <span class="comment"># 필수입력값</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = _(<span class="string">'user'</span>)</span><br><span class="line">        verbose_name_plural = _(<span class="string">'users'</span>)</span><br><span class="line">        swappable = <span class="string">'AUTH_USER_MODEL'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">email_user</span><span class="params">(self, subject, message, from_email=None, **kwargs)</span>:</span> <span class="comment"># 이메일 발송 메소드</span></span><br><span class="line">        send_mail(subject, message, from_email, [self.email], **kwargs)</span><br></pre></td></tr></table></figure><h2 id="회원가입-폼을-지정-forms-py"><a href="#회원가입-폼을-지정-forms-py" class="headerlink" title="회원가입 폼을 지정(forms.py)"></a>회원가입 폼을 지정(forms.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> get_user_model</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.forms <span class="keyword">import</span> UserCreationForm</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserRegistrationForm</span><span class="params">(UserCreationForm)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = get_user_model()</span><br><span class="line">        fields = (<span class="string">'email'</span>, <span class="string">'name'</span>)</span><br></pre></td></tr></table></figure><h2 id="회원가입-Class-작성-views-py"><a href="#회원가입-Class-작성-views-py" class="headerlink" title="회원가입 Class 작성(views.py)"></a>회원가입 Class 작성(views.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.forms <span class="keyword">import</span> UserCreationForm</span><br><span class="line"><span class="keyword">from</span> django.views.generic <span class="keyword">import</span> CreateView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.forms <span class="keyword">import</span> UserRegistrationForm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserRegistrationView</span><span class="params">(CreateView)</span>:</span></span><br><span class="line">    template_name = <span class="string">'user_model.html'</span></span><br><span class="line">    model = User</span><br><span class="line">    form_class = UserRegistrationForm</span><br><span class="line">    success_url = <span class="string">'/article/'</span> <span class="comment">#회원가입을 성공한다면 이 url로 이동해라</span></span><br></pre></td></tr></table></figure><h2 id="회원가입-setting-설정-settings-py"><a href="#회원가입-setting-설정-settings-py" class="headerlink" title="회원가입 setting 설정 (settings.py)"></a>회원가입 setting 설정 (settings.py)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'</span>,</span><br><span class="line">        <span class="string">'OPTION'</span>: &#123;<span class="string">'user_attributes'</span>: (<span class="string">'email'</span>, <span class="string">'name'</span>)&#125;, </span><br><span class="line">        <span class="comment">#forms.py에서 email과 name만 지정했기 때문에</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#생략</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTH_USER_MODEL = <span class="string">'user.User'</span>        <span class="comment"># '앱label.모델명'</span></span><br></pre></td></tr></table></figure><p><img alt="실행화면" data-src="/img/Django/registerCBV.PNG" class="lozad"></p><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-3-사용자-인증-회원가입&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-3-사용자-인증-회원가입&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 3. 사용자 인증 (회원가입)&quot;&gt;
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 게시판</title>
    <link href="https://khs9628.github.io/2019/09/21/CBV2/"/>
    <id>https://khs9628.github.io/2019/09/21/CBV2/</id>
    <published>2019-09-20T15:59:54.000Z</published>
    <updated>2019-09-21T06:48:58.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-2-세부-코딩"><a href="#Django-CBV-프로젝트-2-세부-코딩" class="headerlink" title="Django CBV 프로젝트 2. 세부 코딩"></a>Django CBV 프로젝트 2. 세부 코딩</h1><p><a href="https://swarf00.github.io/2018/11/23/get-started.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><h2 id="Model-py"><a href="#Model-py" class="headerlink" title="Model.py"></a>Model.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title      = models.CharField(<span class="string">'타이틀'</span>, max_length=<span class="number">126</span>, null=<span class="literal">False</span>)</span><br><span class="line">    content    = models.TextField(<span class="string">'내용'</span>, null=<span class="literal">False</span>)</span><br><span class="line">    author     = models.CharField(<span class="string">'작성자'</span>, max_length=<span class="number">16</span>, null=<span class="literal">False</span>)</span><br><span class="line">    created_at = models.DateTimeField(<span class="string">'작성일'</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    created_at.editable = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'[&#123;&#125;] &#123;&#125;'</span>.format(self.id, self.title)</span><br></pre></td></tr></table></figure><h2 id="Views-py"><a href="#Views-py" class="headerlink" title="Views.py"></a>Views.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bbs/views.py - CBV(Class Based View)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.views.generic <span class="keyword">import</span> TemplateView</span><br><span class="line"><span class="keyword">from</span> bbs.models <span class="keyword">import</span> Article</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.utils.decorators <span class="keyword">import</span> method_decorator</span><br><span class="line"><span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> csrf_exempt</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> messages</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleListView</span><span class="params">(TemplateView)</span>:</span></span><br><span class="line">    template_name = <span class="string">'article_list.html'</span>    <span class="comment"># 뷰 전용 템플릿 생성.</span></span><br><span class="line">    queryset = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        print(request.GET)</span><br><span class="line">        ctx = &#123;</span><br><span class="line">            <span class="string">'view'</span>: self.__class__.__name__, <span class="comment"># 클래스의 이름</span></span><br><span class="line">            <span class="string">'articles'</span>: self.get_queryset()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.queryset:</span><br><span class="line">            self.queryset = Article.objects.all()</span><br><span class="line">        <span class="keyword">return</span> self.queryset</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleDetailView</span><span class="params">(TemplateView)</span>:</span>       <span class="comment"># 게시글 상세</span></span><br><span class="line">    template_name = <span class="string">'article_detail.html'</span></span><br><span class="line">    queryset = Article.objects.all()</span><br><span class="line">    pk_url_kwargs = <span class="string">'article_id'</span>                 <span class="comment"># 검색데이터의 primary key를 전달받을 이름</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self, queryset=None)</span>:</span></span><br><span class="line">        queryset = queryset <span class="keyword">or</span> self.queryset     <span class="comment"># queryset 파라미터 초기화</span></span><br><span class="line">        pk = self.kwargs.get(self.pk_url_kwargs) <span class="comment"># pk는 모델에서 정의된 pk값, 즉 모델의 id</span></span><br><span class="line">        <span class="keyword">return</span> queryset.filter(pk=pk).first()    <span class="comment"># pk로 검색된 데이터가 있다면 그 중 첫번째 데이터 없다면 None 반환</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> article:</span><br><span class="line">            <span class="keyword">raise</span> Http404(<span class="string">'invalid pk'</span>)</span><br><span class="line">        <span class="keyword">return</span> article</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        article = self.get_object()</span><br><span class="line">        </span><br><span class="line">        ctx = &#123;</span><br><span class="line">            <span class="string">'view'</span>: self.__class__.__name__, <span class="comment"># 클래스의 이름</span></span><br><span class="line">            <span class="string">'article'</span>: article</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line"><span class="meta">@method_decorator(csrf_exempt, name='dispatch')   # 모든 핸들러 예외 처리</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleCreateUpdateView</span><span class="params">(TemplateView)</span>:</span>  <span class="comment"># 게시글 추가, 수정</span></span><br><span class="line">    template_name = <span class="string">'article_update.html'</span></span><br><span class="line">    queryset = Article.objects.all()</span><br><span class="line">    pk_url_kwargs = <span class="string">'article_id'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self, queryset=None)</span>:</span></span><br><span class="line">        queryset = queryset <span class="keyword">or</span> self.queryset</span><br><span class="line">        pk = self.kwargs.get(self.pk_url_kwargs)</span><br><span class="line">        article = queryset.filter(pk=pk).first()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> pk <span class="keyword">and</span> <span class="keyword">not</span> article:                    <span class="comment"># 검색결과가 없으면 곧바로 에러 발생</span></span><br><span class="line">            <span class="keyword">raise</span> Http404(<span class="string">'invalid pk'</span>)</span><br><span class="line">        <span class="keyword">return</span> article</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        article = self.get_object()</span><br><span class="line">        </span><br><span class="line">        ctx = &#123;</span><br><span class="line">            <span class="string">'article'</span>: article</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        action = request.POST.get(<span class="string">'action'</span>)           <span class="comment"># request.POST 객체에서 데이터 얻기</span></span><br><span class="line">        post_data = &#123;key: request.POST.get(key) <span class="keyword">for</span> key <span class="keyword">in</span> (<span class="string">'title'</span>, <span class="string">'content'</span>, <span class="string">'author'</span>)&#125;</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> post_data:                         <span class="comment"># 세가지 데이터 모두 있어야 통과</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> post_data[key]:</span><br><span class="line">                messages.error(self.request, <span class="string">'&#123;&#125; 값이 존재하지 않습니다.'</span>.format(key), extra_tags=<span class="string">'danger'</span>) <span class="comment"># error 레벨로 메시지 저장</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> len(messages.get_messages(request)) == <span class="number">0</span>:                  <span class="comment"># 메시지가 있다면 아무것도 처리하지 않음</span></span><br><span class="line">            <span class="keyword">if</span> action == <span class="string">'create'</span>:  <span class="comment"># action이 create일 경우</span></span><br><span class="line">                article = Article.objects.create(**post_data)</span><br><span class="line">                messages.success(self.request, <span class="string">'게시글이 저장되었습니다.'</span>)  <span class="comment"># success 레벨로 메시지 저장</span></span><br><span class="line">            <span class="keyword">elif</span> action == <span class="string">'update'</span>: <span class="comment"># action이 update일 경우</span></span><br><span class="line">                article = self.get_object()</span><br><span class="line">                <span class="keyword">for</span> key, value <span class="keyword">in</span> post_data.items():</span><br><span class="line">                    setattr(article, key, value)</span><br><span class="line">                article.save()</span><br><span class="line">                messages.success(self.request, <span class="string">'게시글이 성공적으로 수정되었습니다.'</span>, extra_tags=<span class="string">'info'</span>)  <span class="comment"># info 레벨로 메시지 저장</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment"># action이 없거나 create, update 중 하나가 아닐 경우</span></span><br><span class="line">                messages.error(self.request, <span class="string">'알 수 없는 요청입니다.'</span>, extra_tags=<span class="string">'danger'</span>)     <span class="comment"># error 레벨로 메시지 저장</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> HttpResponseRedirect(<span class="string">'/article/'</span>) <span class="comment"># 정상적인 저장이 완료되면 '/articles/'로 이동됨</span></span><br><span class="line">        </span><br><span class="line">        ctx = &#123;</span><br><span class="line">            <span class="string">'article'</span>: self.get_object() <span class="keyword">if</span> action == <span class="string">'update'</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br></pre></td></tr></table></figure><h2 id="minitutorial-urls-py"><a href="#minitutorial-urls-py" class="headerlink" title="minitutorial/urls.py"></a>minitutorial/urls.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bbs.views <span class="keyword">import</span> ArticleListView, ArticleDetailView, ArticleCreateUpdateView</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'article/'</span>, ArticleListView.as_view()),</span><br><span class="line">    path(<span class="string">'article/create/'</span>, ArticleCreateUpdateView.as_view()),</span><br><span class="line">    path(<span class="string">'article/&lt;article_id&gt;/'</span>, ArticleDetailView.as_view()),</span><br><span class="line">    path(<span class="string">'article/&lt;article_id&gt;/update/'</span>, ArticleCreateUpdateView.as_view()),</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="프론트-Templates"><a href="#프론트-Templates" class="headerlink" title="프론트 (Templates)"></a>프론트 (Templates)</h1><h2 id="Templates-base-html"><a href="#Templates-base-html" class="headerlink" title="Templates/base.html"></a>Templates/base.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        &#123;% block title %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>bbs - minitutorial<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        &#123;% endblock title %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% block meta %&#125;</span><br><span class="line">        &#123;% endblock meta %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% block scripts %&#125;</span><br><span class="line">        &#123;% endblock scripts %&#125;</span><br><span class="line"></span><br><span class="line">        &#123;% block css %&#125;</span><br><span class="line">        &#123;% endblock css %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;% block header %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"/article/"</span>&gt;</span>게시글 목록<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    &#123;% if messages %&#125;    <span class="comment">&lt;!-- 추가된 부분 시작 --&gt;</span></span><br><span class="line">        &#123;% for message in messages %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-&#123;&#123; message.tags &#125;&#125; alert-dismissible"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">          &#123;&#123; message &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    &#123;% endif %&#125;          <span class="comment">&lt;!-- 추가된 부분 끝 --&gt;</span></span><br><span class="line">    </span><br><span class="line">    &#123;% endblock header %&#125;</span><br><span class="line">    </span><br><span class="line">    &#123;% block content %&#125;</span><br><span class="line">    &#123;% endblock content %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Templates-article-list-html"><a href="#Templates-article-list-html" class="headerlink" title="Templates/article_list.html"></a>Templates/article_list.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;<span class="tag">&lt;<span class="name">title</span>&gt;</span>게시글 목록<span class="tag">&lt;/<span class="name">title</span>&gt;</span>&#123;% endblock title %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block css %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">tbody</span> &gt; <span class="selector-tag">tr</span> &#123;<span class="attribute">cursor</span>: pointer;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">&#123;% endblock css %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover table-responsive"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>제목<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>작성자<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        &#123;% for article in articles %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">onclick</span>=<span class="string">"location.href='/article/&#123;&#123; article.pk &#125;&#125;/'"</span>&gt;</span>  <span class="comment">&lt;!-- 테이블 행 click 시 url 이동 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.pk &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.title &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.author &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 버튼 click 시 url 이동 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/article/create/"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>새 게시글 작성<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><h2 id="Templates-article-detail-html"><a href="#Templates-article-detail-html" class="headerlink" title="Templates/article_detail.html"></a>Templates/article_detail.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- bbs/templates/article_detail.html --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;<span class="tag">&lt;<span class="name">title</span>&gt;</span>게시글 상세 - &#123;&#123; article.pk &#125;&#125;. &#123;&#123; article.title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span>&#123;% endblock title %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block css %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">&#123;% endblock css %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped table-bordered"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.pk &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>제목<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.title &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>내용<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.content | linebreaksbr &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>작성자<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.author &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>작성일<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.created_at | date:"Y-m-d H:i" &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/article/&#123;&#123; article.pk &#125;&#125;/update/"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>게시글 수정<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><h2 id="Templates-article-update-html"><a href="#Templates-article-update-html" class="headerlink" title="Templates/article_update.html"></a>Templates/article_update.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;<span class="tag">&lt;<span class="name">title</span>&gt;</span>게시글 수정 - &#123;&#123; article.pk &#125;&#125;. &#123;&#123; article.title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span>&#123;% endblock title %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block css %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">&#123;% endblock css %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if messages %&#125;</span><br><span class="line">&#123;% for message in messages %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-&#123;&#123; message.tags &#125;&#125; alert-dismissible"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"."</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">&#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"action"</span> <span class="attr">value</span>=<span class="string">"&#123;% if article %&#125;update&#123;% else %&#125;create&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped table-bordered"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.pk &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>제목<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"title"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; article.title &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>내용<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span>&#123;&#123; article.content &#125;&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>작성자<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; article.author &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>작성일<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; article.created_at | date:"Y-m-d H:i" &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>게시글 저장<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endblock content %&#125;</span><br></pre></td></tr></table></figure><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img alt="수정" data-src="/img/Django/updatePost.PNG" class="lozad"><br><img alt="새로운글" data-src="/img/Django/newPost.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-2-세부-코딩&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-2-세부-코딩&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 2. 세부 코딩&quot;&gt;&lt;/a&gt;Django CBV 프로젝트 
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>(Django CBV) 구성</title>
    <link href="https://khs9628.github.io/2019/09/20/CBV1/"/>
    <id>https://khs9628.github.io/2019/09/20/CBV1/</id>
    <published>2019-09-20T10:11:46.000Z</published>
    <updated>2019-09-21T06:48:53.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django-CBV-프로젝트-1-기본-프로젝트-구조"><a href="#Django-CBV-프로젝트-1-기본-프로젝트-구조" class="headerlink" title="Django CBV 프로젝트 1. 기본 프로젝트 구조"></a>Django CBV 프로젝트 1. 기본 프로젝트 구조</h1><p><a href="https://swarf00.github.io/2018/11/23/get-started.html" rel="external nofollow noopener noreferrer" target="_blank">참고 사이트</a></p><h2 id="프로젝트-구성"><a href="#프로젝트-구성" class="headerlink" title="프로젝트 구성"></a>프로젝트 구성</h2><pre><code># Projectminitutorial/        # 프로젝트의 루트 디렉토리입니다. 디렉토리이름은 변경하셔도 됩니다.├── manage.py       # CLI에서 장고 프로젝트의 다양한 기능들을 사용할 수 있게 해주는 유틸리티입니다.└── minitutorial/   # 실제 프로젝트 디렉토리입니다. 프로젝트의 설정을 할 수 있으며, 파이썬 패키지로 사용됩니다.    ├── __init__.py # 파이썬 패키지에 필수로 들어있는 초기화 파일입니다. 프로젝트를 패키지로 불러올 때 가장 먼저 실행되는 스크립트입니다.    ├── settings.py # 프로젝트 설정파일입니다.    ├── urls.py     # 웹 url들을 view와 매칭시켜주는 파일입니다.    └── wsgi.py     # WSGI 호환 웹 서버로 서비스할 때 실행되는 시작점입니다.-------------------------------------------------# APPbbs/├── __init__.py      # 앱 패키지 초기화 스크립트입니다.├── admin.py         # 장고 어드민 설정파일입니다. 어드민에 등록된 모델은 장고에서 자동 생성하는 어드민 페이지에서 관리할 수 있습니다.├── apps.py          # 앱 설정 파일입니다.└── migrations/      # 데이터베이스 마이그레이션 디렉토리. 장고 ORM은 모델 스키마의 변화가 생길 때마다 migration 파일을 생성하고 이것을 통해 스키마를 업데이트 합니다. migration 파일을 통해 협업자들과 함께 데이터베이스의 스키마를 동기화할 수 있습니다.    ├── __init__.py  # 마이그레이션 패키지 초기화 스크립트입니다.    ├── models.py        # 앱 모델 파일입니다. 게시판의 모든 데이터를 저장할 데이터베이스를 장고 ORM을 통해 모델화합니다.    ├── tests.py         # 앱 내의 기능들을 테스트하는 기능을 구현하는 파일입니다.    ├── views.py         # 앱의 화면(template)과 데이터(model) 사이에서 사용자의 요청을 처리하여 모델에 저장하고, 모델에 저장된 데이터를 화면에 전달하는 역할을 합니다.    └── templates/            ├── base.html                # 기본 틀이 되는 html            ├── article_list.html        # 게시글 목록이 보이는 html                    ├── article_detail.html      # 특정 게시글이 보이는 html            └── article_update.html      # 새로운 게시글이나 특정 글을 update 하는 html</code></pre><h2 id="프로젝트-생성"><a href="#프로젝트-생성" class="headerlink" title="프로젝트 생성"></a>프로젝트 생성</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin startproject minitutorial</span><br><span class="line">$ python manage.py startapp bbs</span><br></pre></td></tr></table></figure><h2 id="모델-설계-M-Model"><a href="#모델-설계-M-Model" class="headerlink" title="모델 설계 M (Model)"></a>모델 설계 M (Model)</h2><p>게시글(Article) - <code>제목(title)</code>, <code>내용(content)</code>, <code>작성자(author)</code>, <code>작성일(created_at)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bbs.models.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    title      = models.CharField(<span class="string">'제목'</span>, max_length=<span class="number">126</span>, null=<span class="literal">False</span>)</span><br><span class="line">    content    = models.TextField(<span class="string">'내용'</span>, null=<span class="literal">False</span>)</span><br><span class="line">    author     = models.CharField(<span class="string">'작성자'</span>, max_length=<span class="number">16</span>, null=<span class="literal">False</span>)</span><br><span class="line">    created_at = models.DateTimeField(<span class="string">'작성일'</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># toString()메소드와 비슷</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'[&#123;&#125;] &#123;&#125;'</span>.format(self.id, self.title)</span><br></pre></td></tr></table></figure><h1 id="뷰-설계-V-View"><a href="#뷰-설계-V-View" class="headerlink" title="뷰 설계 V (View)"></a>뷰 설계 V (View)</h1><p>기능 - <code>글목록(list)</code>, <code>글상세보기(detail)</code>, <code>글수정(update)</code>, <code>글추가(new)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bbs/views.py - CBV(Class Based View)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.views.generic <span class="keyword">import</span> TemplateView</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleListView</span><span class="params">(TemplateView)</span>:</span>         <span class="comment"># 게시글 목록</span></span><br><span class="line">    template_name = <span class="string">'base.html'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        ctx = &#123;&#125;                             <span class="comment"># 템플릿에 전달할 데이터</span></span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleDetailView</span><span class="params">(TemplateView)</span>:</span>       <span class="comment"># 게시글 상세</span></span><br><span class="line">    template_name = <span class="string">'base.html'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        ctx = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleCreateUpdateView</span><span class="params">(TemplateView)</span>:</span>  <span class="comment"># 게시글 추가, 수정</span></span><br><span class="line">    template_name = <span class="string">'base.html'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, *args, **kwargs)</span>:</span>  <span class="comment"># 화면 요청</span></span><br><span class="line">        ctx = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request, *args, **kwargs)</span>:</span> <span class="comment"># 액션</span></span><br><span class="line">        ctx = &#123;&#125;</span><br><span class="line">        <span class="keyword">return</span> self.render_to_response(ctx)</span><br></pre></td></tr></table></figure><h2 id="API-명세"><a href="#API-명세" class="headerlink" title="API 명세"></a>API 명세</h2><table><thead><tr><th align="left">URL</th><th align="center">METHOD</th><th align="center">Description</th><th align="center">Params</th><th align="center">Return</th></tr></thead><tbody><tr><td align="left">/article/</td><td align="center">GET</td><td align="center">글 목록</td><td align="center">X</td><td align="center">[..{ Article }]</td></tr><tr><td align="left">/article/create/</td><td align="center">POST</td><td align="center">새로운 글 작성</td><td align="center">(Title &amp; Content &amp; Author)</td><td align="center"></td></tr><tr><td align="left">article/article_id/</td><td align="center">GET</td><td align="center">글 상세보기</td><td align="center">(Article_id)</td><td align="center">{ Article }</td></tr><tr><td align="left">article/article_id/update/</td><td align="center">POST</td><td align="center">글 수정</td><td align="center">(Article_id)</td><td align="center"></td></tr></tbody></table><blockquote><p>cf) args &amp; kwargs?<br>설명 해보자!</p></blockquote><h2 id="템플릿-설계-T-Templates"><a href="#템플릿-설계-T-Templates" class="headerlink" title="템플릿 설계 T (Templates)"></a>템플릿 설계 T (Templates)</h2><pre><code>├── base.html                # 기본 틀이 되는 html├── article_list.html        # 게시글 목록이 보이는 html        ├── article_detail.html      # 특정 게시글이 보이는 html└── article_update.html      # 새로운 게시글이나 특정 글을 update 하는 html</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Django-CBV-프로젝트-1-기본-프로젝트-구조&quot;&gt;&lt;a href=&quot;#Django-CBV-프로젝트-1-기본-프로젝트-구조&quot; class=&quot;headerlink&quot; title=&quot;Django CBV 프로젝트 1. 기본 프로젝트 구조&quot;&gt;&lt;/a&gt;D
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>알고리즘 개념정리</title>
    <link href="https://khs9628.github.io/2019/09/10/codingtest/"/>
    <id>https://khs9628.github.io/2019/09/10/codingtest/</id>
    <published>2019-09-10T09:24:15.000Z</published>
    <updated>2019-09-21T06:47:10.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="알고리즘-기본-개념-정리"><a href="#알고리즘-기본-개념-정리" class="headerlink" title="알고리즘 기본 개념 정리"></a>알고리즘 기본 개념 정리</h2><h3 id="cf-HASH란"><a href="#cf-HASH란" class="headerlink" title="cf) HASH란?"></a>cf) HASH란?</h3><p>임의의 크기를 가진 데이터를 고정된 데이터의 크기로 변환시키는 것<br>-&gt; 특정한 배열의 인덱스나 위치를 입력하고자 하는 데이터의 값을 이용해 저장하거나 찾을 수 있음</p><h3 id="cf-HashMap이란"><a href="#cf-HashMap이란" class="headerlink" title="cf) HashMap이란?"></a>cf) HashMap이란?</h3><p>Key와 value를 묶어 하나의 entry로 저장하는 Map이다.<br>hashing을 사용하기 때문에 많은양의 데이터를 검색하는데 뛰어난 성능을 보여준다.</p><ul><li>map의 인터페이스중 하나로 (“Key”, “Value”)로 이루어져 있다.</li><li>key 값은 중복이 불가능 / value는 중복이 가능</li><li>멀티쓰레드에서 동시에 HashMap을 건드려 Key-value값을 사용하면 문제가 생긴다 -&gt; 충돌</li></ul><h3 id="HashMap-생성자-메서드"><a href="#HashMap-생성자-메서드" class="headerlink" title="HashMap 생성자/메서드"></a>HashMap 생성자/메서드</h3><table><thead><tr><th align="center">생성자/메서드</th><th align="center">설명</th></tr></thead><tbody><tr><td align="center">HashMap()</td><td align="center">HashMap 객체를 생성</td></tr><tr><td align="center">void clear()</td><td align="center">HashMap에 저장된 모든 요소를 제거한다.</td></tr><tr><td align="center">Object clone()</td><td align="center">현재 HashMap을 복제하여 반환한다.</td></tr><tr><td align="center">boolean containsKey(Object key)</td><td align="center">HashMap에 지정된 키(key)가 포함되어 있는지 알려준다.</td></tr><tr><td align="center">boolean containsValue(Object value)</td><td align="center">HashMap에 지정된 값(Value)이 포함되어 있는지 알려준다.</td></tr><tr><td align="center">Set entrySet()</td><td align="center">HashMap에 저장된 Key-Value값을 엔트리(키와 값을 결함)의 형태로 Set에 저장하여 반환</td></tr><tr><td align="center">Object get(Object Key)</td><td align="center">지정된 키의 값을 반환한다.</td></tr><tr><td align="center">boolean isEmpty()</td><td align="center">HashMap이 비어있는지 확인한다.</td></tr><tr><td align="center">Set keySet()</td><td align="center">HashMap에 저장된 모든 키가 저장된 Set을 반환한다.</td></tr><tr><td align="center">Object put(Object key, Object Value)</td><td align="center">HashMap에 키와 값을 저장</td></tr><tr><td align="center">void putAll(Map m)</td><td align="center">Map에 해당하는 모든 요소를 HashMap에 저장한다.</td></tr><tr><td align="center">Object remove(Object key)</td><td align="center">HashMap에서 지정된 키로 지정된 값을 제거한다.</td></tr><tr><td align="center">int size()</td><td align="center">HashMap에 저장된 요소의 개수를 반환한다.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;알고리즘-기본-개념-정리&quot;&gt;&lt;a href=&quot;#알고리즘-기본-개념-정리&quot; class=&quot;headerlink&quot; title=&quot;알고리즘 기본 개념 정리&quot;&gt;&lt;/a&gt;알고리즘 기본 개념 정리&lt;/h2&gt;&lt;h3 id=&quot;cf-HASH란&quot;&gt;&lt;a href=&quot;#c
      
    
    </summary>
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>기능 개발</title>
    <link href="https://khs9628.github.io/2019/09/10/codingtest3/"/>
    <id>https://khs9628.github.io/2019/09/10/codingtest3/</id>
    <published>2019-09-10T08:58:39.000Z</published>
    <updated>2019-09-20T13:55:36.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="기능-개발"><a href="#기능-개발" class="headerlink" title="기능 개발"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/42586" rel="external nofollow noopener noreferrer" target="_blank">기능 개발</a></h2><p><strong>스택/큐</strong><br>프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p><p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p><p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><blockquote><ul><li>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.</li><li>작업 진도는 100 미만의 자연수입니다.</li><li>작업 속도는 100 이하의 자연수입니다.</li><li>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</li></ul></blockquote><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th>progresses</th><th>speeds</th><th>return</th></tr></thead><tbody><tr><td>[93,30,55]</td><td>[1,30,5]</td><td>[2,1]</td></tr></tbody></table><p>첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.<br>두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다. 하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.<br>세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.</p><p>따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.</p><h2 id="1차-답안-배열을-적용"><a href="#1차-답안-배열을-적용" class="headerlink" title="1차 답안 - 배열을 적용"></a>1차 답안 - 배열을 적용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] progresses, <span class="keyword">int</span>[] speeds) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] dayOfend = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">int</span> day = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;progresses.length; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(progresses[i] + (day*speeds[i]) &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                day++;</span><br><span class="line">            &#125;</span><br><span class="line">            dayOfend[day]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Arrays.stream(dayOfend).filter(i -&gt; i!=<span class="number">0</span>).toArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2차-답안-큐를-이용"><a href="#2차-답안-큐를-이용" class="headerlink" title="2차 답안 - 큐를 이용"></a>2차 답안 - 큐를 이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] progresses, <span class="keyword">int</span>[] speeds) &#123;</span><br><span class="line">        Queue&lt;Integer&gt; q = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//q의 사이즈는 poll 수행시 변경되므로 for문에서 고정조건으로 사용할 시 변수에 사이즈를 따로 담아둔다.</span></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = progresses.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == len) &#123;</span><br><span class="line">                q.add(num);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(progresses[i] &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                num++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num != <span class="number">0</span>) &#123;</span><br><span class="line">                q.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            num = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> remain = <span class="number">100</span> - progresses[i];</span><br><span class="line">            <span class="keyword">int</span> day = remain / speeds[i]; <span class="comment">// 100프로 달성까지 걸리는 일수 </span></span><br><span class="line">            <span class="keyword">if</span>(remain % speeds[i] != <span class="number">0</span>) day++;</span><br><span class="line">             </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; len; j++)&#123;</span><br><span class="line">                progresses[j] += (day * speeds[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[q.size()];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; answer.length; i++)&#123;</span><br><span class="line">            answer[i] = q.poll();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3차-답안-큐를-이용"><a href="#3차-답안-큐를-이용" class="headerlink" title="3차 답안 - 큐를 이용"></a>3차 답안 - 큐를 이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentLinkedQueue;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] progresses, <span class="keyword">int</span>[] speeds) &#123;</span><br><span class="line">        Queue&lt;Integer&gt; q = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;Integer&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; progresses.length; i++) &#123;</span><br><span class="line">            q.add((<span class="number">100</span>-progresses[i])%speeds[i] == <span class="number">0</span>? (<span class="number">100</span> - progresses[i]) / speeds[i]</span><br><span class="line">                    : (<span class="number">100</span> - progresses[i]) / speeds[i] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> standard = q.poll();</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!q.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = q.poll();</span><br><span class="line">            <span class="keyword">if</span>(standard &gt;= num) &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                result.add(cnt);</span><br><span class="line">                cnt = <span class="number">1</span>;</span><br><span class="line">                standard = num;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        result.add(cnt);</span><br><span class="line">        <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[result.size()];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; answer.length; i++) &#123;</span><br><span class="line">            answer[i] = result.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;기능-개발&quot;&gt;&lt;a href=&quot;#기능-개발&quot; class=&quot;headerlink&quot; title=&quot;기능 개발&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42586&quot; rel=
      
    
    </summary>
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>React &amp; Django 꾸미기</title>
    <link href="https://khs9628.github.io/2019/09/09/React6/"/>
    <id>https://khs9628.github.io/2019/09/09/React6/</id>
    <published>2019-09-09T13:21:21.000Z</published>
    <updated>2019-09-26T09:53:53.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Material-UI"><a href="#Material-UI" class="headerlink" title="Material UI"></a>Material UI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// with npm</span><br><span class="line">npm install @material-ui/core</span><br><span class="line"></span><br><span class="line">// with npm</span><br><span class="line">npm install @material-ui/icons</span><br></pre></td></tr></table></figure><h1 id="robo-font-import-public-index-html"><a href="#robo-font-import-public-index-html" class="headerlink" title="robo font import public/index.html"></a>robo font import public/index.html</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* robo font */</span></span><br><span class="line">&lt;link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;display=swap" /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* font-icon */</span></span><br><span class="line">&lt;link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>Uncaught (in promise) Error: Request failed with status code 404<br>Button Component를 사용해서 컴포넌트 정보가 다 넘어옴..</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;Button color=<span class="string">"secondary"</span> size=<span class="string">"small"</span>  value = &#123;post.id&#125; onClick= &#123;<span class="keyword">this</span>.handlingDelete&#125;&gt;삭제하기&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ ------------------------------------------------</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 직접 데이터를 넘겨준다</span></span><br><span class="line"><span class="regexp">&lt;Button color="secondary" size="small" onClick=&#123;(event)=&gt;this.handlingDelete(post.id)&#125;&gt;삭제하기&lt;/</span>Button&gt;</span><br></pre></td></tr></table></figure><h2 id="App-css"><a href="#App-css" class="headerlink" title="App.css"></a>App.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.PostingPaper</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.PostingForm</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="App-js"><a href="#App-js" class="headerlink" title="App.js"></a>App.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'./api'</span>;</span><br><span class="line"><span class="keyword">import</span> PostView <span class="keyword">from</span> <span class="string">'./Components/PostView'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Container <span class="keyword">from</span> <span class="string">'@material-ui/core/Container'</span>;</span><br><span class="line"><span class="keyword">import</span> Paper <span class="keyword">from</span> <span class="string">'@material-ui/core/Paper'</span>;</span><br><span class="line"><span class="keyword">import</span> TextField <span class="keyword">from</span> <span class="string">'@material-ui/core/TextField'</span>;</span><br><span class="line"><span class="keyword">import</span> Button <span class="keyword">from</span> <span class="string">'@material-ui/core/Button'</span>;</span><br><span class="line"><span class="comment">//card</span></span><br><span class="line"><span class="keyword">import</span> Card <span class="keyword">from</span> <span class="string">'@material-ui/core/Card'</span>;</span><br><span class="line"><span class="keyword">import</span> CardActions <span class="keyword">from</span> <span class="string">'@material-ui/core/CardActions'</span>;</span><br><span class="line"><span class="keyword">import</span> CardContent <span class="keyword">from</span> <span class="string">'@material-ui/core/CardContent'</span>;</span><br><span class="line"><span class="keyword">import</span> Typography <span class="keyword">from</span> <span class="string">'@material-ui/core/Typography'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">    <span class="keyword">super</span>(props)</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      title: <span class="string">''</span>,</span><br><span class="line">      content: <span class="string">''</span>,</span><br><span class="line">      results: [],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentDidMount()&#123;</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> getPosts()&#123;</span><br><span class="line">    <span class="keyword">const</span> _results = <span class="keyword">await</span> api.getAllPosts()</span><br><span class="line">    <span class="comment">//_results.data에는 아무 데이터가 없다. -&gt; 비동기</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">results</span>: _results.data&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(_results)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlingChange = <span class="function">(<span class="params">event</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;[event.target.name]: event.target.value&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlingSubmit = <span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    event.preventDefault() <span class="comment">//event의 기능 -&gt; 막는다</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> api.createPost(&#123;<span class="attr">title</span>: <span class="keyword">this</span>.state.title, <span class="attr">content</span>: <span class="keyword">this</span>.state.content&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"완료! "</span>+ result)</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">title</span>: <span class="string">''</span>, <span class="attr">content</span>: <span class="string">''</span>&#125;)</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlingDelete = <span class="keyword">async</span> (id) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> api.deletePost(id)</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  render()&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      &lt;Container maxWidth=<span class="string">"lg"</span>&gt;</span><br><span class="line">      &lt;div className=<span class="string">"PostingSection"</span>&gt;</span><br><span class="line">        &lt;Paper className=<span class="string">"PostingPaper"</span>&gt;</span><br><span class="line">          &lt;h2&gt;대나무 숲 작성하기&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">          &lt;form className="PostingForm" onSubmit=&#123;this.handlingSubmit&#125;&gt;</span></span><br><span class="line"><span class="regexp">          &lt;TextField</span></span><br><span class="line"><span class="regexp">            id="outlined-name"</span></span><br><span class="line"><span class="regexp">            label="title"</span></span><br><span class="line"><span class="regexp">            name="title"</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ className=&#123;classes.textField&#125;</span></span><br><span class="line"><span class="regexp">            value=&#123;this.state.title&#125;</span></span><br><span class="line"><span class="regexp">            onChange=&#123;this.handlingChange&#125;</span></span><br><span class="line"><span class="regexp">            margin="normal"</span></span><br><span class="line"><span class="regexp">            variant="outlined"</span></span><br><span class="line"><span class="regexp">          /</span>&gt;</span><br><span class="line"></span><br><span class="line">          &lt;TextField</span><br><span class="line">            id=<span class="string">"outlined-name"</span></span><br><span class="line">            label=<span class="string">"content"</span></span><br><span class="line">            name=<span class="string">"content"</span></span><br><span class="line">            multiline</span><br><span class="line">            rows=<span class="string">"4"</span></span><br><span class="line">            <span class="comment">// className=&#123;classes.textField&#125;</span></span><br><span class="line">            value=&#123;<span class="keyword">this</span>.state.content&#125;</span><br><span class="line">            onChange=&#123;<span class="keyword">this</span>.handlingChange&#125;</span><br><span class="line">            margin=<span class="string">"normal"</span></span><br><span class="line">            variant=<span class="string">"outlined"</span></span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;Button variant=<span class="string">"contained"</span> color=<span class="string">"primary"</span> type =<span class="string">"submit"</span>&gt;제출하기&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>form&gt;</span><br><span class="line">        &lt;<span class="regexp">/Paper&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;div className=<span class="string">"ViewSection"</span>&gt;</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">this</span>.state.results.map(<span class="function">(<span class="params">post</span>) =&gt;</span></span><br><span class="line">            &lt;Card className=&#123;<span class="string">'card'</span>&#125;&gt;</span><br><span class="line">              &lt;CardContent&gt;</span><br><span class="line">                &lt;Typography&gt;</span><br><span class="line">                  &lt;PostView key = &#123;post.id&#125; id = &#123;post.id&#125; title = &#123;post.title&#125; content = &#123;post.content&#125;/&gt;</span><br><span class="line">                &lt;<span class="regexp">/Typography&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>CardContent&gt;</span><br><span class="line">              &lt;CardActions&gt;</span><br><span class="line">                &lt;Button color=<span class="string">"secondary"</span> size=<span class="string">"small"</span> onClick=&#123;(event)=&gt;<span class="keyword">this</span>.handlingDelete(post.id)&#125;&gt;삭제하기&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>CardActions&gt;</span><br><span class="line">            &lt;<span class="regexp">/Card&gt;</span></span><br><span class="line"><span class="regexp">          )</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      &lt;<span class="regexp">/Container&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/project2.PNG" class="lozad">)</p><h1 id="Material-UI-1"><a href="#Material-UI-1" class="headerlink" title="Material-UI"></a><a href="https://material-ui.com/" rel="external nofollow noopener noreferrer" target="_blank">Material-UI</a></h1><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Material-UI&quot;&gt;&lt;a href=&quot;#Material-UI&quot; class=&quot;headerlink&quot; title=&quot;Material UI&quot;&gt;&lt;/a&gt;Material UI&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
    
      <category term="React" scheme="https://khs9628.github.io/categories/React/"/>
    
    
      <category term="React6" scheme="https://khs9628.github.io/tags/React6/"/>
    
  </entry>
  
  <entry>
    <title>React &amp; Django 기능</title>
    <link href="https://khs9628.github.io/2019/09/09/React5/"/>
    <id>https://khs9628.github.io/2019/09/09/React5/</id>
    <published>2019-09-09T13:21:20.000Z</published>
    <updated>2019-09-26T09:53:47.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="프로젝트-설명-대나무숲"><a href="#프로젝트-설명-대나무숲" class="headerlink" title="프로젝트 설명 : 대나무숲"></a>프로젝트 설명 : 대나무숲</h2><ol><li>Django-backend : API 호출 ( 글 저장 / 글 가져오기 / 글 삭제)</li><li>React-Frontend : 간단한 글 쓰기 및 보여주기 , 삭제</li><li>Axios : http 통신 (비동기 통신) </li></ol><h2 id="Install-필요한-패키지-설치"><a href="#Install-필요한-패키지-설치" class="headerlink" title="Install 필요한 패키지 설치"></a>Install 필요한 패키지 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install django-restframework</span><br><span class="line">pip install django-cors-headers</span><br></pre></td></tr></table></figure><h2 id="Run-DB-마이그래이션"><a href="#Run-DB-마이그래이션" class="headerlink" title="Run DB 마이그래이션"></a>Run DB 마이그래이션</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><h2 id="BACKEND-API명세"><a href="#BACKEND-API명세" class="headerlink" title="BACKEND API명세"></a>BACKEND API명세</h2><table><thead><tr><th align="center">URL</th><th align="center">METHOD</th><th align="center">Description</th><th align="center">Params</th><th align="center">Return</th></tr></thead><tbody><tr><td align="center">/api/posts</td><td align="center">GET</td><td align="center">전체 글을 조회합니다.</td><td align="center"></td><td align="center">[…{Post}]</td></tr><tr><td align="center">/api/posts</td><td align="center">POST</td><td align="center">새로운 글을 작성합니다.</td><td align="center"></td><td align="center">{Post}</td></tr><tr><td align="center">/api/posts/[id]</td><td align="center">GET</td><td align="center">특정 ID의 글을 조회합니다.</td><td align="center"></td><td align="center">{Post}</td></tr><tr><td align="center">/api/posts/[id]</td><td align="center">DELETE</td><td align="center">특정 ID의 글을 삭제합니다.</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="React-app-생성"><a href="#React-app-생성" class="headerlink" title="React app 생성"></a>React app 생성</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app reactfrontend</span><br><span class="line"><span class="comment"># 시작</span></span><br><span class="line">npm start</span><br><span class="line"><span class="comment"># promise 기반의 http 통신 (비동기 통신)</span></span><br><span class="line">npm install axios</span><br></pre></td></tr></table></figure><h3 id="React-App에-src-api-js-생성"><a href="#React-App에-src-api-js-생성" class="headerlink" title="React App에 src/api.js 생성"></a>React App에 src/api.js 생성</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// axios 를 사용하는 js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">"axios"</span></span><br><span class="line"></span><br><span class="line">axios.defaults.baseURL = <span class="string">"http://127.0.0.1:8000/api"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// 모든 글 불러오기</span></span><br><span class="line">    getAllPosts()&#123;</span><br><span class="line">        <span class="keyword">return</span> axios.get(<span class="string">'/posts/'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    ,</span><br><span class="line">    <span class="comment">// 글 작성하기</span></span><br><span class="line">    createPost(data)&#123;</span><br><span class="line">        <span class="keyword">return</span> axios.post(<span class="string">'/posts/'</span>, data)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 글 삭제하기</span></span><br><span class="line">    deletePost(id)&#123;</span><br><span class="line">        <span class="keyword">return</span> axios.delete(<span class="string">'/posts/'</span>+<span class="built_in">String</span>(id))</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="글을-써주고-삭제할수-있게-해주는-PostView-js-컴포넌트-작성"><a href="#글을-써주고-삭제할수-있게-해주는-PostView-js-컴포넌트-작성" class="headerlink" title="글을 써주고 삭제할수 있게 해주는 PostView.js 컴포넌트 작성"></a>글을 써주고 삭제할수 있게 해주는 PostView.js 컴포넌트 작성</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// const dumy_prop = &#123;</span></span><br><span class="line"><span class="comment">//     title: '테스트용 타이틀',</span></span><br><span class="line"><span class="comment">//     content: '테스트용 글 입니다',</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">PostView</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;id, title, content&#125; = <span class="keyword">this</span>.props</span><br><span class="line">        <span class="keyword">return</span>(</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &#123;id&#125;</span><br><span class="line">                &lt;h3&gt;&#123;title&#125;&lt;<span class="regexp">/h3&gt;</span></span><br><span class="line"><span class="regexp">                &lt;p&gt;&#123;content&#125;&lt;/</span>p&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="app-js-gt-index-js-main-컴포넌트인-App-js-작성"><a href="#app-js-gt-index-js-main-컴포넌트인-App-js-작성" class="headerlink" title="app.js -&gt; index.js main 컴포넌트인 App.js 작성"></a>app.js -&gt; index.js main 컴포넌트인 App.js 작성</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">'./api'</span>;</span><br><span class="line"><span class="keyword">import</span> PostView <span class="keyword">from</span> <span class="string">'./Components/PostView'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">    <span class="keyword">super</span>(props)</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      title: <span class="string">''</span>,</span><br><span class="line">      content: <span class="string">''</span>,</span><br><span class="line">      results: [],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentDidMount()&#123;</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> getPosts()&#123;</span><br><span class="line">    <span class="keyword">const</span> _results = <span class="keyword">await</span> api.getAllPosts()</span><br><span class="line">    <span class="comment">//_results.data에는 아무 데이터가 없다. -&gt; 비동기</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">results</span>: _results.data&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(_results)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlingChange = <span class="function">(<span class="params">event</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;[event.target.name]: event.target.value&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlingSubmit = <span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    event.preventDefault() <span class="comment">//event의 기능 -&gt; 막는다</span></span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">await</span> api.createPost(&#123;<span class="attr">title</span>: <span class="keyword">this</span>.state.title, <span class="attr">content</span>: <span class="keyword">this</span>.state.content&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"완료! "</span>+ result)</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">title</span>: <span class="string">''</span>, <span class="attr">content</span>: <span class="string">''</span>&#125;)</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125;</span><br><span class="line">  handlingDelete = <span class="keyword">async</span> (event) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> api.deletePost(event.target.value)</span><br><span class="line">    <span class="keyword">this</span>.getPosts()</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  render()&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      &lt;div className=<span class="string">"PostingSection"</span>&gt;</span><br><span class="line">        &lt;h2&gt;대나무 숲 작성하기&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">        &lt;form onSubmit=&#123;this.handlingSubmit&#125;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input</span></span><br><span class="line"><span class="regexp">          name="title"</span></span><br><span class="line"><span class="regexp">          value=&#123;this.state.title&#125;</span></span><br><span class="line"><span class="regexp">          onChange=&#123;this.handlingChange&#125;</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">        &lt;textarea</span><br><span class="line">          name=<span class="string">"content"</span></span><br><span class="line">          value=&#123;<span class="keyword">this</span>.state.content&#125;</span><br><span class="line">          onChange=&#123;<span class="keyword">this</span>.handlingChange&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;button type =<span class="string">"submit"</span>&gt;제출하기&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>form&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      </span></span><br><span class="line"><span class="regexp">      &lt;div className="ViewSection"&gt;</span></span><br><span class="line"><span class="regexp">        &#123;</span></span><br><span class="line"><span class="regexp">          this.state.results.map((post) =&gt;</span></span><br><span class="line"><span class="regexp">          &lt;div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;PostView key = &#123;post.id&#125; id = &#123;post.id&#125; title = &#123;post.title&#125; content = &#123;post.content&#125;/</span>&gt;</span><br><span class="line">            &lt;button value = &#123;post.id&#125; onClick=&#123;<span class="keyword">this</span>.handlingDelete&#125;&gt;삭제하기&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>div&gt;</span><br><span class="line">          )</span><br><span class="line">        &#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><blockquote><p>Uncaught TypeError: Cannot read property ‘map’ of undefined</p></blockquote><p><code>비동기</code>이기 때문에 결과값을 가져오기전에 넘어가버린다</p><p>-&gt; <strong>async / await</strong> 써줘야함 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">getPosts()&#123;</span><br><span class="line">    <span class="keyword">const</span> _results = api.getAllPosts()</span><br><span class="line">    <span class="comment">//_results.data에는 아무 데이터가 없다. -&gt; 비동기</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">results</span>: _results.data&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(_results)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">--------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> getPosts()&#123;</span><br><span class="line">    <span class="keyword">const</span> _results = <span class="keyword">await</span> api.getAllPosts()</span><br><span class="line">    <span class="comment">//_results.data에는 아무 데이터가 없다. -&gt; 비동기</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;<span class="attr">results</span>: _results.data&#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(_results)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="실행결과"><a href="#실행결과" class="headerlink" title="실행결과"></a>실행결과</h2><p><img alt="project" data-src="/img/React/project1.PNG" class="lozad"></p><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;프로젝트-설명-대나무숲&quot;&gt;&lt;a href=&quot;#프로젝트-설명-대나무숲&quot; class=&quot;headerlink&quot; title=&quot;프로젝트 설명 : 대나무숲&quot;&gt;&lt;/a&gt;프로젝트 설명 : 대나무숲&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Django-backend : API
      
    
    </summary>
    
    
      <category term="React" scheme="https://khs9628.github.io/categories/React/"/>
    
    
      <category term="React" scheme="https://khs9628.github.io/tags/React/"/>
    
  </entry>
  
</feed>
