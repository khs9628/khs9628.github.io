<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>현수쓰</title>
  
  <subtitle>하루를 기록하다</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://khs9628.github.io/"/>
  <updated>2020-10-12T08:37:43.366Z</updated>
  <id>https://khs9628.github.io/</id>
  
  <author>
    <name>현수쓰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>201012_codeTest</title>
    <link href="https://khs9628.github.io/2020/10/12/201012-codeTest/"/>
    <id>https://khs9628.github.io/2020/10/12/201012-codeTest/</id>
    <published>2020-10-12T07:36:54.000Z</published>
    <updated>2020-10-12T08:37:43.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h1><h1 id="완주하지-못한-선수"><a href="#완주하지-못한-선수" class="headerlink" title="완주하지 못한 선수"></a>완주하지 못한 선수</h1><h2 id="1차-답안"><a href="#1차-답안" class="headerlink" title="1차 답안"></a>1차 답안</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(participant, completion)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> member <span class="keyword">in</span> participant:</span><br><span class="line">        <span class="keyword">if</span> member <span class="keyword">in</span> completion:</span><br><span class="line">            completion.remove(member)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> member</span><br></pre></td></tr></table></figure><p>비효율적인 코드여서 효율성 통과 X</p><h2 id="2차-답안"><a href="#2차-답안" class="headerlink" title="2차 답안"></a>2차 답안</h2><p><code>sort()</code> : 정렬, 기본값은 오름차순 정렬, reverse옵션 True는 내림차순 정렬</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>]</span><br><span class="line">a.sort()</span><br><span class="line">a</span><br><span class="line"><span class="comment"># [1, 5, 6, 7, 10]</span></span><br><span class="line">a.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">a</span><br><span class="line"><span class="comment"># [10, 7, 6, 5, 1]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(participant, completion)</span>:</span> </span><br><span class="line">    participant.sort() </span><br><span class="line">    completion.sort() </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(completion)): </span><br><span class="line">        <span class="keyword">if</span> participant[i] != completion[i]: </span><br><span class="line">            <span class="keyword">return</span> participant[i] </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> participant[i+<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h1 id="전화번호-부"><a href="#전화번호-부" class="headerlink" title="전화번호 부"></a>전화번호 부</h1><p><code>find(찾을문자, 찾기시작할위치)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(phone_book)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(phone_book)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(phone_book)):</span><br><span class="line">            <span class="keyword">if</span> phone_book[i].find(phone_book[j]) == <span class="number">0</span> <span class="keyword">or</span> phone_book[j].find(phone_book[i]) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p><code>startswith(시작하는문자, 시작지점)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(phone_book)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(phone_book)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(phone_book)):</span><br><span class="line">            <span class="keyword">if</span> phone_book[i].startswith(phone_book[j]) == <span class="literal">True</span> <span class="keyword">or</span> phone_book[j].startswith(phone_book[i]) == <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p><code>다른사람 풀이</code></p><p><code>sort()</code> : 정렬, 기본값은 오름차순 정렬, reverse옵션 True는 내림차순 정렬</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">6</span>]</span><br><span class="line">a.sort()</span><br><span class="line">a</span><br><span class="line"><span class="comment"># [1, 5, 6, 7, 10]</span></span><br><span class="line">a.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">a</span><br><span class="line"><span class="comment"># [10, 7, 6, 5, 1]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(phone_book)</span>:</span></span><br><span class="line">    phone_book.sort() </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(phone_book)<span class="number">-1</span>): </span><br><span class="line">        <span class="keyword">if</span> phone_book[i] <span class="keyword">in</span> phone_book[i+<span class="number">1</span>]: </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">`</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hash&quot;&gt;&lt;a href=&quot;#Hash&quot; class=&quot;headerlink&quot; title=&quot;Hash&quot;&gt;&lt;/a&gt;Hash&lt;/h1&gt;&lt;h1 id=&quot;완주하지-못한-선수&quot;&gt;&lt;a href=&quot;#완주하지-못한-선수&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>201012_SQL</title>
    <link href="https://khs9628.github.io/2020/10/12/201012-SQL/"/>
    <id>https://khs9628.github.io/2020/10/12/201012-SQL/</id>
    <published>2020-10-12T05:18:27.000Z</published>
    <updated>2020-10-12T07:22:29.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL-하루-문제"><a href="#SQL-하루-문제" class="headerlink" title="SQL 하루 문제"></a>SQL 하루 문제</h2><h2 id="2020-10-12"><a href="#2020-10-12" class="headerlink" title="2020-10-12"></a>2020-10-12</h2><h2 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h2><p><img alt="1" data-src="/img/SQL/SQL1.PNG" class="lozad"><br><img alt="2" data-src="/img/SQL/SQL2.PNG" class="lozad"><br><img alt="3" data-src="/img/SQL/SQL3.PNG" class="lozad"><br><img alt="4" data-src="/img/SQL/SQL4.PNG" class="lozad"><br><img alt="5" data-src="/img/SQL/SQL5.PNG" class="lozad"><br><img alt="6" data-src="/img/SQL/SQL6.PNG" class="lozad"><br><img alt="7" data-src="/img/SQL/SQL7.PNG" class="lozad"></p><h2 id="SUM-MAX-MIN"><a href="#SUM-MAX-MIN" class="headerlink" title="SUM, MAX, MIN"></a>SUM, MAX, MIN</h2><p><img alt="1" data-src="/img/SQL/SQL8.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL9.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL10.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL11.PNG" class="lozad"></p><h2 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP BY"></a>GROUP BY</h2><p><img alt="1" data-src="/img/SQL/SQL12.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL13.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL14.PNG" class="lozad"><br><img alt="1" data-src="/img/SQL/SQL15.PNG" class="lozad"></p><h2 id="2020-10-13"><a href="#2020-10-13" class="headerlink" title="2020-10-13"></a>2020-10-13</h2><h2 id="IS-NULL"><a href="#IS-NULL" class="headerlink" title="IS NULL"></a>IS NULL</h2><h2 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h2><h2 id="STRING-DATE"><a href="#STRING-DATE" class="headerlink" title="STRING, DATE"></a>STRING, DATE</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SQL-하루-문제&quot;&gt;&lt;a href=&quot;#SQL-하루-문제&quot; class=&quot;headerlink&quot; title=&quot;SQL 하루 문제&quot;&gt;&lt;/a&gt;SQL 하루 문제&lt;/h2&gt;&lt;h2 id=&quot;2020-10-12&quot;&gt;&lt;a href=&quot;#2020-10-12&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>iptables</title>
    <link href="https://khs9628.github.io/2020/10/08/200708_iptables/"/>
    <id>https://khs9628.github.io/2020/10/08/200708_iptables/</id>
    <published>2020-10-08T07:15:11.000Z</published>
    <updated>2020-10-08T07:15:36.237Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>WAF</title>
    <link href="https://khs9628.github.io/2020/10/07/201007_WAF/"/>
    <id>https://khs9628.github.io/2020/10/07/201007_WAF/</id>
    <published>2020-10-07T03:50:27.000Z</published>
    <updated>2020-10-08T07:14:49.219Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AWS-Structure-API-서버-구성도"><a href="#AWS-Structure-API-서버-구성도" class="headerlink" title="AWS Structure (API 서버 구성도)"></a>AWS Structure (API 서버 구성도)</h2><p><code>Route53</code> &gt; <code>WAF</code> &gt; <code>ALB</code> &gt; <code>AutoScalingGroup</code> &gt; <code>EC2</code> &gt; <code>Nginx</code> &gt; <code>Django</code></p><h3 id="Route53"><a href="#Route53" class="headerlink" title="Route53"></a>Route53</h3><p>DNS (Domain Name System) </p><p>www.도메인.com과 같이 도메인을 통해 컴퓨터 간 연결에 사용되는 숫자 IP 주소와 연결하줍니다.</p><h3 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h3><p>WAF (Web Application Firewall)<br>방화벽 ELB에 요청을 보내기 전 비상적 요청에 대한 사항을 차단합니다.</p><h3 id="ALB-ELB"><a href="#ALB-ELB" class="headerlink" title="ALB(ELB)"></a>ALB(ELB)</h3><p>ALB (Application LoadBalancer)</p><p>API 통신만 허용하기 때문에 Load Balancer 중 <code>http/https</code>만 허용하는 ALB를 사용합니다.</p><h3 id="AutoScaling-Group"><a href="#AutoScaling-Group" class="headerlink" title="AutoScaling Group"></a>AutoScaling Group</h3><p>ALB에서 오는 요청들을 처리하는 EC2의 갯수를 관리합니다.<br>CPU 사용량에 따라 트래픽이 증가하면 AutoScaling 규칙에 따라 EC2를 새로 증설하고 트래픽이 감소하면 규칙에 따라 자동적으로 감소하는 역할을 수행합니다.</p><ul><li>cf1) 통상적으로 Cpu Utilization이 50%가 넘는다<br>면 증가 20%이하면 감소 하는 규칙을 구성했습니다.</li></ul><p>기존 유지하는 ec2에 개수에 따라 달라질 수 있습니다.</p><ul><li><p>cf2) 서버의 cpu 사용량은 40~60퍼로 유지하는것이 안정적입니다.</p></li><li><p>cf3) AutoScaling된 EC2의 DOCKER 서버 초기화 및 재기동이 필요하다면 인스턴스 세부 정보 구성에 이르면 사용자 데이터(User data) 필드에 아래의 명령어를 기입한다.</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="EC2"><a href="#EC2" class="headerlink" title="EC2"></a>EC2</h3><p>EC2의 보안규칙은 같은 VPC에 존재하는 로드밸런서에서 오는 요청만 처리하게 구성하고 iptables로 리눅스 자체의 방화벽을 강화해 DDoS요청을 방지합니다.</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>Http_REFERER, USER_AGENT, GEO_IP 등 인가된 사용자가 아니면 해당 요청을 수행하지 못하게 구성합니다.</p><h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><p>jwt token을 통해서 로그인을 관리하고<br>Api_key를 통해 해당 API를 실행할 때 Authorization 부분에 해당되는 key가 존재하지 않는다면 API 접근 에러를 발생하게 구성합니다.<br>또한 CORS 설정을 통해 WHITE_LIST를 관리해 해당되는 사이트가 아니면 CORS POLICY를 위반해 접근 불가능하게 구성합니다.</p><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>nginx / Django(Gunicorn) / Celery / RabbitMQ 모두 Docker로 구동됩니다.</p><h2 id="WAF-설정"><a href="#WAF-설정" class="headerlink" title="WAF 설정"></a>WAF 설정</h2><p>AWS WAF는 CloudFront(CDN)/ALB/API Gateway 3가지 서비스에 연동가능하며 저는 위에 구성되어 있는 alb와 연동했습니다.</p><p>WAF 는 ACL 과 Rule로 구성되어 있고 <code>ACL</code>은 <code>Rule</code>들의 집합이라고 생각하면 편합니다.</p><p>HTTP_REFERER / User-Agent / GEO_IP에 대해서는 내부서버(EC2)에서 처리하므로 초반 비정상적 트래픽을 관리하기 위해 Rule Based 규칙에 있는 5분동안 Source IP(IP주소)에서 N번의 요청을 보낼 시 차단하는 방화벽을 구성합니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AWS-Structure-API-서버-구성도&quot;&gt;&lt;a href=&quot;#AWS-Structure-API-서버-구성도&quot; class=&quot;headerlink&quot; title=&quot;AWS Structure (API 서버 구성도)&quot;&gt;&lt;/a&gt;AWS Structur
      
    
    </summary>
    
    
      <category term="aws" scheme="https://khs9628.github.io/categories/aws/"/>
    
    
      <category term="aws" scheme="https://khs9628.github.io/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>GITLAB CI &amp; CodeDeploy 설정</title>
    <link href="https://khs9628.github.io/2020/10/06/201007_CICD/"/>
    <id>https://khs9628.github.io/2020/10/06/201007_CICD/</id>
    <published>2020-10-06T08:11:02.000Z</published>
    <updated>2020-10-07T05:36:03.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CICD란"><a href="#CICD란" class="headerlink" title="CICD란?"></a>CICD란?</h1><p><code>CI - Continuous Integration</code>  </p><ul><li><p>개발자를 위한 자동화 프로세스</p></li><li><p>개발자간의 코드 충돌을 방지하기 위한 목적</p></li><li><p>정기적인 빌드 및 테스트(유닛테스트 및 통합테스트)를 거쳐 공유 레포지터리에 병합되는 과정</p></li></ul><p><code>CD(1) - Continuous Delivery</code></p><ul><li><p>애플리케이션에 적용한 변경사항이 버그 테스트를 거쳐 레포지터리에 자동으로 업로드 되는 것</p></li><li><p>운영팀은 언제든 실시간으로 이 레포지터리에서 실시간으로 프로덕션 환경으로 배포 가능</p></li></ul><p><code>CD(2) - Continuous Deployment</code></p><ul><li><p>애플리케이션을 프로덕션 환경으로 배포하는 작업을 자동화 하는 것</p></li><li><p>Continuous Delivery로 통칭하여 언급하기도 함</p></li></ul><h2 id="GITLAB-CI"><a href="#GITLAB-CI" class="headerlink" title="GITLAB CI"></a>GITLAB CI</h2><p><code>gitlab-ci.yml</code> 파일을 통해 CI (Continuous Integration) 관리 및 테스트</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 기본 이미지를 docker 기반으로 설정</span></span><br><span class="line"><span class="attr">image:</span> <span class="attr">docker:latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  - docker:</span><span class="string">dind</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="comment">#배포 단계 설정</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_script:</span></span><br><span class="line"><span class="comment"># 도커 관련 설정</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">docker</span> <span class="string">info</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">docker-compose</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">docker-compose</span> <span class="bullet">--version</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="comment"># build stage 설정</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span>  </span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  tags:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">docker</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"Building the app"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">docker-compose</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">apk</span> <span class="string">install</span> <span class="string">zip</span></span><br><span class="line">    <span class="comment"># zip &#123;압축 파일명&#125;.zip &#123;압축할 파일 혹은 디렉토리1&#125; &#123;압축할 파일 혹은 디렉토리2&#125;</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">zip</span> <span class="string">deploy.zip</span> <span class="string">./*</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line">  <span class="comment"># deploy.zip 파일을 다음 stage에도 유지</span></span><br><span class="line"><span class="attr">    expire_in:</span> <span class="number">1</span> <span class="string">hour</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">deploy.zip</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">python:latest</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  script:</span>    </span><br><span class="line"><span class="bullet">    -</span> <span class="string">echo</span> <span class="string">"Deploying the app"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">pip</span> <span class="string">install</span> <span class="string">awscli</span></span><br><span class="line">    <span class="comment"># s3로 복사</span></span><br><span class="line">    <span class="comment"># aws s3 cp &lt;source&gt; &lt;target&gt; [--options]</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">aws</span> <span class="string">s3</span> <span class="string">cp</span> <span class="string">./deploy.zip</span> <span class="attr">s3://www.s3주소.com</span></span><br><span class="line">    <span class="comment"># codedeploy 배포 생성</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">aws</span> <span class="string">deploy</span> <span class="string">create-deployment</span> <span class="string">application-name</span> <span class="string">어플리케이션이름</span> <span class="bullet">--deployment-config-name</span> <span class="string">CodeDeployDefault.OneAtATime</span> <span class="bullet">--deployment-group-name</span> <span class="string">그룹이름</span> <span class="bullet">--s3-location</span> <span class="string">bucket=s3버킷,bundleType=zip,key=WordPressApp.zip</span></span><br></pre></td></tr></table></figure><h2 id="CodeDeploy-설정"><a href="#CodeDeploy-설정" class="headerlink" title="CodeDeploy 설정"></a>CodeDeploy 설정</h2><p>CodeDeploy는 <code>애플리케이션</code> &gt; <code>배포설정</code> &gt; <code>배포</code> 3단계로 구성되어있으며 어플리케이션과 배포설정 부분에서 배포에 관한 전반적인 설정을 해놓고 GitLab CI를 통해 배포 요청을 보내 CodeDeploy를 실행합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#/appspec.yml</span><br><span class="line">version: 0.0</span><br><span class="line">os: linux</span><br><span class="line"></span><br><span class="line"># 실행하는 권한 설정 (root)</span><br><span class="line">permissions:</span><br><span class="line">  - object: /</span><br><span class="line">    pattern: &quot;**&quot;</span><br><span class="line">    owner: root</span><br><span class="line">    group: root</span><br><span class="line"></span><br><span class="line">files:</span><br><span class="line">  - source: /</span><br><span class="line">    destination: /home/ubuntu/build</span><br><span class="line">hooks:</span><br><span class="line">  BeforeInstall:</span><br><span class="line">    - location: scripts/BeforeInstall.sh</span><br><span class="line">      runas: root</span><br><span class="line"># AfterInstall앞은 2칸이다.</span><br><span class="line">  AfterInstall:</span><br><span class="line">    - location: scripts/AfterInstall.sh</span><br><span class="line">      runas: root</span><br></pre></td></tr></table></figure><p>cf) CodeDeploy를 사용하기 위해서는 배포되는 EC2에 codedeploy Agent가 동작하고 있어야하며 EC2 IAM ROLE에 codedeploy에 관한 권한을 설정해두어야 합니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CICD란&quot;&gt;&lt;a href=&quot;#CICD란&quot; class=&quot;headerlink&quot; title=&quot;CICD란?&quot;&gt;&lt;/a&gt;CICD란?&lt;/h1&gt;&lt;p&gt;&lt;code&gt;CI - Continuous Integration&lt;/code&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="aws" scheme="https://khs9628.github.io/categories/aws/"/>
    
    
      <category term="cicd" scheme="https://khs9628.github.io/tags/cicd/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="https://khs9628.github.io/2020/10/06/201007_docker/"/>
    <id>https://khs9628.github.io/2020/10/06/201007_docker/</id>
    <published>2020-10-06T06:48:00.000Z</published>
    <updated>2020-10-07T05:35:03.286Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="도커를-배워야-하는-이유"><a href="#도커를-배워야-하는-이유" class="headerlink" title="도커를 배워야 하는 이유?"></a>도커를 배워야 하는 이유?</h2><p>과거에는 애플리케이션 개발은 프로그래밍과 테스트 스킬을 가진 애플리케이션 엔진니어가<br>환경구축은 네트워크나 하드웨어를 잘아는 인프라 엔진니어가 담당했습니다.</p><p>그런데 데이터센터나 서버실을 두고 하는 온프레미스 방식에서 가상의 서버를 여러 대 띄우는 클라우드 방식으로 변화되었습니다.</p><p>이런 분산환경에서는 인프라 엔지니어가 수동으로 관리하는 대신 자동화된 툴을 사용해 오케스트레이션 합니다.<br>따라서 인프라 엔지니어도 자동화를 위해 코드를 작성하는 능력이 필요하게되었습니다.</p><h4 id="IT-Infrastructure"><a href="#IT-Infrastructure" class="headerlink" title="IT Infrastructure?"></a>IT Infrastructure?</h4><p><code>IT 인프라</code>란 애플리케이션을 가동시키기 위한 필요한 하드웨어, OS , 미들웨어, 네트워크 등 시스템의 기반을 말합니다.</p><h2 id="STEP-2-Docker"><a href="#STEP-2-Docker" class="headerlink" title="STEP 2. Docker"></a>STEP 2. Docker</h2><p>서비스 운영 환경을 묶어서 손쉽게 배포하고 실행하는 경량 컨테이너 기술로 인프라 구축을 손쉽게 할 수 있는 도구입니다.</p><h3 id="도커설치"><a href="#도커설치" class="headerlink" title="도커설치"></a>도커설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 도커 설치</span><br><span class="line">$ curl -fsSL https://get.docker.com/ | sudo sh</span><br><span class="line"></span><br><span class="line"># 도커 설치 확인</span><br><span class="line">$ sudo docker version</span><br><span class="line"></span><br><span class="line"># 도커 방화벽(ufw) 설정</span><br><span class="line">$ sudo ufw allow 4243/tcp</span><br></pre></td></tr></table></figure><h3 id="권한-설정"><a href="#권한-설정" class="headerlink" title="권한 설정"></a>권한 설정</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 도커라는 이름의 그룹 설정</span><br><span class="line">$ sudo groupadd docker</span><br><span class="line"></span><br><span class="line"># 도커그룹에 유저 등록 </span><br><span class="line">$ sudo gpasswd -a ubuntu docker</span><br><span class="line"></span><br><span class="line">#cf) gpasswd -a 는 그룹에 해당 멤버를 추가하는 명령어입니다.</span><br><span class="line"></span><br><span class="line"># 재시작</span><br><span class="line">$ sudo service docker restart</span><br></pre></td></tr></table></figure><h3 id="도커-이미지-Image-이해하기"><a href="#도커-이미지-Image-이해하기" class="headerlink" title="도커 이미지 (Image) 이해하기"></a>도커 이미지 (Image) 이해하기</h3><p><code>이미지</code>는 서비스 운영에 필요한 서버 프로그램, 소스 코드, 컴파일된 실행 파일을 묶은 형태</p><p><code>컨테이너</code>는 이미지를 실행한 상태</p><p>이미지 = 실행파일 /  컨테이너 = 프로세스</p><p>=&gt; apt-get install 라이브러리와 같이 해당 내용을 docker pull 라이브러리를 통해 받아올 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 다운 받았던 이미지 목록 확인</span><br><span class="line">$ docker images</span><br><span class="line"></span><br><span class="line"># 해당 이미지[] 다운로드</span><br><span class="line">$ docker pull [ubuntu]</span><br></pre></td></tr></table></figure><h3 id="docker-기초-실습"><a href="#docker-기초-실습" class="headerlink" title="docker 기초 실습!"></a>docker 기초 실습!</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># 도커로 이미지 쉘 접근</span><br><span class="line">$ docker run -i -t ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line"># 도커로 접근한 쉘 나가기</span><br><span class="line">$ exit </span><br><span class="line"></span><br><span class="line"># 컨테이너 목록 확인하기</span><br><span class="line">$ docker ps -a</span><br><span class="line"></span><br><span class="line"># 컨테이너[] 재시작 하기</span><br><span class="line">$ docker restart [e2af61348652]</span><br><span class="line"></span><br><span class="line"># 재시작한 컨테이너[] 접근하기</span><br><span class="line">$ docker attach [e2af61348652]</span><br><span class="line"></span><br><span class="line"># git download</span><br><span class="line">$ apt-get update</span><br><span class="line">$ apt-get install -y git</span><br><span class="line">$ git --version</span><br><span class="line"></span><br><span class="line"># 컨테이너[] 변경사항 확인하기</span><br><span class="line">$ docker diff [e2af61348652]</span><br><span class="line"></span><br><span class="line"># 해당 작업 컨테이너 이미지 저장</span><br><span class="line">$ docker commit [eb0b81046522] ubuntu:git</span><br><span class="line"></span><br><span class="line"># 저장된 이미지 확인</span><br><span class="line">sudo docker images | grep git</span><br><span class="line"></span><br><span class="line"># 저장된 이미지로 컨테이너 시작</span><br><span class="line">$ docker run -i -t ubuntu:git /bin/bash</span><br><span class="line"></span><br><span class="line"># 컨테이너[] 삭제</span><br><span class="line">$ docker rm [e2af61348652]</span><br><span class="line"></span><br><span class="line">cf) 컨테이너 모두삭제</span><br><span class="line">$ docker rm -f `docker ps -a -q`</span><br><span class="line"></span><br><span class="line"># 이미지[] 삭제</span><br><span class="line">$ docker rmi -f [ubuntu:git]</span><br><span class="line"></span><br><span class="line"># 이미지 모두 삭제</span><br><span class="line">$ docker rmi -f `docker images -a -q`</span><br></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><p><a href="https://soyoung-new-challenge.tistory.com/73" rel="external nofollow noopener noreferrer" target="_blank">참고 url</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 도커 컴포즈 버전 설치</span><br><span class="line">$ sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"># 도커 컴포즈에 권한 설정</span><br><span class="line">$ sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"># 심볼릭 링크 설정 -&gt; path오류 방지 </span><br><span class="line">$ sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"># 설치 확인 (버전확인)</span><br><span class="line">$ docker-compose -version</span><br></pre></td></tr></table></figure><h3 id="docker-Log-관리"><a href="#docker-Log-관리" class="headerlink" title="docker Log 관리"></a>docker Log 관리</h3><p>Docker는 /var/lib/docker 에서 이미지파일 / 컨테이너정보 / 로그 등을 관리합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ cd /var/lib/docker </span><br><span class="line">$ ls</span><br><span class="line"></span><br><span class="line">builder   containers  networkplugins   swarm  trust</span><br><span class="line">buildkit  image       overlay2runtimes  tmp volumes</span><br><span class="line"></span><br><span class="line">$ cd containers</span><br><span class="line">$ ls</span><br><span class="line"></span><br><span class="line">454880959eaa231321eb71ff55189272696d74aa83fa0e82088a1726bd8616a4</span><br><span class="line">51484c4f637b7cb779208ae7ad111ce90ea8f9f1591ee39333fde0e8fac3add1</span><br><span class="line">814c65bb7700aad8b7b79421b2cec8e3929c973930d8b825db3d5bdbe4df5e97</span><br><span class="line">83adee6dd24cf36752760c9654a9f3668de772ad42ff99cba636f36c49ff0ef4</span><br><span class="line">ec50acb94e90f738c2fb85bf0782d64b5305c963819c4326529ca2b0b8142881</span><br><span class="line"></span><br><span class="line">$ cd [container_ID]</span><br><span class="line">$ ls</span><br><span class="line"></span><br><span class="line">51484c4f637b7cb779208ae7ad111ce90ea8f9f1591ee39333fde0e8fac3add1-json.log</span><br><span class="line">checkpoints</span><br><span class="line">config.v2.json</span><br><span class="line">hostconfig.json</span><br><span class="line">hostname</span><br><span class="line">hosts</span><br><span class="line">mounts</span><br><span class="line">resolv.conf</span><br><span class="line">resolv.conf.hash</span><br><span class="line"></span><br><span class="line"># 컨테이너 사용 용량 확인</span><br><span class="line">$ cd ..</span><br><span class="line">$ du -hsx * | sort -sh | head -n 10</span><br><span class="line">48K83adee6dd24cf36752760c9654a9f3668de772ad42ff99cba636f36c49ff0ef4</span><br><span class="line">48Kec50acb94e90f738c2fb85bf0782d64b5305c963819c4326529ca2b0b8142881</span><br><span class="line">68K454880959eaa231321eb71ff55189272696d74aa83fa0e82088a1726bd8616a4</span><br><span class="line">88K814c65bb7700aad8b7b79421b2cec8e3929c973930d8b825db3d5bdbe4df5e97</span><br><span class="line">112K51484c4f637b7cb779208ae7ad111ce90ea8f9f1591ee39333fde0e8fac3add1</span><br></pre></td></tr></table></figure><p>각 컨테이너에 발생한 log들은 [container_ID].log로 관리됩니다.</p><p><code>logrotate</code> ?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ sudo apt install -y logrotate</span><br><span class="line"></span><br><span class="line">$ vim /etc/logrotate.conf</span><br><span class="line"></span><br><span class="line"># see &quot;man logrotate&quot; for details</span><br><span class="line"># rotate log files weekly</span><br><span class="line">weekly</span><br><span class="line"></span><br><span class="line"># use the syslog group by default, since this is the owning group</span><br><span class="line"># of /var/log/syslog.</span><br><span class="line">su root syslog</span><br><span class="line"></span><br><span class="line"># keep 4 weeks worth of backlogs</span><br><span class="line">rotate 4</span><br><span class="line"></span><br><span class="line"># create new (empty) log files after rotating old ones</span><br><span class="line">create</span><br><span class="line"></span><br><span class="line"># uncomment this if you want your log files compressed</span><br><span class="line">#compress</span><br><span class="line"></span><br><span class="line"># packages drop log rotation information into this directory</span><br><span class="line">include /etc/logrotate.d</span><br><span class="line"></span><br><span class="line"># no packages own wtmp, or btmp -- we&apos;ll rotate them here</span><br><span class="line">/var/log/wtmp &#123;</span><br><span class="line">    missingok</span><br><span class="line">    monthly</span><br><span class="line">    create 0664 root utmp</span><br><span class="line">    rotate 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/var/log/btmp &#123;</span><br><span class="line">    missingok</span><br><span class="line">    monthly</span><br><span class="line">    create 0660 root utmp</span><br><span class="line">    rotate 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># system-specific logs may be configured here</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># docker log 관리 설정파일 만들기</span><br><span class="line">$ vim /etc/logrotate.d/docker</span><br><span class="line">/var/lib/docker/containers/*/*.log &#123;</span><br><span class="line">    rotate 7</span><br><span class="line">    daily</span><br><span class="line">    compress</span><br><span class="line">    missingok</span><br><span class="line">    delaycompress</span><br><span class="line">    copytruncate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">위의 명령어를 해석하면 다음과 같다</span><br><span class="line"></span><br><span class="line">- rotate: 회전주기 설정</span><br><span class="line">- daily: 일단위 실행 의미</span><br><span class="line">- missingok: 설정로그가 없는 경우 에러메세지 출력하지 않음</span><br><span class="line">- compress: 압축(원하지 않으면 nocompress 로 설정)</span><br><span class="line">- copytruncate: 대상이 되는 파일을 찾은 다음 설정에 맞게 날짜나 숫자를 붙여 rename</span><br><span class="line"></span><br><span class="line">$ logrotate -fv /etc/logrotate.d/docker</span><br></pre></td></tr></table></figure><h2 id="Docker-세부설정-및-구조"><a href="#Docker-세부설정-및-구조" class="headerlink" title="Docker 세부설정 및 구조"></a>Docker 세부설정 및 구조</h2><p><img alt="structure" data-src="/img/docker/structure.PNG" class="lozad"></p><h3 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h3><p><code>docker-compose.yml</code> 파일은 docker-compose 설정을 통해 컨테이너를 통합적으로 관리해주는 파일입니다.</p><p>아래의 구조에서는 웹서버를 구동하는 <code>Nginx</code> Django 웹애플리케이션을 구동하는 <code>Gunicorn</code>을 사용하고<br>비동기 통신을 위한 <code>celery</code> 혹은 스케쥴러를 위한 <code>celerybeat</code>를 사용하며 해당 요청을 큐구조로 관리해주는 <code>rabbitMq</code>를 사용합니다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  app:</span></span><br><span class="line"><span class="attr">    build:</span>  </span><br><span class="line"><span class="attr">      context:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">      dockerfile:</span> <span class="string">Dockerfile</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">django</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8000:8000"</span>    </span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">.:/srv/plugin</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./log:/var/log</span></span><br><span class="line"><span class="attr">    command:</span> </span><br><span class="line">      <span class="string">gunicorn</span> <span class="bullet">--workers=3</span> <span class="bullet">--bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:8000</span> <span class="string">API.wsgi:application</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">    expose:</span> </span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8000"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  nginx:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    build:</span> </span><br><span class="line"><span class="attr">      context:</span> <span class="string">./nginx</span></span><br><span class="line"><span class="attr">      dockerfile:</span> <span class="string">Dockerfile</span> </span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">.:/home/ubuntu</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"80:80"</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">app</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">  rabbit:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">rabbit</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">rabbit</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">rabbitmq:latest</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">RABBITMQ_DEFAULT_USER=admin</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">RABBITMQ_DEFAULT_PASS=1234</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"5672:5672"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  worker:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">celery</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">celery</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">.:/home/ubuntu</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">C_FORCE_ROOT=true</span></span><br><span class="line"><span class="attr">    command:</span> </span><br><span class="line">      <span class="string">celery</span> <span class="bullet">-A</span> <span class="string">API</span> <span class="string">worker</span> <span class="bullet">-l</span> <span class="string">info</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">rabbit</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">celery-beat</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">rabbit</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  celery-beat:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">celery-beat</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">beat</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">C_FORCE_ROOT=true</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">celery</span> <span class="bullet">-A</span> <span class="string">API</span> <span class="string">beat</span> <span class="bullet">-l</span> <span class="string">debug</span> <span class="bullet">--pidfile=./celerybeat.pid</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">.:/home/ubuntu</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">rabbit</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">rabbit</span></span><br></pre></td></tr></table></figure><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p><code>/nginx</code> 폴더에는 웹서버인 nginx에 대한 설정파일인이 위치하고 있으며 nginx에 대한 Docker 설정파일인 <code>Dockerfile</code> geo_ip 설정 파일인 <code>GeoIP.dat</code> <code>GeoIPv6.dat</code> nginx에 메인 설정파일인 <code>nginx.conf</code> 웹어플리케이션에 대한 설정파일인 <code>nginx-app.conf</code> 파일이 위치하고 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># /nginx/Dockerfile</span><br><span class="line">FROM nginx:latest  #docker 최신nginx 이미지 사용</span><br><span class="line"></span><br><span class="line"># geo_ip 설정관련 폴더 생성</span><br><span class="line">RUN mkdir /etc/nginx/geoip </span><br><span class="line"></span><br><span class="line"># nginx 설정 초기화</span><br><span class="line">RUN rm /etc/nginx/conf.d/default.conf</span><br><span class="line">RUN rm /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"># /nginx에 위치한 설정파일 복사</span><br><span class="line">COPY nginx.conf /etc/nginx/</span><br><span class="line">COPY nginx-app.conf /etc/nginx/conf.d/</span><br><span class="line">COPY GeoIP.dat /etc/nginx/geoip/</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>root폴더의 Dockerfile은 도커 컨테이너가 실행되기전 초기화하는 역할을 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.7 #docker 파이썬 3.7 이미지 사용</span><br><span class="line"></span><br><span class="line">RUN apt-get -y update #api-get 업데이트</span><br><span class="line"></span><br><span class="line"># 컨테이너 세팅</span><br><span class="line">RUN mkdir /home/ubuntu</span><br><span class="line">COPY requirements.txt /home/ubuntu/</span><br><span class="line"></span><br><span class="line"># WORK디렉터리 지정</span><br><span class="line">WORKDIR /home/ubuntu</span><br><span class="line"></span><br><span class="line"># 필요 라이브러리 설정</span><br><span class="line">RUN pip install --upgrade pip</span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line"># 파일 설정</span><br><span class="line">COPY . /home/ubuntu</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker&quot;&gt;&lt;a href=&quot;#Docker&quot; class=&quot;headerlink&quot; title=&quot;Docker&quot;&gt;&lt;/a&gt;Docker&lt;/h1&gt;&lt;h2 id=&quot;도커를-배워야-하는-이유&quot;&gt;&lt;a href=&quot;#도커를-배워야-하는-이유&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://khs9628.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://khs9628.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>퇴직후기술스팩 정리</title>
    <link href="https://khs9628.github.io/2020/10/05/201005_spec/"/>
    <id>https://khs9628.github.io/2020/10/05/201005_spec/</id>
    <published>2020-10-05T06:35:28.000Z</published>
    <updated>2020-10-08T06:02:54.379Z</updated>
    
    <content type="html"><![CDATA[<p>1년간 <code>YesNow</code>에서 근무하면서 습득한 기술 스팩에 대한 정리를 위해 정리한 파일입니다.</p><h1 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h1><ol><li>Docker</li><li>CICD (gitLAB/CodeDeploy)</li><li>WAF (Route53)</li><li>ALB(application LoadBalancer)</li><li>AutoScaling</li><li>iptables</li><li>Django 기본구조</li><li>Celery&amp;RabbitMQ</li><li>보안(Security)</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1년간 &lt;code&gt;YesNow&lt;/code&gt;에서 근무하면서 습득한 기술 스팩에 대한 정리를 위해 정리한 파일입니다.&lt;/p&gt;
&lt;h1 id=&quot;목차&quot;&gt;&lt;a href=&quot;#목차&quot; class=&quot;headerlink&quot; title=&quot;목차&quot;&gt;&lt;/a&gt;목차&lt;/h1&gt;&lt;o
      
    
    </summary>
    
    
      <category term="spec" scheme="https://khs9628.github.io/categories/spec/"/>
    
    
      <category term="spec" scheme="https://khs9628.github.io/tags/spec/"/>
    
  </entry>
  
  <entry>
    <title>(Web Crawling) - 파일 저장하기</title>
    <link href="https://khs9628.github.io/2019/10/05/Crawling4/"/>
    <id>https://khs9628.github.io/2019/10/05/Crawling4/</id>
    <published>2019-10-05T07:19:51.000Z</published>
    <updated>2019-10-05T09:11:24.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="파이썬-웹-크롤링-Web-Crawling-4-크롤링-심화"><a href="#파이썬-웹-크롤링-Web-Crawling-4-크롤링-심화" class="headerlink" title="파이썬 웹 크롤링(Web Crawling) - 4. 크롤링 심화"></a>파이썬 웹 크롤링(Web Crawling) - 4. 크롤링 심화</h1><h2 id="예제-1-네이버-블로그-검색결과-CSV-엑셀-파일로-저장하기"><a href="#예제-1-네이버-블로그-검색결과-CSV-엑셀-파일로-저장하기" class="headerlink" title="예제 1) 네이버 블로그 검색결과 CSV(엑셀) 파일로 저장하기"></a>예제 1) 네이버 블로그 검색결과 CSV(엑셀) 파일로 저장하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"><span class="comment"># class="api_txt_lines total_tit" </span></span><br><span class="line"><span class="comment"># - 네이버 모바일 VIEW탭에 제목 class</span></span><br><span class="line"></span><br><span class="line">search = input(<span class="string">'검색어를 입력하세요 : '</span>)</span><br><span class="line"></span><br><span class="line">url = <span class="string">f'https://m.search.naver.com/search.naver?where=m_view&amp;sm=mtb_jum&amp;query=<span class="subst">&#123;quote_plus(search)&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">html = urlopen(url).read()</span><br><span class="line">soup = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">total = soup.select(<span class="string">'.api_txt_lines.total_tit'</span>)</span><br><span class="line">searchList = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> total:</span><br><span class="line">    temp = []</span><br><span class="line">    temp.append(i.text) <span class="comment"># 제목</span></span><br><span class="line">    temp.append(i.attrs[<span class="string">'href'</span>]) <span class="comment"># 링크</span></span><br><span class="line">    searchList.append(temp)</span><br><span class="line"><span class="comment"># 엑셀에서 열때 utf-8 표준이면 깨짐현상이 일어남</span></span><br><span class="line">f = open(<span class="string">f'<span class="subst">&#123;search&#125;</span>.csv'</span>, <span class="string">'w'</span>, encoding = <span class="string">'cp949'</span>, newline=<span class="string">''</span>)</span><br><span class="line">csvWriter = csv.writer(f)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> searchList:</span><br><span class="line">    <span class="comment"># 한줄씩 써 내려감</span></span><br><span class="line">    csvWriter.writerow(i)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'완료 되었습니다.'</span>)</span><br></pre></td></tr></table></figure><h3 id="크롤링을-검색해서-나온-30개의-결과-값을-저장했습니다"><a href="#크롤링을-검색해서-나온-30개의-결과-값을-저장했습니다" class="headerlink" title="크롤링을 검색해서 나온 30개의 결과 값을 저장했습니다."></a>크롤링을 검색해서 나온 30개의 결과 값을 저장했습니다.</h3><p><img alt data-src="/img/Django/%ED%81%AC%EB%A1%A4%EB%A7%812.PNG" class="lozad"></p><h2 id="예제-2-구글-검색결과-CSV-엑셀-파일로-저장하기"><a href="#예제-2-구글-검색결과-CSV-엑셀-파일로-저장하기" class="headerlink" title="예제 2) 구글 검색결과 CSV(엑셀) 파일로 저장하기"></a>예제 2) 구글 검색결과 CSV(엑셀) 파일로 저장하기</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">baseUrl = <span class="string">'https://www.google.co.kr/search?q='</span></span><br><span class="line">plusUrl = input(<span class="string">'검색어를 입력하세요 : '</span>)</span><br><span class="line"><span class="comment"># 한글 검색 자동 변환</span></span><br><span class="line">url = baseUrl + quote_plus(plusUrl)</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">html = driver.page_source</span><br><span class="line">soup = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">r = soup.select(<span class="string">'.r'</span>)</span><br><span class="line">searchList = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> r:</span><br><span class="line">    temp = []</span><br><span class="line">    temp.append(i.select_one(<span class="string">'.LC20lb'</span>).text) <span class="comment"># 제목</span></span><br><span class="line">    temp.append(i.a.attrs[<span class="string">'href'</span>]) <span class="comment"># 링크</span></span><br><span class="line">    print()</span><br><span class="line">    searchList.append(temp)</span><br><span class="line"></span><br><span class="line">driver.close()</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">f'<span class="subst">&#123;plusUrl&#125;</span>.csv'</span>, <span class="string">'w'</span>, encoding = <span class="string">'cp949'</span>, newline=<span class="string">''</span>)</span><br><span class="line">csvWriter = csv.writer(f)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> searchList:</span><br><span class="line">    <span class="comment"># 한줄씩 써 내려감</span></span><br><span class="line">    csvWriter.writerow(i)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'완료 되었습니다.'</span>)</span><br></pre></td></tr></table></figure><h3 id="크롤링을-검색해서-나온-10개의-결과-값을-저장했습니다-구글"><a href="#크롤링을-검색해서-나온-10개의-결과-값을-저장했습니다-구글" class="headerlink" title="크롤링을 검색해서 나온 10개의 결과 값을 저장했습니다.(구글)"></a>크롤링을 검색해서 나온 10개의 결과 값을 저장했습니다.(구글)</h3><p><img alt data-src="/img/Django/%ED%81%AC%EB%A1%A4%EB%A7%813.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;파이썬-웹-크롤링-Web-Crawling-4-크롤링-심화&quot;&gt;&lt;a href=&quot;#파이썬-웹-크롤링-Web-Crawling-4-크롤링-심화&quot; class=&quot;headerlink&quot; title=&quot;파이썬 웹 크롤링(Web Crawling) - 4. 크
      
    
    </summary>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/categories/Crawling/"/>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/tags/Crawling/"/>
    
  </entry>
  
  <entry>
    <title>(Web Crawling) - 검색결과에 따른 크롤링</title>
    <link href="https://khs9628.github.io/2019/09/29/Crawling3/"/>
    <id>https://khs9628.github.io/2019/09/29/Crawling3/</id>
    <published>2019-09-29T06:33:28.000Z</published>
    <updated>2019-10-05T08:19:32.986Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=OEf_UESjRxo" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h1 id="파이썬-웹-크롤링-Web-Crawling-3-검색결과에-따른-페이지-크롤링"><a href="#파이썬-웹-크롤링-Web-Crawling-3-검색결과에-따른-페이지-크롤링" class="headerlink" title="파이썬 웹 크롤링(Web Crawling) - 3. 검색결과에 따른 페이지 크롤링"></a>파이썬 웹 크롤링(Web Crawling) - 3. 검색결과에 따른 페이지 크롤링</h1><h2 id="예제-1-네이버-블로그-검색결과-가져오기"><a href="#예제-1-네이버-블로그-검색결과-가져오기" class="headerlink" title="예제 1) 네이버 블로그 검색결과 가져오기"></a>예제 1) 네이버 블로그 검색결과 가져오기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 네이버 검색 후 검색 결과</span></span><br><span class="line">baseUrl = <span class="string">'https://search.naver.com/search.naver?where=post&amp;sm=tab_jum&amp;query='</span></span><br><span class="line">plusUrl = input(<span class="string">'검색어를 입력하세요 : '</span>)</span><br><span class="line"><span class="comment"># 한글 검색 자동 변환</span></span><br><span class="line">url = baseUrl + urllib.parse.quote_plus(plusUrl)</span><br><span class="line">html = urlopen(url)</span><br><span class="line">bsObject = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 조건에 맞는 파일을 다 출력해라</span></span><br><span class="line">title = bsObject.find_all(class_=<span class="string">'sh_blog_title'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> title:</span><br><span class="line">    print(i.attrs[<span class="string">'title'</span>])</span><br><span class="line">    print(i.attrs[<span class="string">'href'</span>])</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p><code>결과</code></p><blockquote><p>검색어를 입력하세요 : 크롤링<br>웹크롤링 [금통위의사록 파이썬으로 다운받기]<br><a href="https://blog.naver.com/jjys9047?Redirect=Log&amp;logNo=221584977592" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/jjys9047?Redirect=Log&amp;logNo=221584977592</a></p></blockquote><blockquote><p>웹 구조를 이해한 자의 웹크롤링은 데이터를 다루는 디테일부터 다르다. By &gt;파이썬을 활용한 실전 웹크롤링과 자동화 CAMP 박두진 강사님<br><a href="http://blog.fastcampus.co.kr/221586197326" rel="external nofollow noopener noreferrer" target="_blank">http://blog.fastcampus.co.kr/221586197326</a></p></blockquote><blockquote><p>[Week 1] 데이터 사이언스 기초: 웹페이지에서 데이터 수집하기 (데이터 크롤링)<br><a href="https://piry777.blog.me/221662360000" rel="external nofollow noopener noreferrer" target="_blank">https://piry777.blog.me/221662360000</a></p></blockquote><blockquote><p>[파이썬 활용] 크롤링<br><a href="https://blog.naver.com/mathesis_time?Redirect=Log&amp;logNo=221525076829" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/mathesis_time?Redirect=Log&amp;logNo=221525076829</a></p></blockquote><blockquote><p>▣ 웹크롤링 / 스크래핑 프로그램 OCTOPARSE 사용기<br><a href="https://blog.naver.com/no1_devicemart?Redirect=Log&amp;logNo=221539107537" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/no1_devicemart?Redirect=Log&amp;logNo=221539107537</a></p></blockquote><blockquote><p>발리 여행, 길리 트라왕안, 파티섬, 펍 크롤링, Pub Crawling 후기<br><a href="https://blog.naver.com/grang353?Redirect=Log&amp;logNo=221576202119" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/grang353?Redirect=Log&amp;logNo=221576202119</a></p></blockquote><blockquote><p>광고,홍보 위주로 활용이 가능한 웹크롤링 젠서버 컴퓨터 입니다.<br><a href="https://blog.naver.com/kukuri0_0?Redirect=Log&amp;logNo=221510474601" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/kukuri0_0?Redirect=Log&amp;logNo=221510474601</a></p></blockquote><blockquote><p>[Python] 파이썬 웹 크롤링 #1. 네이버 실시간 검색어 가져오기<br><a href="https://dsz08082.blog.me/221587474567" rel="external nofollow noopener noreferrer" target="_blank">https://dsz08082.blog.me/221587474567</a></p></blockquote><blockquote><p>10.1 R로 다음(Daum) 네티즌 리뷰 크롤링하기<br><a href="https://blog.naver.com/pmw9440?Redirect=Log&amp;logNo=221590746010" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/pmw9440?Redirect=Log&amp;logNo=221590746010</a></p></blockquote><blockquote><p>에브리타임 자동 크롤링 / 봇 시스템<br><a href="https://blog.naver.com/kbs4674?Redirect=Log&amp;logNo=221460241196" rel="external nofollow noopener noreferrer" target="_blank">https://blog.naver.com/kbs4674?Redirect=Log&amp;logNo=221460241196</a></p></blockquote><h2 id="cf-여러-페이지-블로그-게시물-가져오기"><a href="#cf-여러-페이지-블로그-게시물-가져오기" class="headerlink" title="cf) 여러 페이지 블로그 게시물 가져오기"></a>cf) 여러 페이지 블로그 게시물 가져오기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line">plusUrl = quote_plus(input(<span class="string">'검색어를 입력하세요 : '</span>))</span><br><span class="line">pageNum = <span class="number">1</span></span><br><span class="line">count = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">f'https://search.naver.com/search.naver?date_from=&amp;date_option=0&amp;date_to=&amp;dup_remove=1&amp;nso=&amp;post_blogurl=&amp;post_blogurl_without=&amp;query=<span class="subst">&#123;plusUrl&#125;</span>&amp;sm=tab_pge&amp;srchby=all&amp;st=sim&amp;where=post&amp;start=<span class="subst">&#123;pageNum&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">i = input(<span class="string">'몇 페이지를 크롤링 할까요? : '</span>)</span><br><span class="line">lastPage = int(i) * <span class="number">10</span> - <span class="number">9</span></span><br><span class="line"><span class="keyword">while</span> pageNum &lt; lastPage + <span class="number">1</span>:</span><br><span class="line">    url = <span class="string">f'https://search.naver.com/search.naver?date_from=&amp;date_option=0&amp;date_to=&amp;dup_remove=1&amp;nso=&amp;post_blogurl=&amp;post_blogurl_without=&amp;query=<span class="subst">&#123;plusUrl&#125;</span>&amp;sm=tab_pge&amp;srchby=all&amp;st=sim&amp;where=post&amp;start=<span class="subst">&#123;pageNum&#125;</span>'</span></span><br><span class="line">    html = urlopen(url)</span><br><span class="line">    soup = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 조건에 맞는 파일을 다 출력해라</span></span><br><span class="line">    title = soup.find_all(class_=<span class="string">'sh_blog_title'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">f'---<span class="subst">&#123;count&#125;</span>페이지 결과입니다 --------'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> title:</span><br><span class="line">        print(i.attrs[<span class="string">'title'</span>])</span><br><span class="line">        print(i.attrs[<span class="string">'href'</span>])</span><br><span class="line">        print()</span><br><span class="line">    pageNum += <span class="number">10</span></span><br><span class="line">    count += <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="예제-2-네이버-이미지-검색결과-저장하기"><a href="#예제-2-네이버-이미지-검색결과-저장하기" class="headerlink" title="예제 2) 네이버 이미지 검색결과 저장하기"></a>예제 2) 네이버 이미지 검색결과 저장하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line">baseUrl = <span class="string">'https://search.naver.com/search.naver?where=image&amp;sm=tab_jum&amp;query='</span></span><br><span class="line">plusUrl = input(<span class="string">'검색어를 입력하세요 : '</span>)</span><br><span class="line"><span class="comment"># 한글 검색 자동 변환</span></span><br><span class="line">url = baseUrl + quote_plus(plusUrl)</span><br><span class="line">html = urlopen(url)</span><br><span class="line">soup = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line">img = soup.find_all(class_=<span class="string">'_img'</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> img:</span><br><span class="line">    imgUrl = i[<span class="string">'data-source'</span>]</span><br><span class="line">    <span class="keyword">with</span> urlopen(imgUrl) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'./img/'</span> + plusUrl + str(n)+<span class="string">'.jpg'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> h: <span class="comment"># w - write b - binary</span></span><br><span class="line">            img = f.read()</span><br><span class="line">            h.write(img)</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">print(<span class="string">'다운로드 완료'</span>)</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/%ED%81%AC%EB%A1%A4%EB%A7%81.PNG" class="lozad"></p><h2 id="예제-3-인스타그램-해시태그-검색-시-이미지-다운로드하기"><a href="#예제-3-인스타그램-해시태그-검색-시-이미지-다운로드하기" class="headerlink" title="예제 3) 인스타그램 해시태그 검색 시 이미지 다운로드하기"></a>예제 3) 인스타그램 해시태그 검색 시 이미지 다운로드하기</h2><p><code>Crome Driver 설치</code> <a href="https://chromedriver.chromium.org/downloads" rel="external nofollow noopener noreferrer" target="_blank">링크</a></p><blockquote><p>cf) Chrome 버전과 맞는 Crome Driver 설치를 해야합니다. (맞지 않으면 오류))</p></blockquote><p>instagram은 <code>javascript</code> 기반의 환경이므로 <code>BeautifulSoup</code>으로 크롤링이 불가합니다.</p><p>-&gt; <code>selenium</code> 사용</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">baseUrl = <span class="string">'https://www.instagram.com/explore/tags/'</span></span><br><span class="line">plusUrl = input(<span class="string">'검색할 태그를 입력하세요 : '</span>)</span><br><span class="line"><span class="comment"># 한글 검색 자동 변환</span></span><br><span class="line">url = baseUrl + quote_plus(plusUrl)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Crome 드라이버 지정</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">html = driver.page_source</span><br><span class="line">soup = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line">insta = soup.select(<span class="string">'.v1Nh3.kIKUG._bz0w'</span>) <span class="comment"># 태그</span></span><br><span class="line"><span class="comment"># print(insta[0]) # 한개 데이터만 가지고와라 </span></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> insta:</span><br><span class="line">    print(<span class="string">'https://www.instagram.com'</span> + i.a[<span class="string">'href'</span>])</span><br><span class="line">    imgUrl = i.select_one(<span class="string">'.KL4Bh'</span>).img[<span class="string">'src'</span>]</span><br><span class="line">    <span class="keyword">with</span> urlopen(imgUrl) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'./img/'</span> + plusUrl + str(n)+<span class="string">'.jpg'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> h:</span><br><span class="line">            img = f.read()</span><br><span class="line">            h.write(img)</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">    print(imgUrl)</span><br><span class="line">    print()</span><br><span class="line">driver.close()</span><br></pre></td></tr></table></figure><p><code>(저장된 이미지는 모자이크 처리 했습니다.)</code></p><h3 id="인스타그램에-해시태그로-현수쓰를-검색해서-나온-결과값입니다"><a href="#인스타그램에-해시태그로-현수쓰를-검색해서-나온-결과값입니다" class="headerlink" title="인스타그램에 해시태그로 #현수쓰를 검색해서 나온 결과값입니다"></a>인스타그램에 해시태그로 #현수쓰를 검색해서 나온 결과값입니다</h3><p><img alt data-src="/img/Django/%ED%81%AC%EB%A1%A4%EB%A7%811.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OEf_UESjRxo&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;참고사이트&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;파
      
    
    </summary>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/categories/Crawling/"/>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/tags/Crawling/"/>
    
  </entry>
  
  <entry>
    <title>(Web Crawling) - 웹페이지 긁어오기</title>
    <link href="https://khs9628.github.io/2019/09/29/Crawling2/"/>
    <id>https://khs9628.github.io/2019/09/29/Crawling2/</id>
    <published>2019-09-29T06:32:53.000Z</published>
    <updated>2019-09-29T11:57:55.730Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://webnautes.tistory.com/779?category=618796" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h1 id="파이썬-웹-크롤링-Web-Crawling-2-웹페이지-긁어오기"><a href="#파이썬-웹-크롤링-Web-Crawling-2-웹페이지-긁어오기" class="headerlink" title="파이썬 웹 크롤링(Web Crawling) - 2. 웹페이지 긁어오기"></a>파이썬 웹 크롤링(Web Crawling) - 2. 웹페이지 긁어오기</h1><h2 id="예제-1-웹-문서-전체-가져오기"><a href="#예제-1-웹-문서-전체-가져오기" class="headerlink" title="예제 1) 웹 문서 전체 가져오기"></a>예제 1) 웹 문서 전체 가져오기</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pip install requests</span><br><span class="line">$ pip install beautifulsoup4</span><br></pre></td></tr></table></figure><p><code>request</code> : Requests를 사용하면 간단한 코드만으로 웹페이지의 html 소스를 가져올 수 있습니다.<br><code>beautifulsoup4</code> : 파이썬 웹 크롤링 라이브러리</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">html = urlopen(<span class="string">"http://www.naver.com"</span>)  </span><br><span class="line">bsObject = BeautifulSoup(html, <span class="string">"html.parser"</span>) </span><br><span class="line">print(bsObject) <span class="comment"># 웹 문서 전체가 출력</span></span><br><span class="line"></span><br><span class="line">print(bsObject.head.title) <span class="comment"># &lt;title&gt;NAVER&lt;/title&gt; 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> meta <span class="keyword">in</span> bsObject.head.find_all(<span class="string">'meta'</span>):</span><br><span class="line">    print(meta.get(<span class="string">'content'</span>)) <span class="comment"># 모든 메타 데이터의 내용 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (bsObject.head.find(<span class="string">"meta"</span>, &#123;<span class="string">"name"</span>:<span class="string">"description"</span>&#125;)) <span class="comment"># 원하는 태그의 내용 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> bsObject.find_all(<span class="string">'a'</span>):</span><br><span class="line">    print(link.text.strip(), link.get(<span class="string">'href'</span>)) <span class="comment">#a 태그로 둘러싸인 텍스트와 a 태그의 href 속성을 출력</span></span><br></pre></td></tr></table></figure><p><code>urlopen</code> 함수를 사용하여 원하는 주소로부터 웹페이지를 가져온 후,  <code>BeautifulSoup</code> 객체로 변환합니다. </p><p>BeautifulSoup 객체는 웹문서를 파싱한 상태입니다. 웹 문서가 태그 별로 분해되어 태그로 구성된 트리가 구성됩니다.<br>포함하는 태그가 부모가 되고 포함된 태그가 자식이 되어 트리를 구성하고 있습니다. </p><h2 id="예제-2-교보문고-베스트셀러-책이름-저자-가격-출력하기"><a href="#예제-2-교보문고-베스트셀러-책이름-저자-가격-출력하기" class="headerlink" title="예제 2) 교보문고 베스트셀러 책이름 , 저자 , 가격 출력하기"></a>예제 2) 교보문고 베스트셀러 책이름 , 저자 , 가격 출력하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 교보문고의 베스트셀러 웹페이지를 가져옵니다.</span></span><br><span class="line"></span><br><span class="line">html = urlopen(<span class="string">'http://www.kyobobook.co.kr/bestSellerNew/bestseller.laf'</span>)</span><br><span class="line">bsObject = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 책의 상세 웹페이지 주소를 추출하여 리스트에 저장합니다.</span></span><br><span class="line">book_page_urls = []</span><br><span class="line"><span class="keyword">for</span> cover <span class="keyword">in</span> bsObject.find_all(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>:<span class="string">'detail'</span>&#125;):</span><br><span class="line">    link = cover.select(<span class="string">'a'</span>)[<span class="number">0</span>].get(<span class="string">'href'</span>)</span><br><span class="line">    book_page_urls.append(link)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 메타 정보로부터 필요한 정보를 추출합니다.메타 정보에 없는 저자 정보만 따로 가져왔습니다.   </span></span><br><span class="line"><span class="keyword">for</span> index, book_page_url <span class="keyword">in</span> enumerate(book_page_urls):</span><br><span class="line">    html = urlopen(book_page_url)</span><br><span class="line">    bsObject = bs(html, <span class="string">"html.parser"</span>)</span><br><span class="line">    title = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'rb:itemName'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    author = bsObject.select(<span class="string">'span.name a'</span>)[<span class="number">0</span>].text</span><br><span class="line">    image = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'rb:itemImage'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    url = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'rb:itemUrl'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    originalPrice = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>: <span class="string">'rb:originalPrice'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    salePrice = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'rb:salePrice'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line"></span><br><span class="line">    print(index+<span class="number">1</span>, title, author, image, url, originalPrice, salePrice)</span><br></pre></td></tr></table></figure><p><code>2019년 09월 29일 기준</code></p><blockquote><p>1 흔한남매. 2 흔한남매 (원작), 백난도 <a href="http://image.kyobobook.co.kr/images/book/large/454/l9791164132454.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/454/l9791164132454.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164132454" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164132454</a> 11000 9900<br>2 90년생이 온다 임홍택 <a href="http://image.kyobobook.co.kr/images/book/large/674/l9791188248674.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/674/l9791188248674.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791188248674" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791188248674</a> 14000 12600<br>3 여행의 이유 김영하 <a href="http://image.kyobobook.co.kr/images/book/large/972/l9788954655972.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/972/l9788954655972.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788954655972" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788954655972</a> 13500 12150<br>4 당신은 뇌를 고칠 수 있다 톰 오브라이언 <a href="http://image.kyobobook.co.kr/images/book/large/414/l9791135442414.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/414/l9791135442414.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791135442414" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791135442414</a> 19800 17820<br>5 혼자가 혼자에게 이병률 <a href="http://image.kyobobook.co.kr/images/book/large/026/l9791158161026.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/026/l9791158161026.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791158161026" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791158161026</a> 15500 13950<br>6 설민석의 삼국지. 1 설민석 <a href="http://image.kyobobook.co.kr/images/book/large/792/l9788933870792.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/792/l9788933870792.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788933870792" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788933870792</a> 22000 19800<br>7 베스트 셀프 마이크 베이어 <a href="http://image.kyobobook.co.kr/images/book/large/968/l9791135444968.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/968/l9791135444968.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791135444968" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791135444968</a> 18700 16830<br>8 추리 천재 엉덩이 탐정. 8: 괴도와 납치된 신부 사건 트롤 <a href="http://image.kyobobook.co.kr/images/book/large/914/l9791164131914.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/914/l9791164131914.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164131914" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164131914</a> 12000 10800<br>9 Go Go 카카오프렌즈. 10: 이집트 김미영 <a href="http://image.kyobobook.co.kr/images/book/large/369/l9788950983369.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/369/l9788950983369.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788950983369" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788950983369</a> 12000 10800<br>10 오늘은 이만 좀 쉴게요(한정판 스페셜 에디션) 손힘찬(오가타 마리토) <a href="http://image.kyobobook.co.kr/images/book/large/786/l9791162141786.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/786/l9791162141786.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162141786" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162141786</a> 13000 11700<br>11 지쳤거나 좋아하는 게 없거나 글배우 <a href="http://image.kyobobook.co.kr/images/book/large/706/l9791196797706.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/706/l9791196797706.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791196797706" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791196797706</a> 13500 12150<br>12 나는 나로 살기로 했다(200쇄 기념 스페셜 에디션) 김수현 <a href="http://image.kyobobook.co.kr/images/book/large/845/l9791187119845.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/845/l9791187119845.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791187119845" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791187119845</a> 13800 12420<br>13 빨강 머리 앤 루시 모드 몽고메리 <a href="http://image.kyobobook.co.kr/images/book/large/084/l9791164450084.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/084/l9791164450084.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164450084" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791164450084</a> 16800 15120<br>14 직지. 1 김진명 <a href="http://image.kyobobook.co.kr/images/book/large/322/l9788965708322.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/322/l9788965708322.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788965708322" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788965708322</a> 14000 12600<br>15 어떻게 살아야 할지 막막한 너에게 우쥔 <a href="http://image.kyobobook.co.kr/images/book/large/901/l9791196756901.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/901/l9791196756901.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791196756901" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791196756901</a> 15500 13950<br>16 죽음의 에티켓 롤란트 슐츠 <a href="http://image.kyobobook.co.kr/images/book/large/741/l9791188331741.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/741/l9791188331741.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791188331741" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791188331741</a> 15800 14220<br>17 룬의 아이들 블러디드. 2 전민희 <a href="http://image.kyobobook.co.kr/images/book/large/556/l9788954657556.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/556/l9788954657556.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788954657556" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788954657556</a> 14500 13050<br>18 봉제인형 살인사건 다니엘 콜 <a href="http://image.kyobobook.co.kr/images/book/large/931/l9788998274931.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/931/l9788998274931.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788998274931" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9788998274931</a> 15000 13500<br>19 아주 작은 습관의 힘 제임스 클리어 <a href="http://image.kyobobook.co.kr/images/book/large/640/l9791162540640.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/640/l9791162540640.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162540640" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162540640</a> 16000 14400<br>20 돈의 감각 이명로(상승미소) <a href="http://image.kyobobook.co.kr/images/book/large/985/l9791162540985.jpg" rel="external nofollow noopener noreferrer" target="_blank">http://image.kyobobook.co.kr/images/book/large/985/l9791162540985.jpg</a> <a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162540985" rel="external nofollow noopener noreferrer" target="_blank">http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;ejkGb=KOR&amp;barcode=9791162540985</a> 16800 15120</p></blockquote><h2 id="예제-3-네이버-베스트셀러-책이름-저자-가격-출력하기"><a href="#예제-3-네이버-베스트셀러-책이름-저자-가격-출력하기" class="headerlink" title="예제 3) 네이버 베스트셀러 책이름, 저자, 가격 출력하기"></a>예제 3) 네이버 베스트셀러 책이름, 저자, 가격 출력하기</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 네이버의 베스트셀러 웹페이지를 가져옵니다.</span></span><br><span class="line">html = urlopen(<span class="string">'https://book.naver.com/bestsell/bestseller_list.nhn'</span>)</span><br><span class="line">bsObject = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 책의 상세 웹페이지 주소를 추출하여 리스트에 저장합니다.</span></span><br><span class="line">book_page_urls = []</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">25</span>):</span><br><span class="line">    dl_data = bsObject.find(<span class="string">'dt'</span>, &#123;<span class="string">'id'</span>:<span class="string">"book_title_"</span>+str(index)&#125;)</span><br><span class="line">    link = dl_data.select(<span class="string">'a'</span>)[<span class="number">0</span>].get(<span class="string">'href'</span>)</span><br><span class="line">    book_page_urls.append(link)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 메타 정보와 본문에서 필요한 정보를 추출합니다.  </span></span><br><span class="line"><span class="keyword">for</span> index, book_page_url <span class="keyword">in</span> enumerate(book_page_urls):</span><br><span class="line">    html = urlopen(book_page_url)</span><br><span class="line">    bsObject = BeautifulSoup(html, <span class="string">"html.parser"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    title = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'og:title'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    author = bsObject.find(<span class="string">'dt'</span>, text=<span class="string">'저자'</span>).find_next_siblings(<span class="string">'dd'</span>)[<span class="number">0</span>].text.strip()</span><br><span class="line">    image = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'og:image'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line">    url = bsObject.find(<span class="string">'meta'</span>, &#123;<span class="string">'property'</span>:<span class="string">'og:url'</span>&#125;).get(<span class="string">'content'</span>)</span><br><span class="line"></span><br><span class="line">    dd = bsObject.find(<span class="string">'dt'</span>, text=<span class="string">'가격'</span>).find_next_siblings(<span class="string">'dd'</span>)[<span class="number">0</span>]</span><br><span class="line">    salePrice = dd.select(<span class="string">'div.lowest strong'</span>)[<span class="number">0</span>].text</span><br><span class="line">    originalPrice = dd.select(<span class="string">'div.lowest span.price'</span>)[<span class="number">0</span>].text</span><br><span class="line"></span><br><span class="line">    print(index+<span class="number">1</span>, title, author, image, url, originalPrice, salePrice)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://webnautes.tistory.com/779?category=618796&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;참고사이트&lt;/a&gt;&lt;/p&gt;
&lt;h1
      
    
    </summary>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/categories/Crawling/"/>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/tags/Crawling/"/>
    
  </entry>
  
  <entry>
    <title>(Web Crawling) - Basic</title>
    <link href="https://khs9628.github.io/2019/09/29/Crawling1/"/>
    <id>https://khs9628.github.io/2019/09/29/Crawling1/</id>
    <published>2019-09-29T06:32:52.000Z</published>
    <updated>2019-09-29T11:54:36.118Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://twpower.github.io/84-how-to-use-beautiful-soup" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h1 id="파이썬-웹-크롤링-Web-Crawling-Basic"><a href="#파이썬-웹-크롤링-Web-Crawling-Basic" class="headerlink" title="파이썬 웹 크롤링(Web Crawling) - Basic"></a>파이썬 웹 크롤링(Web Crawling) - Basic</h1><p><code>웹 크롤러(Web Crawler)</code>는 자동화된 방식으로 웹 페이지들을 탐색하는 컴퓨터 프로그램입니다.<br>웹 크롤러가 하는 작업을 <code>웹 크롤링(Web Crawling)</code>이라고 부릅니다. </p><h2 id="Beautiful-Soup"><a href="#Beautiful-Soup" class="headerlink" title="Beautiful Soup"></a>Beautiful Soup</h2><p><strong>기본 세팅</strong><br>기본적으로 패키지 import를 통해서 가져오며 html파일을 가져오거나 <code>urllib</code> 혹은 <code>requests</code> 모듈을 통해서 직접 웹에서 소스를 가져올 수도 있습니다.</p><h2 id="주요-함수"><a href="#주요-함수" class="headerlink" title="주요 함수"></a>주요 함수</h2><h3 id="find-및-find-all-함수"><a href="#find-및-find-all-함수" class="headerlink" title="find() 및 find_all()함수"></a>find() 및 find_all()함수</h3><ul><li><p>함수 인자로는 찾고자 하는 태그의 이름, 속성 기타 등등이 들어갑니다.</p></li><li><p>find_all(name, attrs, recursive, string, limit, **kwargs)<br>  find_all() : 해당 조건에 맞는 모든 태그들을 가져옵니다.</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">html = urlopen(<span class="string">'url 주소'</span>) </span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">all_divs = soup.find_all(<span class="string">"div"</span>)</span><br><span class="line">print(all_divs)</span><br><span class="line">------------------</span><br><span class="line"><span class="comment"># find_all('태그명', &#123;'속성명' : '값' ...&#125;)</span></span><br><span class="line">ex_id_divs = soup.find(<span class="string">'div'</span>, &#123;<span class="string">'id'</span> : <span class="string">'ex_id'</span>&#125;)</span><br><span class="line">print(ex_id_divs)</span><br></pre></td></tr></table></figure></li><li><p>find(name, attrs, recursive, string, **kwargs)<br>  find() : 해당 조건에 맞는 하나의 태그를 가져온다. 중복이면 가장 첫 번째 태그를 가져온다.</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">html = urlopen(<span class="string">'url 주소'</span>) </span><br><span class="line">soup = BeautifulSoup(fp, <span class="string">'html.parser'</span>)</span><br><span class="line">ex_id_divs = soup.find(<span class="string">'div'</span>, &#123;<span class="string">'id'</span> : <span class="string">'ex_id'</span>&#125;)</span><br><span class="line">print(ex_id_divs)</span><br><span class="line">-----------------</span><br><span class="line"><span class="comment">#find('태그명', &#123;'속성명' : '값' ...&#125;)</span></span><br><span class="line">first_div = soup.find(<span class="string">"div"</span>)</span><br><span class="line">print(first_div)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://twpower.github.io/84-how-to-use-beautiful-soup&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;참고사이트&lt;/a&gt;&lt;/p
      
    
    </summary>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/categories/Crawling/"/>
    
    
      <category term="Crawling" scheme="https://khs9628.github.io/tags/Crawling/"/>
    
  </entry>
  
  <entry>
    <title>(AWS) EC2에 배포하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws3/"/>
    <id>https://khs9628.github.io/2019/09/25/aws3/</id>
    <published>2019-09-25T09:40:21.000Z</published>
    <updated>2019-09-29T11:34:59.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="서버-배포-방법"><a href="#서버-배포-방법" class="headerlink" title="서버 배포 방법"></a>서버 배포 방법</h1><p>인스턴스에 배포하기 전에 서버를 구성하는 방법의 종류를 알아 보겠습니다</p><h2 id="Django로만-배포"><a href="#Django로만-배포" class="headerlink" title="Django로만 배포"></a>Django로만 배포</h2><p>Django 프로젝트를 인스턴스에 그대로 옮겨 <code>python manage.py runserver</code> 를 켜서 서버를 돌리는 방법입니다.<br>하지만 Django의 runserver는 개발할 때 쓰는 작은 디버깅용 웹 서버이기 때문에 실제 프로젝트를 이 방법으로 배포하지는 않고, 아래의 두가지 방법을 이용합니다.</p><h2 id="uWSGI-Django로-배포"><a href="#uWSGI-Django로-배포" class="headerlink" title="uWSGI + Django로 배포"></a>uWSGI + Django로 배포</h2><p>Django 프로젝트를 생성하면 wsgi.py 파일이 생성되는 것을 많이 보셨을 겁니다. 우선 WSGI의 개념부터 살펴보면, <code>Web Server Gateway Interface</code>의 약자로 <strong><em>웹 서버(Apache, Nginx 등)와 웹 애플리케이션(Django, Flask 등) 사이를 이어주는 역할</em></strong>을 합니다. 즉 웹 서버로 들어온 요청을 Python 언어로 만들어진 웹 애플리케이션과 소통할 수 있도록 해주는 역할을 합니다.<br><code>uWSGI</code>는 이 WSGI 규격으로 만들어진 서버 중에 하나이며 Django 프로젝트를 배포할 때 가장 일반적으로 사용됩니다.</p><p>Django는 수많은 request를 처리할 수 있도록 설계되어 있지 않기 때문에, Django로만 배포하지 않고 수많은 request를 처리하도록 설계된 uWSGI를 함께 사용해서 배포합니다. 그렇기 때문에 물론 uWSGI + Django 만으로도 충분히 배포가 가능하지만 추천하지는 않습니다</p><h2 id="Nginx-uWSGI-Django로-배포"><a href="#Nginx-uWSGI-Django로-배포" class="headerlink" title="Nginx + uWSGI + Django로 배포"></a>Nginx + uWSGI + Django로 배포</h2><p><img alt data-src="/img/Django/AWS/aws.PNG" class="lozad"><br>위의 그림에서처럼 <code>Nginx</code>는 클라이언트로부터 HTTP 요청을 받아 request에 따라 바뀌지 않는 즉 정적파일(HTML, CSS, JavaScript)을 돌려주고, 동적데이터가 필요한 요청은 웹 애플리케이션으로 보내줍니다. 이게 바로 웹 서버가 하는 일입니다. 위의 방법을 추천하지 않은 이유 역시 이 웹 서버가 정적파일을 미리 클라이언트에게 보여줌으로써 서버 성능을 높여주기 때문입니다.</p><p>Nginx에서 받은 요청은 <code>unix socket</code>을 거쳐 uWSGI로 보내지며, uWSGI가 받은 요청을 Python 개발 환경에서 이해할 수 있도록 중계해주면 최종적으로 Django에서 요청을 처리하게 됩니다.</p><p>그럼 Nginx + uWSGI + Django의 일련의 과정을 실제로 배포하는 방법을 아래에서 알아보도록 하겠습니다.</p><h1 id="Django-Setting"><a href="#Django-Setting" class="headerlink" title="Django Setting"></a>Django Setting</h1><p>인스턴스에 배포하기 전에 Django를 세팅합니다.</p><h2 id="구조"><a href="#구조" class="headerlink" title="구조"></a>구조</h2><p>먼저 제가 사용 중인 <a href="https://github.com/khs9628/Django_deep/tree/master/RESTful-project/proj" rel="external nofollow noopener noreferrer" target="_blank">프로젝트</a>의 <code>tree 구조</code>는 아래와 같습니다.</p><pre><code>nginx_test└── app    ├── .config    │   ├── nginx-app.conf    │   ├── uwsgi.ini    │   └── uwsgi.service    ├── config    │   ├── __init__.py    │   ├── __pycache__    │   ├── settings.py    │   ├── urls.py    │   └── wsgi.py    ├── manage.py    └── post (app)        ├── /__pycache__        ├── /migrations        │   └── __init__.py        ├── __init__.py        ├── admin.py        ├── apps.py        ├── models.py        ├── serializers.py        ├── urls.py        ├── tests.py        └── views.py</code></pre><h4 id="cf-오류가-나는-경우"><a href="#cf-오류가-나는-경우" class="headerlink" title="cf) 오류가 나는 경우"></a>cf) 오류가 나는 경우</h4><p><code>forigenKey</code>를 <code>author_name</code> field와 잡아놨기 때문에 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py createsuperuser</span><br></pre></td></tr></table></figure><p>을 통해 계정을 만들고 로그인 후 올리면 가능할 것입니다.</p><h3 id="Django-static-media-파일-처리-설정"><a href="#Django-static-media-파일-처리-설정" class="headerlink" title="Django static, media 파일 처리 설정"></a>Django static, media 파일 처리 설정</h3><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ROOT_DIR = os.path.dirname(BASE_DIR)</span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATIC_ROOT = os.path.join(ROOT_DIR, <span class="string">'.static'</span>)</span><br><span class="line"></span><br><span class="line">MEDIA_URL = <span class="string">'/media/'</span></span><br><span class="line">MEDIA_ROOT = os.path.join(ROOT_DIR, <span class="string">'.media'</span>)</span><br><span class="line">STATIC_DIR = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    STATIC_DIR,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="gitignore-추가"><a href="#gitignore-추가" class="headerlink" title=".gitignore 추가"></a><code>.gitignore</code> 추가</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Custom</span><br><span class="line">/.media</span><br><span class="line">/.static</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/AWS/aws14.PNG" class="lozad"></p><h4 id="cf-gitignore는-링크된-사이트에서-만들-수-있습니다"><a href="#cf-gitignore는-링크된-사이트에서-만들-수-있습니다" class="headerlink" title="cf) .gitignore는 링크된 사이트에서 만들 수 있습니다."></a>cf) <a href="http://gitignore.io/" rel="external nofollow noopener noreferrer" target="_blank">.gitignore</a>는 링크된 사이트에서 만들 수 있습니다.</h4><p><img alt data-src="/img/Django/AWS/aws13.PNG" class="lozad"></p><h2 id="Django-DEBUG-설정-및-ALLOWED-HOST-설정-변경"><a href="#Django-DEBUG-설정-및-ALLOWED-HOST-설정-변경" class="headerlink" title="Django DEBUG 설정 및 ALLOWED_HOST 설정 변경"></a>Django DEBUG 설정 및 ALLOWED_HOST 설정 변경</h2><p>개발을 완료하고 배포하는 단계이므로 DEBUG 모드를 False로 바꾸고, ALLOWED_HOST에 aws 주소를 허용합니다.</p><p><code>settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [</span><br><span class="line">    <span class="string">'.amazonaws.com'</span>,</span><br><span class="line">    <span class="comment"># '*'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="uWSGI-사이트-파일-작성"><a href="#uWSGI-사이트-파일-작성" class="headerlink" title="uWSGI 사이트 파일 작성"></a>uWSGI 사이트 파일 작성</h2><p>app폴더와 같은 위치에 .config폴더를 만든후, uwsgi.ini 파일에 아래와 같이 작성합니다.</p><p><code>app/.config/uwsgi.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[uwsgi]</span></span><br><span class="line"><span class="attr">chdir</span> = /srv/&lt;nginx_test/app&gt;</span><br><span class="line"><span class="attr">module</span> = config.wsgi</span><br><span class="line"><span class="attr">home</span> = /home/ubuntu/.pyenv/versions/가상환경이름(ec2-deploy)</span><br><span class="line"></span><br><span class="line"><span class="attr">uid</span> = ubuntu</span><br><span class="line"><span class="attr">gid</span> = ubuntu</span><br><span class="line"><span class="attr">socket</span> = /tmp/app.sock</span><br><span class="line"><span class="attr">chmod-socket</span> = <span class="number">666</span></span><br><span class="line"><span class="attr">chown-socket</span> = ubuntu:ubuntu</span><br><span class="line"></span><br><span class="line"><span class="attr">master</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">vacuum</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">logto</span> = /tmp/uwsgi.log</span><br><span class="line"><span class="attr">log-reopen</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><blockquote><p>–http 포트 번호를 지정한다.<br>–home virtualenv 가상환경 디렉토리를 지정한다.<br>–chdir manage.py가 들어있는 Django 프로젝트 디렉토리를 지정한다.<br>–module WSGI 모듈을 지정한다.</p></blockquote><h2 id="uWSGI-서비스-설정-파일-작성"><a href="#uWSGI-서비스-설정-파일-작성" class="headerlink" title="uWSGI 서비스 설정 파일 작성"></a>uWSGI 서비스 설정 파일 작성</h2><p>.config폴더에 uwsgi.service 파일에 아래와 같이 작성합니다.<br><code>app/.config/uwsgi.service</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=EC2 Deploy uWSGI service</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/ubuntu/.pyenv/versions/ipsw/bin/uwsgi -i &lt;/srv/nginx_test/app/.config/uwsgi.ini&gt;</span><br><span class="line"></span><br><span class="line">Restart=always</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">Type=notify</span><br><span class="line">StandardError=syslog</span><br><span class="line">NotifyAccess=all</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="Nginx-설정-파일-작성"><a href="#Nginx-설정-파일-작성" class="headerlink" title="Nginx 설정 파일 작성"></a>Nginx 설정 파일 작성</h2><p>.config 폴더에 nginx-app.conf라는 Nginx 설정 파일을 만들고 아래 내용을 작성합니다.<br><code>nginx_test/.config/nigx-app.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name *.amazonaws.com;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    client_max_body_size 128M;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        uwsgi_pass      unix:///tmp/app.sock;</span><br><span class="line">        include         uwsgi_params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        alias /srv/app/.static/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /media/ &#123;</span><br><span class="line">        alias /srv/app/.media/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="requirements-txt-파일-업데이트"><a href="#requirements-txt-파일-업데이트" class="headerlink" title="requirements.txt 파일 업데이트"></a>requirements.txt 파일 업데이트</h2><p>uWSGI를 설치 후, Django 프로젝트에 사용된 패키지들을 서버에 올리기 전에 최종적으로 업데이트 해줍니다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  pip install uwsgi</span><br></pre></td></tr></table></figure><h4 id="“requirement”-파일에-기술된-모든-라이브러리를-설치하는-pip-명령은-다음과-같습니다"><a href="#“requirement”-파일에-기술된-모든-라이브러리를-설치하는-pip-명령은-다음과-같습니다" class="headerlink" title="“requirement” 파일에 기술된 모든 라이브러리를 설치하는 pip 명령은 다음과 같습니다."></a>“requirement” 파일에 기술된 모든 라이브러리를 설치하는 pip 명령은 다음과 같습니다.</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="Pillow-동작을-위한-Ubuntu-python-라이브러리-설치"><a href="#Pillow-동작을-위한-Ubuntu-python-라이브러리-설치" class="headerlink" title="Pillow 동작을 위한 Ubuntu python 라이브러리 설치"></a>Pillow 동작을 위한 Ubuntu python 라이브러리 설치</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-dev python-setuptools</span><br></pre></td></tr></table></figure><h2 id="인스턴스-세팅"><a href="#인스턴스-세팅" class="headerlink" title="인스턴스 세팅"></a>인스턴스 세팅</h2><p>인스턴스에 복사한 파일들로 인스턴스에도 세팅을 해줍니다.</p><h3 id="pip-list-설치"><a href="#pip-list-설치" class="headerlink" title="pip list 설치"></a>pip list 설치</h3><p><code>인스턴스 접속</code></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  ssh -i &lt;pem경로&gt; &lt;user name&gt;@&lt;public dns name&gt;</span><br><span class="line"></span><br><span class="line">or `putty`</span><br></pre></td></tr></table></figure><h4 id="인스턴스에서-복사한-프로젝트-폴더로-들어가-로컬-프로젝트와-동일한-가상환경명으로-만들어줍니다"><a href="#인스턴스에서-복사한-프로젝트-폴더로-들어가-로컬-프로젝트와-동일한-가상환경명으로-만들어줍니다" class="headerlink" title="인스턴스에서 복사한 프로젝트 폴더로 들어가 로컬 프로젝트와 동일한 가상환경명으로 만들어줍니다."></a>인스턴스에서 복사한 프로젝트 폴더로 들어가 로컬 프로젝트와 동일한 가상환경명으로 만들어줍니다.</h4><ul><li><p>프로젝트폴더 cd</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /srv/nginx_test</span><br></pre></td></tr></table></figure></li><li><p>python 3.7.3 버전 설치</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv install 3.7.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 사용할 Python 버전 정해주기</span></span><br><span class="line">$ pyenv global 3.7.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># + 현재 디렉토리에서 사용할 python 버전 설정</span></span><br><span class="line">$ pyenv <span class="built_in">local</span> 3.7.3</span><br></pre></td></tr></table></figure></li><li><p>ec2-deploy 가상환경을 생성</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenv 3.7.3 ec2-deploy</span><br></pre></td></tr></table></figure></li></ul><p>-&gt; /home/ubuntu/.pyenv/versions/3.7.3/envs/ec2-deploy 위치로 저장</p><ul><li><p>중간 확인</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app폴더 (manage.py가 있는 폴더)</span></span><br><span class="line">$ python manage.py runserver [aws Public주소:8000]</span><br></pre></td></tr></table></figure></li><li><p>가상환경 실행</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv activate ec2-deploy</span><br></pre></td></tr></table></figure></li><li><p>requirements.txt로 pip list 설치</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul><h2 id="인스턴스에-Nginx-및-uWSGI-설정"><a href="#인스턴스에-Nginx-및-uWSGI-설정" class="headerlink" title="인스턴스에 Nginx 및 uWSGI 설정"></a>인스턴스에 Nginx 및 uWSGI 설정</h2><p>아래 내용은 모두 로컬이 아니라 인스턴스에서 진행해야 합니다.</p><h3 id="Nginx-설치"><a href="#Nginx-설치" class="headerlink" title="Nginx 설치"></a>Nginx 설치</h3><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$  sudo add-apt-repository ppa:nginx/stable</span><br><span class="line">$  sudo apt-get update</span><br><span class="line">$  sudo apt-get install nginx</span><br></pre></td></tr></table></figure><h4 id="nginx-app-conf-파일-sites-available-폴더에-복사"><a href="#nginx-app-conf-파일-sites-available-폴더에-복사" class="headerlink" title="nginx-app.conf 파일 sites-available 폴더에 복사"></a>nginx-app.conf 파일 sites-available 폴더에 복사</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo cp -f /srv/nginx_test/app/.config/nginx-app.conf /etc/nginx/sites-available/nginx-app.conf</span><br></pre></td></tr></table></figure><h4 id="site-enabled에-링크-걸어주기"><a href="#site-enabled에-링크-걸어주기" class="headerlink" title="site-enabled에 링크 걸어주기"></a>site-enabled에 링크 걸어주기</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo ln -sf /etc/nginx/sites-available/nginx-app.conf /etc/nginx/sites-enabled/nginx-app.conf</span><br></pre></td></tr></table></figure><h4 id="uwsgi-sevice-파일-system-폴더에-복사"><a href="#uwsgi-sevice-파일-system-폴더에-복사" class="headerlink" title="uwsgi.sevice 파일 system 폴더에 복사"></a>uwsgi.sevice 파일 system 폴더에 복사</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo cp -f /srv/nginx_test/app/.config/uwsgi.service /etc/systemd/system/uwsgi.service</span><br></pre></td></tr></table></figure><h4 id="manage-py가-복사된-위치로-이동-후-manage-py-collectstatic-실행"><a href="#manage-py가-복사된-위치로-이동-후-manage-py-collectstatic-실행" class="headerlink" title="manage.py가 복사된 위치로 이동 후, manage.py collectstatic 실행"></a>manage.py가 복사된 위치로 이동 후, manage.py collectstatic 실행</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  python manage.py collectstatic --noinput</span><br></pre></td></tr></table></figure><h4 id="uwsgi-사용"><a href="#uwsgi-사용" class="headerlink" title="uwsgi 사용"></a>uwsgi 사용</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl <span class="built_in">enable</span> uwsgi</span><br></pre></td></tr></table></figure><h4 id="daemon-reload"><a href="#daemon-reload" class="headerlink" title="daemon-reload"></a>daemon-reload</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><h4 id="uwsgi-재부팅"><a href="#uwsgi-재부팅" class="headerlink" title="uwsgi 재부팅"></a>uwsgi 재부팅</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo systemctl restart uwsgi nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;서버-배포-방법&quot;&gt;&lt;a href=&quot;#서버-배포-방법&quot; class=&quot;headerlink&quot; title=&quot;서버 배포 방법&quot;&gt;&lt;/a&gt;서버 배포 방법&lt;/h1&gt;&lt;p&gt;인스턴스에 배포하기 전에 서버를 구성하는 방법의 종류를 알아 보겠습니다&lt;/p&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(AWS) Setting 하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws2/"/>
    <id>https://khs9628.github.io/2019/09/25/aws2/</id>
    <published>2019-09-25T09:40:08.000Z</published>
    <updated>2019-09-28T10:12:11.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EC2-인스턴스-가상환경-세팅"><a href="#EC2-인스턴스-가상환경-세팅" class="headerlink" title="EC2 인스턴스 가상환경 세팅"></a>EC2 인스턴스 가상환경 세팅</h1><p>인스턴스 환경을 현재 사용중인 로컬 컴퓨터의 환경과 같게 만들어주기 위해서 세팅해줍니다.</p><h2 id="pyenv-설치"><a href="#pyenv-설치" class="headerlink" title="pyenv 설치"></a>pyenv 설치</h2><ul><li><p>터미널로 인스턴스에 접속합니다.<br><code>Window</code> - <strong>putty</strong> 접속<br><code>Mac</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -i &lt;pem경로&gt; &lt;user name&gt;@&lt;public dns name&gt;</span><br></pre></td></tr></table></figure></li><li><p>locale 오류(한글 깨짐 현상) fix</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/default/locale</span><br></pre></td></tr></table></figure><p>  <img alt data-src="/img/Django/AWS/aws11.PNG" class="lozad"></p></li><li><p>다시 시작</p></li><li><p><code>apt-get</code> 업데이트</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/pyenv/pyenv/wiki/Common-build-problems" rel="external nofollow noopener noreferrer" target="_blank">Common build problems</a>에 나온 내용부터 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \</span><br><span class="line">libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \</span><br><span class="line">xz-utils tk-dev</span><br></pre></td></tr></table></figure></li><li><p><code>pyenv</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://www.tuwlab.com/ece/26135" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h2 id="zsh-설치"><a href="#zsh-설치" class="headerlink" title="zsh 설치"></a>zsh 설치</h2><p>좀 더 사용성을 좋게 하기 위해 기본 bash을 zsh로 변경합니다.</p><ul><li><p><code>zsh</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install zsh</span><br></pre></td></tr></table></figure></li><li><p><code>oh-my-zsh</code> 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L http://install.ohmyz.sh | sh</span><br></pre></td></tr></table></figure></li><li><p>기본 쉘을 bash에서 zsh로 변경</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chsh ubuntu -s `<span class="built_in">which</span> zsh`</span><br></pre></td></tr></table></figure></li><li><p>재접속</p></li><li><p>zshrc에 pyenv 관련 내용 추가</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  vi ~/.zshrc</span><br></pre></td></tr></table></figure><ul><li><p>2번째 줄 export PATH ~ 부분 주석 해제</p></li><li><p>맨아래 내용 추가</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=&quot;/home/ubuntu/.pyenv/bin:$PATH&quot;</span><br><span class="line">eval &quot;$(pyenv init -)&quot;</span><br><span class="line">eval &quot;$(pyenv virtualenv-init -)&quot;</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/Django/AWS/aws12.PNG" class="lozad"></p></li><li><p>zshrc 새로고침</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="srv-폴더-권한-수정"><a href="#srv-폴더-권한-수정" class="headerlink" title="/srv 폴더 권한 수정"></a>/srv 폴더 권한 수정</h2><p>로컬의 파일을 이제 인스턴스에 옮길 차례입니다. 파일은 인스턴스의 /srv 폴더로 옮겨야하는데, 권한이 필요합니다. 옮길 수 있도록 아래 명령어로 권한을 ubuntu로 변경합니다. (참고 : <a href="https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C_%EA%B3%84%EC%B8%B5%EA%B5%AC%EC%A1%B0_%ED%91%9C%EC%A4%80" rel="external nofollow noopener noreferrer" target="_blank">리눅스 폴더 구조</a>)</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R ubuntu:ubuntu /srv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;EC2-인스턴스-가상환경-세팅&quot;&gt;&lt;a href=&quot;#EC2-인스턴스-가상환경-세팅&quot; class=&quot;headerlink&quot; title=&quot;EC2 인스턴스 가상환경 세팅&quot;&gt;&lt;/a&gt;EC2 인스턴스 가상환경 세팅&lt;/h1&gt;&lt;p&gt;인스턴스 환경을 현재 사용
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(AWS) EC2 생성하기</title>
    <link href="https://khs9628.github.io/2019/09/25/aws/"/>
    <id>https://khs9628.github.io/2019/09/25/aws/</id>
    <published>2019-09-25T08:48:03.000Z</published>
    <updated>2019-09-27T10:01:41.804Z</updated>
    
    <content type="html"><![CDATA[<p><img alt="기초구조" data-src="/img/Django/AWS/aws.PNG" class="lozad"></p><h2 id="Django-서버-기본-틀"><a href="#Django-서버-기본-틀" class="headerlink" title="Django 서버 기본 틀"></a>Django 서버 기본 틀</h2><ol><li><p>웹 클라이언트가 <code>웹 서버(Nginx)</code>에 HTTP 프로토콜로 요청(request)를 보낸다.</p></li><li><p>CSS, JavaScript, Images, PDF 문서 등 파일 시스템에 저장되어있는 각종 정적 파일(static file)들은 웹 서버가 바로 처리할 수 있다.</p></li><li><p>정적 파일 외의 동적인 부분은 웹 서버가 처리할 수 없으므로 웹 <code>어플리케이션 서버(uWSGI)</code>에게 위임한다. 웹 서버가 웹 어플리케이션 서버에게 요청을 위임하고, 웹 어플리케이션 서버가 이를 대행해서 웹 서버에게 응답해주는 관계다. 이 사이를 매개해주는게 바로 앞에서 설명한 Unix Socket이다. 웹 서버와 웹 어플리케이션 서버 사이의 통신도 HTTP 프로토콜을 사용할 수 있지만, 같은 OS상에 존재하는 두 개체이므로 더 빠른 uwsgi 프로토콜을 사용한다.</p></li><li><p>웹 클라이언트가 요청한 HTTP 프로토콜의 메시지를, Python call로 변환해줘야 Python으로 기술된 어플리케이션이 동작할 수 있다. Python에서는 이 매핑 관계로 <code>WSGI</code>를 표준으로 사용한다. <code>WSGI</code>는 Web Server Gateway Interface의 약자이다. uWSGI는 이 WSGI 표준의 구현이라고 이해하면 된다. uWSGI는 웹 서버에게서 받은 HTTP 요청을 Python call로 변환해서 Django 프레임워크와 협업한다.</p></li><li><p><code>Django</code> 프레임워크는 사용자가 Python으로 작성한 어플리케이션 코드를 실행한다.</p></li><li><p>또한 필요하다면 <code>ORM(Object-Relational Mapping)</code>을 사용해서 DB에서 데이터를 읽거나 쓴다. 프레임워크가 제공해주는 강력한 기능 중 하나가 ORM이라고 생각한다. SQL 문법을 몰라도, Python 코드로 DB를 다룰 수 있다.</p></li></ol><p><a href="https://technerd.tistory.com/55" rel="external nofollow noopener noreferrer" target="_blank">출처</a></p><h1 id="Django-AWS-EC2로-배포하기"><a href="#Django-AWS-EC2로-배포하기" class="headerlink" title="Django AWS EC2로 배포하기"></a>Django AWS EC2로 배포하기</h1><h2 id="STEP1-AWS-가입하기"><a href="#STEP1-AWS-가입하기" class="headerlink" title="[STEP1] AWS 가입하기"></a>[STEP1] AWS 가입하기</h2><ol><li><a href="https://aws.amazon.com/" rel="external nofollow noopener noreferrer" target="_blank">AWS 사이트</a>에 접속합니다. …</li><li>이메일 주소, 암호, 암호확인, AWS 계정 이름을 입력 하고 [동의하고 계정 만들기]를 클릭합니다.</li><li>해당 정보를 입력합니다. …</li><li>결제 정보를 입력합니다. …</li><li>전화번호를 입력하고 인증을 마무리 합니다.</li></ol><h2 id="STEP2-EC2-가상-서버-생성하기"><a href="#STEP2-EC2-가상-서버-생성하기" class="headerlink" title="[STEP2] EC2 (가상 서버) 생성하기"></a>[STEP2] EC2 (가상 서버) 생성하기</h2><ol><li><p>AWS 접속 후 로그인</p></li><li><p>오른쪽 위에 서울 선택 &amp; 왼쪽상단 Services 클릭<br><img alt data-src="/img/Django/AWS/aws2.PNG" class="lozad"></p></li><li><p>클라우드 서버를 생성하기 위해 EC2 를 클릭한다.</p></li><li><p>인스턴스 시작 클릭</p></li></ol><ol start="5"><li><p>어떤 인스턴스를 실행할지 Ubuntu를 선택 (다른 환경 선택 가능)<br><img alt data-src="/img/Django/AWS/aws1.png" class="lozad"></p></li><li><p>인스턴스 유형은 프리티어에서 사용가능한 두번째 것을 선택하고 ‘검토 및 시작’을 클릭.<br><img alt data-src="/img/Django/AWS/aws3.PNG" class="lozad"></p></li></ol><ol start="7"><li><p>다음 화면에서는 ‘시작하기’를 누른다.<br><img alt data-src="/img/Django/AWS/aws4.PNG" class="lozad"></p></li><li><p><code>&#39;새 키 페어 생성&#39;</code>을 선택하고 ‘키 페어 이름’에 임의의 텍스트를 입력<br>그 다음 <code>&#39;키 페어 다운로드&#39;</code>를 클릭 (이 파일은 한번만 받을 수 있으니 잘 챙겨두자.)</p></li></ol><p><img alt data-src="/img/Django/AWS/aws5.PNG" class="lozad"></p><ol start="9"><li><p>인스턴스 시작을 누르면 시작됨(제대로 시작하기까지는 시간이 좀 걸린다)<br><img alt data-src="/img/Django/AWS/aws6.PNG" class="lozad"></p></li><li><p>탄력적 ip 생성 + 연결(안하셔도 가능)</p></li></ol><p><strong><code>주의</code></strong><br>프리티어에서 Elastic IP 1개를 무료로 사용할 수 있습니다.<br>하지만 Elastic IP는 EC2에 연결해두지 않으면 요금이 청구됩니다.<br>ip가 부족한 상황에서 Elastic ip를 만들어두고 EC2에 연결하지 않으면 ip가 만들어져 있지만 사용되지 않고 있으므로 요금이 청구됩니다.<br>또한, EC2에 연결해두었더라도 EC2가 stop되어있는 상태라면 요금이 청구됩니다.</p><h2 id="STEP3-SSH-를-사용해서-가상-서버-접속하기"><a href="#STEP3-SSH-를-사용해서-가상-서버-접속하기" class="headerlink" title="[STEP3] SSH 를 사용해서 가상 서버 접속하기"></a>[STEP3] SSH 를 사용해서 가상 서버 접속하기</h2><p><strong><em>cf)</em></strong> <a href="https://baked-corn.tistory.com/52" rel="external nofollow noopener noreferrer" target="_blank">SSH란?</a> </p><p><strong><em>mac에 경우</em></strong><br>1) 터미널을 실행하여  private 키를 저장했던 위치로 디렉토리를 이동시킨다.</p><ul><li>cd <del>~</del> 이용</li></ul><p>2) chmod를 이용해서 private 키를 공개적으로 보지 못하게 한다.</p><ul><li>“chmod 400 DjangoServer.pem”</li></ul><p>3) “sudo ssh -i PATH/DjangoServer.pem ubuntu@PUBLIC_DNS”</p><ul><li>PATH는 pwd했을 때 뜨는 경로 대신 채워주면됨</li><li>PUBLIC_DNS는 EC2-실행중인 인스턴스 들어가면 볼 수 있음.</li></ul><p>4) 클라우드 서버에 접속이 되면서 커맨드 창이 열림</p><p><strong><em>Window에 경우</em></strong><br><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" rel="external nofollow noopener noreferrer" target="_blank">putty</a> 프로그램 사용 - putty.exe과 puttygen.exe 다운로드</p><p>1) Puttygen을 통해 public key -&gt; private key<br><img alt data-src="/img/Django/AWS/aws7.PNG" class="lozad"></p><p><img alt data-src="/img/Django/AWS/aws8.PNG" class="lozad"></p><p>2) putty.exe를 통해 접속하기<br><img alt data-src="/img/Django/AWS/aws9.PNG" class="lozad"></p><h2 id="STEP4-보안그룹-설정"><a href="#STEP4-보안그룹-설정" class="headerlink" title="[STEP4] 보안그룹 설정"></a>[STEP4] 보안그룹 설정</h2><p><img alt data-src="/img/Django/AWS/aws10.PNG" class="lozad"></p><blockquote><hr><p>가상서버 : CPU와 메모리를 가진 클라우드 내 서버<br>인스턴스 (instance) : AWS에서 가상 서버를 부르는 용어<br>EC2 (Elastic Compute Cloud) : 가상 인스턴스를 운영하는 서비스<br>보안 그룹(security group) : 인스턴스에 대한 트래픽을 제어하는  가상 방화벽 역할<br>IAM (Identity and Access Management) : 사용자 엑세스 및 암호화 키 관리<br>관리 콘솔 : AWS 서비스를 모두 관리하는 사용자 인터페이스</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img alt=&quot;기초구조&quot; data-src=&quot;/img/Django/AWS/aws.PNG&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Django-서버-기본-틀&quot;&gt;&lt;a href=&quot;#Django-서버-기본-틀&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/categories/AWS/"/>
    
    
      <category term="AWS" scheme="https://khs9628.github.io/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>(Django) - PostgreSQL 연동</title>
    <link href="https://khs9628.github.io/2019/09/25/Django5/"/>
    <id>https://khs9628.github.io/2019/09/25/Django5/</id>
    <published>2019-09-25T08:48:00.000Z</published>
    <updated>2020-10-06T06:22:00.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PostgreSQL-연동"><a href="#PostgreSQL-연동" class="headerlink" title="PostgreSQL 연동"></a>PostgreSQL 연동</h2><h2 id="STEP1-PostgreSQL-DataBase-설치"><a href="#STEP1-PostgreSQL-DataBase-설치" class="headerlink" title="STEP1. PostgreSQL DataBase 설치"></a>STEP1. PostgreSQL DataBase 설치</h2><p><a href="https://www.enterprisedb.com/downloads/postgres-postgresql-downloads#windows" rel="external nofollow noopener noreferrer" target="_blank">PostgreSql</a>  링크를 클릭해 다운로드<br>필자는 Window 기반 Os를 사용하고 있기 때문에 Window용 파일을 다운받았다 .<br><a href="http://www.postgresqltutorial.com/install-postgresql/" rel="external nofollow noopener noreferrer" target="_blank">설치 과정</a>은 이곳에 상세히 나와있다.</p><h2 id="STEP2-PgAdmin-실행"><a href="#STEP2-PgAdmin-실행" class="headerlink" title="STEP2. PgAdmin 실행"></a>STEP2. PgAdmin 실행</h2><ul><li>시작 &gt; pgadmin 검색 &gt; 실행</li><li>설치 시 저장한 비밀번호 입력<br><img alt="설치경로" data-src="/img/Django/db1.PNG" class="lozad"></li></ul><h2 id="STEP3-유저-생성"><a href="#STEP3-유저-생성" class="headerlink" title="STEP3. 유저 생성"></a>STEP3. 유저 생성</h2><p><img alt="유저" data-src="/img/Django/db2.PNG" class="lozad"></p><h2 id="STEP4-데이터베이스-생성"><a href="#STEP4-데이터베이스-생성" class="headerlink" title="STEP4. 데이터베이스 생성"></a>STEP4. 데이터베이스 생성</h2><p><img alt="DB" data-src="/img/Django/db3.PNG" class="lozad"></p><h2 id="STEP5-모듈-설치-및-세팅"><a href="#STEP5-모듈-설치-및-세팅" class="headerlink" title="STEP5. 모듈 설치 및 세팅"></a>STEP5. 모듈 설치 및 세팅</h2><p><code>psycopg2</code> 모듈 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install psycopg2</span><br></pre></td></tr></table></figure><p><code>settings.py</code> 파일 수정</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.postgresql_psycopg2'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'DB_NAME'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'User_NAME'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'USER_PW'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'5432'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="STEP5"><a href="#STEP5" class="headerlink" title="STEP5."></a>STEP5.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py makemigrations</span><br><span class="line">$ python manage.py migrate</span><br></pre></td></tr></table></figure><h2 id="STEP6-확인"><a href="#STEP6-확인" class="headerlink" title="STEP6. 확인"></a>STEP6. 확인</h2><p><img alt="TABLE" data-src="/img/Django/db4.PNG" class="lozad"></p><blockquote><p>하루를 기록하다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PostgreSQL-연동&quot;&gt;&lt;a href=&quot;#PostgreSQL-연동&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL 연동&quot;&gt;&lt;/a&gt;PostgreSQL 연동&lt;/h2&gt;&lt;h2 id=&quot;STEP1-PostgreSQL-Data
      
    
    </summary>
    
    
      <category term="Django" scheme="https://khs9628.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Note - Change_Dnote</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote7/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote7/</id>
    <published>2019-09-24T12:26:38.000Z</published>
    <updated>2019-09-29T14:38:13.818Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://velog.io/@killi8n/Dnote-4-6.-React-%EB%85%B8%ED%8A%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84-%EB%B0%8F-%EC%88%98%EC%A0%95-%EC%82%AD%EC%A0%9C-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84.-bujmep4wlj" rel="external nofollow noopener noreferrer" target="_blank">참고사이트</a></p><h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h1 id="R-amp-D-Note-Dnote-Change-수정-삭제-구현"><a href="#R-amp-D-Note-Dnote-Change-수정-삭제-구현" class="headerlink" title="R&amp;D Note - Dnote_Change (수정/삭제 구현)"></a>R&amp;D Note - Dnote_Change (수정/삭제 구현)</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://velog.io/@killi8n/Dnote-4-6.-React-%EB%85%B8%ED%8A%B8-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84-%EB%B0%8F-%EC%88%98
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Note - New_Dnote</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote6/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote6/</id>
    <published>2019-09-24T12:26:33.000Z</published>
    <updated>2019-09-29T14:38:19.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h1 id="R-amp-D-Note-NewDnote-새글-쓰기"><a href="#R-amp-D-Note-NewDnote-새글-쓰기" class="headerlink" title="R&amp;D Note - NewDnote (새글 쓰기)"></a>R&amp;D Note - NewDnote (새글 쓰기)</h1><p><code>store/modules/notes.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ajax &#125; <span class="keyword">from</span> <span class="string">"rxjs/observable/dom/ajax"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="keyword">of</span> &#125; <span class="keyword">from</span> <span class="string">"rxjs"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; map, mergeMap, catchError, withLatestFrom &#125; <span class="keyword">from</span> <span class="string">"rxjs/operators"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ofType &#125; <span class="keyword">from</span> <span class="string">"redux-observable"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> CHANGE_NOTE_INPUT = <span class="string">"notes/CHANGE_NOTE_INPUT"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ADD_NOTE = <span class="string">"notes/ADD_NOTE"</span>;</span><br><span class="line"><span class="keyword">const</span> ADD_NOTE_SUCCESS = <span class="string">"notes/ADD_NOTE_SUCCESS"</span>;</span><br><span class="line"><span class="keyword">const</span> ADD_NOTE_FAILURE = <span class="string">"notes/ADD_NOTE_FAILURE"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> changeNoteInput = <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">  type: CHANGE_NOTE_INPUT,</span><br><span class="line">  payload: &#123; value &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addNote = <span class="function"><span class="params">()</span> =&gt;</span> (&#123;</span><br><span class="line">  type: ADD_NOTE</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addNoteSuccess = <span class="function"><span class="params">note</span> =&gt;</span> (&#123;</span><br><span class="line">  type: ADD_NOTE_SUCCESS,</span><br><span class="line">  payload: &#123;</span><br><span class="line">    note</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addNoteFailure = <span class="function"><span class="params">error</span> =&gt;</span> (&#123;</span><br><span class="line">  type: ADD_NOTE_FAILURE,</span><br><span class="line">  payload: &#123;</span><br><span class="line">    error</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addNoteEpic = <span class="function">(<span class="params">action$, state$</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> action$.pipe(</span><br><span class="line">    ofType(ADD_NOTE),</span><br><span class="line">    withLatestFrom(state$),</span><br><span class="line">    mergeMap(<span class="function">(<span class="params">[action, state]</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> ajax.post(<span class="string">`/api/notes/`</span>, &#123; <span class="attr">text</span>: state.notes.noteInput &#125;).pipe(</span><br><span class="line">        map(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> note = response.response;</span><br><span class="line">          <span class="keyword">return</span> addNoteSuccess(note);</span><br><span class="line">        &#125;),</span><br><span class="line">        catchError(<span class="function"><span class="params">error</span> =&gt;</span></span><br><span class="line">          <span class="keyword">of</span>(&#123;</span><br><span class="line">            type: ADD_NOTE_FAILURE,</span><br><span class="line">            payload: error,</span><br><span class="line">            error: <span class="literal">true</span></span><br><span class="line">          &#125;)</span><br><span class="line">        )</span><br><span class="line">      );</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  noteInput: <span class="string">""</span>,</span><br><span class="line">  notes: []</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notes = <span class="function">(<span class="params">state = initialState, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> CHANGE_NOTE_INPUT:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        noteInput: action.payload.value</span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">case</span> ADD_NOTE_SUCCESS:</span><br><span class="line">      <span class="keyword">const</span> &#123; note &#125; = action.payload;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        notes: [note].concat(state.notes),</span><br><span class="line">        noteInput: <span class="string">""</span></span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">case</span> ADD_NOTE_FAILURE:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        error: &#123;</span><br><span class="line">          triggered: <span class="literal">true</span>,</span><br><span class="line">          message: <span class="string">"Error! Please Try With Unempty Note"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notesEpics = &#123;</span><br><span class="line">  addNoteEpic</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>위와 같이 note를 추가하는 epic과 액션, 리듀서들을 생성해주세요.</p><p>그리고, index.js에서 epic을 반영해주세요.</p><p><code>modules/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; notes, notesEpics &#125; <span class="keyword">from</span> <span class="string">"./notes"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; combineEpics &#125; <span class="keyword">from</span> <span class="string">"redux-observable"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> rootReducers = combineReducers(&#123; notes &#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> rootEpics = combineEpics(notesEpics.addNoteEpic);</span><br></pre></td></tr></table></figure><p>처음으로 epic이 나왔는데요, 이 epic은 configure에서 다음과 같이 등록해주어야 사용할수 있습니다.</p><p><code>store/configure.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createEpicMiddleware &#125; <span class="keyword">from</span> <span class="string">"redux-observable"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; rootReducers, rootEpics &#125; <span class="keyword">from</span> <span class="string">"./modules"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> composeEnhancers = <span class="built_in">window</span>.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;</span><br><span class="line"><span class="keyword">const</span> epicMiddleware = createEpicMiddleware();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore(</span><br><span class="line">  rootReducers,</span><br><span class="line">  composeEnhancers(applyMiddleware(epicMiddleware))</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">epicMiddleware.run(rootEpics);</span><br></pre></td></tr></table></figure><p>이제 container로 다시 돌아와서 다음 작업들을 해줘야합니다.</p><p><code>containers/NoteContainer.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">"react-redux"</span>;</span><br><span class="line"><span class="keyword">import</span> InsertForm <span class="keyword">from</span> <span class="string">"../components/notes/InsertForm"</span>;</span><br><span class="line"><span class="keyword">import</span> NoteWrapper <span class="keyword">from</span> <span class="string">"../components/notes/NoteWrapper"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> noteActions <span class="keyword">from</span> <span class="string">"../store/modules/notes"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">NoteContainer</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  handleChange = <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; changeNoteInput &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    changeNoteInput(&#123; value &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  addNote = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; addNote &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    addNote();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; noteInput &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">const</span> &#123; handleChange, addNote &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;NoteWrapper&gt;</span><br><span class="line">          &lt;InsertForm</span><br><span class="line">            noteInput=&#123;noteInput&#125;</span><br><span class="line">            onChangeInput=&#123;handleChange&#125;</span><br><span class="line">            onAdd=&#123;addNote&#125;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;<span class="regexp">/NoteWrapper&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">  noteInput: state.notes.noteInput,</span><br><span class="line">  notes: state.notes.notes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapDispatchToProps = <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    changeNoteInput: <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      dispatch(noteActions.changeNoteInput(&#123; value &#125;));</span><br><span class="line">    &#125;,</span><br><span class="line">    addNote: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      dispatch(noteActions.addNote());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(</span><br><span class="line">  mapStateToProps,</span><br><span class="line">  mapDispatchToProps</span><br><span class="line">)(NoteContainer);</span><br></pre></td></tr></table></figure><p><code>components/notes/InsertForm/InsertForm.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./InsertForm.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> InsertForm = <span class="function">(<span class="params">&#123; noteInput, onChangeInput, onAdd &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> handleChange = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; value &#125; = e.target;</span><br><span class="line">    onChangeInput(&#123; value &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> handleKeyPress = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (e.key === <span class="string">"Enter"</span>) &#123;</span><br><span class="line">      onAdd();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"form"</span>)&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;cx(<span class="string">"title"</span>)&#125;&gt;Insert Your Note Here...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;input</span></span><br><span class="line"><span class="regexp">        type="text"</span></span><br><span class="line"><span class="regexp">        name="note"</span></span><br><span class="line"><span class="regexp">        value=&#123;noteInput&#125;</span></span><br><span class="line"><span class="regexp">        onChange=&#123;handleChange&#125;</span></span><br><span class="line"><span class="regexp">        onKeyPress=&#123;handleKeyPress&#125;</span></span><br><span class="line"><span class="regexp">      /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default InsertForm;</span></span><br></pre></td></tr></table></figure><p>근데 이상태로는 오류가 납니다, 이유는 <code>proxy</code>설정을 안했기 때문인데요, package.json에서 프록시 설정을 해줍니다.</p><p><code>package.json</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"proxy": "http://localhost:8000"</span><br></pre></td></tr></table></figure><p><img alt data-src="/img/React/package.PNG" class="lozad"></p><p><img alt data-src="/img/React/dnote_new.PNG" class="lozad"><br>자 이제 엔터를 치면 노트가 생성됨을 알수 있습니다.<br><img alt data-src="/img/React/dnote_redux.PNG" class="lozad"><br>크롬 개발자도구를 키고, network에서 보시면 201 생성이 뜨죠?</p><h1 id="에러-처리"><a href="#에러-처리" class="headerlink" title="에러 처리"></a>에러 처리</h1><p><code>modules/notes.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  noteInput: <span class="string">""</span>,</span><br><span class="line">  notes: [],</span><br><span class="line">  <span class="comment">// 에러 관련 state 등록.</span></span><br><span class="line">  error: &#123;</span><br><span class="line">    triggered: <span class="literal">false</span>,</span><br><span class="line">    message: <span class="string">""</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">containers/NoteContainer.js</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; noteInput, error &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">const</span> &#123; handleChange, addNote &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;NoteWrapper&gt;</span><br><span class="line">          &lt;InsertForm</span><br><span class="line">            noteInput=&#123;noteInput&#125;</span><br><span class="line">            onChangeInput=&#123;handleChange&#125;</span><br><span class="line">            onAdd=&#123;addNote&#125;</span><br><span class="line">            error=&#123;error&#125;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;<span class="regexp">/NoteWrapper&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">  noteInput: state.notes.noteInput,</span><br><span class="line">  notes: state.notes.notes,</span><br><span class="line">  error: state.notes.error</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>components/notes/InsertForm/InsertForm.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./InsertForm.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> InsertForm = <span class="function">(<span class="params">&#123; noteInput, onChangeInput, onAdd, error &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> handleChange = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; value &#125; = e.target;</span><br><span class="line">    onChangeInput(&#123; value &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> handleKeyPress = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (e.key === <span class="string">"Enter"</span>) &#123;</span><br><span class="line">      onAdd();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"form"</span>)&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;cx(<span class="string">"title"</span>)&#125;&gt;Insert Your Note Here...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;div className=&#123;cx("error")&#125;&gt;</span></span><br><span class="line"><span class="regexp">        &#123;error.triggered &amp;&amp; (</span></span><br><span class="line"><span class="regexp">          &lt;div className=&#123;cx("message")&#125;&gt;&#123;error.message&#125;&lt;/</span>div&gt;</span><br><span class="line">        )&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;input</span></span><br><span class="line"><span class="regexp">        type="text"</span></span><br><span class="line"><span class="regexp">        name="note"</span></span><br><span class="line"><span class="regexp">        value=&#123;noteInput&#125;</span></span><br><span class="line"><span class="regexp">        onChange=&#123;handleChange&#125;</span></span><br><span class="line"><span class="regexp">        onKeyPress=&#123;handleKeyPress&#125;</span></span><br><span class="line"><span class="regexp">      /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default InsertForm;</span></span><br></pre></td></tr></table></figure><p>이제 에러가 생기면 반영이 됩니다. 그러나 제대로 입력했을때도 남아있으니, 이부분을 고쳐보겠습니다.</p><p><code>store/modules/notes.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> ADD_NOTE_SUCCESS:</span><br><span class="line">      <span class="keyword">const</span> &#123; note &#125; = action.payload;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        notes: [note].concat(state.notes),</span><br><span class="line">        noteInput: <span class="string">""</span>,</span><br><span class="line">        <span class="comment">// 성공시 에러 초기화.</span></span><br><span class="line">        error: &#123;</span><br><span class="line">          triggered: <span class="literal">false</span>,</span><br><span class="line">          message: <span class="string">""</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br></pre></td></tr></table></figure><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Note - Structure_Dnote</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote5/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote5/</id>
    <published>2019-09-24T12:26:32.000Z</published>
    <updated>2019-09-29T14:38:28.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h1 id="R-amp-D-Note-Structure-구조잡기"><a href="#R-amp-D-Note-Structure-구조잡기" class="headerlink" title="R&amp;D Note - Structure (구조잡기)"></a>R&amp;D Note - Structure (구조잡기)</h1><p><code>components/notes/InsertForm/InsertForm.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./InsertForm.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> InsertForm = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"form"</span>)&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;cx(<span class="string">"title"</span>)&#125;&gt;Insert Your Note Here...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;input type="text" name="note" /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default InsertForm;</span></span><br></pre></td></tr></table></figure><p><code>components/notes/InsertForm/InsertForm.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"../../../styles/utils.scss;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$oc-gray-8</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.75rem</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.25rem</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0.75rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2.5rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$oc-gray-5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.25rem</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$oc-gray-5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>components/notes/InsertForm/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./InsertForm'</span>;</span><br></pre></td></tr></table></figure><p>이 InsertForm을 Main 페이지에 반영해보겠습니다.</p><p><code>pages/Main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> MainStructure <span class="keyword">from</span> <span class="string">"../components/structure/MainStructure"</span>;</span><br><span class="line"><span class="keyword">import</span> NoteContainer <span class="keyword">from</span> <span class="string">"../containers/NoteContainer"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;MainStructure&gt;</span><br><span class="line">      &lt;InsertForm /&gt;</span><br><span class="line">    &lt;<span class="regexp">/MainStructure&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Main;</span></span><br></pre></td></tr></table></figure><p>이렇게 되면 너무 넓이가 넓어지므로, wrapper컴포넌트를 하나 만들어야합니다.</p><p><code>components/notes/NoteWrapper/NoteWrapper.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./NoteWrapper.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> NoteWrapper = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">  &lt;div className=&#123;cx(<span class="string">"wrapper"</span>)&#125;&gt;&#123;children&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default NoteWrapper;</span></span><br></pre></td></tr></table></figure><p><code>components/notes/NoteWrapper/NoteWrapper.scss</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"../../../styles/utils.scss;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1024px</span>;</span><br><span class="line">  @<span class="keyword">include</span> media(<span class="string">"&lt;medium"</span>) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line">components/notes/NoteWrapper/index.js</span><br><span class="line"></span><br><span class="line">export &#123; default &#125; from './NoteWrapper';</span><br></pre></td></tr></table></figure><p>이제 이 wrapper로 InsertForm을 감싸줍니다.<br><code>pages/Main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> MainStructure <span class="keyword">from</span> <span class="string">"../components/structure/MainStructure"</span>;</span><br><span class="line"><span class="keyword">import</span> InsertForm <span class="keyword">from</span> <span class="string">"../components/notes/InsertForm"</span>;</span><br><span class="line"><span class="keyword">import</span> NoteWrapper <span class="keyword">from</span> <span class="string">"../components/notes/NoteWrapper"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;MainStructure&gt;</span><br><span class="line">      &lt;NoteWrapper&gt;</span><br><span class="line">        &lt;InsertForm /&gt;</span><br><span class="line">      &lt;<span class="regexp">/NoteWrapper&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>MainStructure&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Main;</span><br></pre></td></tr></table></figure><p>위치가 나름 잡아졌죠?</p><p>그렇다면 이제 이 입력폼을 가지고 실제로 redux를 사용하여 django와 통신하여 새 노트를 한번 만들어보겠습니다.</p><p>일단 노트 input의 value 상태를 반영할 action과 리듀서를 생성해보겠습니다.</p><p><code>store/modules/notes.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CHANGE_NOTE_INPUT = <span class="string">"notes/CHANGE_NOTE_INPUT"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> changeNoteInput = <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">  type: CHANGE_NOTE_INPUT,</span><br><span class="line">  payload: &#123; value &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">  noteInput: <span class="string">""</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notes = <span class="function">(<span class="params">state = initialState, action</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> CHANGE_NOTE_INPUT:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        noteInput: action.payload.value</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>이제 이 모듈을 index에서 반영해줍니다.</p><p><code>store/modules/index.js</code><br>// 원래 있던 ping은 삭제해도 무방합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; notes &#125; <span class="keyword">from</span> <span class="string">"./notes"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> rootReducers = combineReducers(&#123; notes &#125;);</span><br></pre></td></tr></table></figure><p>그럼 이제 이 모듈을 사용해서 input값을 관리해볼까요?</p><p>일단 그러기 위해서 container를 하나 생성해주어야합니다.</p><p><code>containers/NoteContainer.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">"react-redux"</span>;</span><br><span class="line"><span class="keyword">import</span> InsertForm <span class="keyword">from</span> <span class="string">"components/notes/InsertForm"</span>;</span><br><span class="line"><span class="keyword">import</span> NoteWrapper <span class="keyword">from</span> <span class="string">"components/notes/NoteWrapper"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> noteActions <span class="keyword">from</span> <span class="string">"store/modules/notes"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">NoteContainer</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  handleChange = <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; changeNoteInput &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    changeNoteInput(&#123; value &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; noteInput &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">const</span> &#123; handleChange &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;NoteWrapper&gt;</span><br><span class="line">          &lt;InsertForm noteInput=&#123;noteInput&#125; onChangeInput=&#123;handleChange&#125; /&gt;</span><br><span class="line">        &lt;<span class="regexp">/NoteWrapper&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">  noteInput: state.notes.noteInput</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapDispatchToProps = <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    changeNoteInput: <span class="function">(<span class="params">&#123; value &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      dispatch(noteActions.changeNoteInput(&#123; value &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(</span><br><span class="line">  mapStateToProps,</span><br><span class="line">  mapDispatchToProps</span><br><span class="line">)(NoteContainer);</span><br></pre></td></tr></table></figure><p>그런 뒤에 pages에서 이 컨테이너만 렌더해줍니다.</p><p><code>pages/Main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> MainStructure <span class="keyword">from</span> <span class="string">"../components/structure/MainStructure"</span>;</span><br><span class="line"><span class="keyword">import</span> NoteContainer <span class="keyword">from</span> <span class="string">"../containers/NoteContainer"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;MainStructure&gt;</span><br><span class="line">      &lt;NoteContainer /&gt;</span><br><span class="line">    &lt;<span class="regexp">/MainStructure&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default Main;</span></span><br></pre></td></tr></table></figure><p>이제 InsertForm 컴포넌트에서 마무리 작업을 해줍니다.</p><p><code>components/notes/InsertForm/InsertForm.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./InsertForm.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> InsertForm = <span class="function">(<span class="params">&#123; noteInput, onChangeInput &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> handleChange = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; value &#125; = e.target;</span><br><span class="line">    onChangeInput(&#123; value &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"form"</span>)&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;cx(<span class="string">"title"</span>)&#125;&gt;Insert Your Note Here...&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;input</span></span><br><span class="line"><span class="regexp">        type="text"</span></span><br><span class="line"><span class="regexp">        name="note"</span></span><br><span class="line"><span class="regexp">        value=&#123;noteInput&#125;</span></span><br><span class="line"><span class="regexp">        onChange=&#123;handleChange&#125;</span></span><br><span class="line"><span class="regexp">      /</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default InsertForm;</span></span><br></pre></td></tr></table></figure><p><img alt data-src="/img/React/dnote.PNG" class="lozad"></p><p>이제 <code>Redux-devTools</code>로 보면 입력을 할때마다 값이 바뀌는것을 알수 있습니다.<br><img alt data-src="/img/React/new_redux.PNG" class="lozad"><br>다음에는 이 값을 가지고 실제 노트를 하나 생성해보겠습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Header</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote4/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote4/</id>
    <published>2019-09-24T08:44:00.000Z</published>
    <updated>2019-09-29T12:34:43.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h1 id="R-amp-D-Header-nav바-디자인하기"><a href="#R-amp-D-Header-nav바-디자인하기" class="headerlink" title="R&amp;D Header (nav바 디자인하기)"></a>R&amp;D Header (nav바 디자인하기)</h1><h2 id="page-routing"><a href="#page-routing" class="headerlink" title="page routing"></a>page routing</h2><p><strong>Project : frontend</strong></p><pre><code>src/├──    styles/ |       ├── utils.scss|       └── index.scss├── containers/ # 리액트 컨테이너 파일들 집합├── components/ # 리액트 컴포넌트 파일들 집합|       ├── /structure|       ├── /Header|       |        ├── Header.js   # header 관련 코드 파일|       |        ├── Header.scss # header 관련 scss 파일|       |       |       └── index.js    # header export   -&gt;  structure.js|       |       ├── MainStructure.js    # 조각 모음|       |       ├── MainStructure.scss  # scss 조각모음|       |       └── index.js            # structure export -&gt;  main.js|       └── App.js  -&gt; Root.js -&gt; index.js├── pages/ -&gt; APP.js |       ├── Auth.js     # login/register page|       ├── Main.js     # Main page  |       ├── Notfound.js # 지정되지 않은 page|       └── index.js└── store/     # redux모듈들과 configure파일들 집합        ├── module/        |      ├── index.js        |      └── ping.js        └── configure.js</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 라우팅</span></span><br><span class="line">$ npm install react-router-dom</span><br></pre></td></tr></table></figure><h3 id="Root-js"><a href="#Root-js" class="headerlink" title="Root.js"></a>Root.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./components/App"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">"react-redux"</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">"./store/configure"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Root = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">            <span class="comment">// 감싸준다</span></span><br><span class="line">            &lt;BrowserRouter&gt; </span><br><span class="line">                &lt;App /&gt;</span><br><span class="line">            &lt;<span class="regexp">/BrowserRouter&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>Provider&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Root;</span><br></pre></td></tr></table></figure><h3 id="pages-Main-js-노트들이-리스트되어-나타날-페이지"><a href="#pages-Main-js-노트들이-리스트되어-나타날-페이지" class="headerlink" title="pages/Main.js : 노트들이 리스트되어 나타날 페이지"></a>pages/Main.js : 노트들이 리스트되어 나타날 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Main Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Main;</span><br></pre></td></tr></table></figure><h3 id="pages-Auth-js-로그인-회원가입-페이지"><a href="#pages-Auth-js-로그인-회원가입-페이지" class="headerlink" title="pages/Auth.js : 로그인 / 회원가입 페이지"></a>pages/Auth.js : 로그인 / 회원가입 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Auth = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Auth Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Auth;</span><br></pre></td></tr></table></figure><h3 id="pages-NotFound-js-라우팅-되지-않은-곳에서-나타날-페이지"><a href="#pages-NotFound-js-라우팅-되지-않은-곳에서-나타날-페이지" class="headerlink" title="pages/NotFound.js : 라우팅 되지 않은 곳에서 나타날 페이지"></a>pages/NotFound.js : 라우팅 되지 않은 곳에서 나타날 페이지</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> NotFound = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>NotFound Page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> NotFound;</span><br></pre></td></tr></table></figure><h3 id="pages-index-js-페이지들을-한곳에-모아줌"><a href="#pages-index-js-페이지들을-한곳에-모아줌" class="headerlink" title="pages/index.js : 페이지들을 한곳에 모아줌"></a>pages/index.js : 페이지들을 한곳에 모아줌</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Main &#125; <span class="keyword">from</span> <span class="string">"./Main"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> Auth &#125; <span class="keyword">from</span> <span class="string">"./Auth"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> NotFound &#125; <span class="keyword">from</span> <span class="string">"./NotFound"</span>;</span><br></pre></td></tr></table></figure><h3 id="components-App-js"><a href="#components-App-js" class="headerlink" title="components/App.js"></a>components/App.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Switch, Route &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Main, Auth, NotFound &#125; <span class="keyword">from</span> <span class="string">"../pages"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Switch&gt;</span><br><span class="line">          &lt;Route path=<span class="string">"/"</span> exact=&#123;<span class="literal">true</span>&#125; component=&#123;Main&#125; /&gt;</span><br><span class="line">          &lt;Route path=<span class="string">"/auth/:kind"</span> exact=&#123;<span class="literal">true</span>&#125; component=&#123;Auth&#125; /&gt;</span><br><span class="line">          &lt;Route component=&#123;NotFound&#125; /&gt;</span><br><span class="line">        &lt;<span class="regexp">/Switch&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/pages.PNG" class="lozad"></p><h2 id="Header-만들기"><a href="#Header-만들기" class="headerlink" title="Header 만들기"></a>Header 만들기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-icons open-color include-media classnames</span><br><span class="line"><span class="comment"># react-icons : 로그아웃 버튼</span></span><br><span class="line"><span class="comment"># open-color : color제공 라이브러리</span></span><br><span class="line"><span class="comment"># include-media : 미디어 쿼리를 좀더 자유롭게 사용하게 해줌</span></span><br><span class="line"><span class="comment"># classnames : 여러개의 클래스를 한번에 사용하게도 하고, scss와 bind하여 굳이 styles라는 이름을 사용하지 않아도 되게하는 라이브러리</span></span><br></pre></td></tr></table></figure><h2 id="기본-동작-구조"><a href="#기본-동작-구조" class="headerlink" title="기본 동작 구조"></a>기본 동작 구조</h2><p>components(header) -&gt; MainStructure -&gt; page -&gt; App -&gt; Root -&gt; index</p><h3 id="main-scss-설정-styles-utils-scss"><a href="#main-scss-설정-styles-utils-scss" class="headerlink" title="main scss 설정(styles/utils.scss)"></a>main scss 설정(styles/utils.scss)</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"~open-color/open-color"</span>;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">"~include-media/dist/include-media"</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$breakpoints</span>: (</span><br><span class="line">    small: <span class="number">320px</span>,</span><br><span class="line">    medium: <span class="number">768px</span>,</span><br><span class="line">    large: <span class="number">1024px</span>,</span><br><span class="line">    wide: <span class="number">1400px</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="header-설정"><a href="#header-설정" class="headerlink" title="header 설정"></a>header 설정</h3><p><code>/components/structure/Header/Header.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">"./Header.scss"</span>;</span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Link &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; MdLock &#125; <span class="keyword">from</span> <span class="string">"react-icons/md"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cx = classNames.bind(styles);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Header = <span class="function">(<span class="params">&#123; onLogout &#125;</span>) =&gt;</span> (</span><br><span class="line">    &lt;div className=&#123;cx(<span class="string">"header"</span>)&#125;&gt;</span><br><span class="line">        &lt;Link to=&#123;<span class="string">"/"</span>&#125; className=&#123;cx(<span class="string">"logo"</span>)&#125;&gt;</span><br><span class="line">            D-Note</span><br><span class="line">        &lt;<span class="regexp">/Link&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div className=&#123;cx("logout")&#125;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;MdLock onClick=&#123;onLogout&#125; /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Header;</span><br></pre></td></tr></table></figure><p><code>/components/structure/Header/Header.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"../../../styles/utils.scss"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$oc-violet-6</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5rem</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.logo</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">cursor</span>: pointer;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">1rem</span>;</span><br><span class="line"></span><br><span class="line">        user-<span class="selector-tag">select</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.logout</span> &#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: auto;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">1rem</span>;</span><br><span class="line">        <span class="attribute">color</span>: white;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export</span></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./Header'</span>;</span><br></pre></td></tr></table></figure><h3 id="MainStructure-js-여러개의-components를-모아주는-곳"><a href="#MainStructure-js-여러개의-components를-모아주는-곳" class="headerlink" title="MainStructure.js : 여러개의 components를 모아주는 곳"></a>MainStructure.js : 여러개의 components를 모아주는 곳</h3><p><code>components/structure/MainStructure.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="comment">// import styles from "./MainStructure.scss";</span></span><br><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">"classnames/bind"</span>;</span><br><span class="line"><span class="keyword">import</span> Header <span class="keyword">from</span> <span class="string">"./Header"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const cx = classNames.bind(styles);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MainStructure = <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;Header /&gt;</span><br><span class="line">        &lt;main&gt;&#123;children&#125;&lt;<span class="regexp">/main&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> MainStructure;</span><br></pre></td></tr></table></figure><p><code>components/structure/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> &#125; <span class="keyword">from</span> <span class="string">'./MainStructure'</span>;</span><br></pre></td></tr></table></figure><h3 id="pages-Main-js"><a href="#pages-Main-js" class="headerlink" title="pages/Main.js"></a>pages/Main.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> MainStructure <span class="keyword">from</span> <span class="string">"../components/structure/MainStructure"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Main = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">MainStructure</span>&gt;</span>Main Page<span class="tag">&lt;/<span class="name">MainStructure</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Main;</span><br></pre></td></tr></table></figure><p><img alt="결과" data-src="/img/React/header.PNG" class="lozad"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
  <entry>
    <title>R&amp;D Backend</title>
    <link href="https://khs9628.github.io/2019/09/24/Dnote3/"/>
    <id>https://khs9628.github.io/2019/09/24/Dnote3/</id>
    <published>2019-09-24T08:16:36.000Z</published>
    <updated>2019-09-29T14:38:39.041Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-amp-Django-프로젝트"><a href="#React-amp-Django-프로젝트" class="headerlink" title="React &amp; Django 프로젝트"></a>React &amp; Django 프로젝트</h1><p><strong>input태그를 이용하여 직관적으로 한줄 노트를 작성할수 있는 앱</strong></p><h1 id="R-amp-D-Backend-DRF-API-구현하기"><a href="#R-amp-D-Backend-DRF-API-구현하기" class="headerlink" title="R&amp;D (Backend) - DRF API 구현하기"></a>R&amp;D (Backend) - DRF API 구현하기</h1><h2 id="장고-API-구현"><a href="#장고-API-구현" class="headerlink" title="장고 API 구현"></a>장고 API 구현</h2><table><thead><tr><th align="left">URL</th><th align="center">METHOD</th><th align="center">Description</th><th align="center">Params</th><th align="center">Return</th></tr></thead><tbody><tr><td align="left">/api/notes/</td><td align="center">GET</td><td align="center">글 목록</td><td align="center">X</td><td align="center">[..{ Notes }]</td></tr><tr><td align="left">/api/notes/</td><td align="center">POST</td><td align="center">새로운 글 작성</td><td align="center">(text)</td><td align="center"></td></tr><tr><td align="left">/api/notes/{id}</td><td align="center">GET</td><td align="center">글 상세보기</td><td align="center">(Notes_id)</td><td align="center">{ Note }</td></tr><tr><td align="left">api/notes/{id}</td><td align="center">PATCH</td><td align="center">글 수정</td><td align="center">(Notes_id)</td><td align="center"></td></tr><tr><td align="left">api/notes/{id}</td><td align="center">DELETE</td><td align="center">글 삭제</td><td align="center">(Notes_id)</td><td align="center"></td></tr></tbody></table><h3 id="notes-app-생성"><a href="#notes-app-생성" class="headerlink" title="notes app 생성"></a>notes app 생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py startapp notes</span><br><span class="line"><span class="comment"># restframework install</span></span><br><span class="line">$ pip install djangorestframework</span><br></pre></td></tr></table></figure><h3 id="app-추가"><a href="#app-추가" class="headerlink" title="app 추가"></a>app 추가</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># settings.py</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="comment"># notes 앱 추가</span></span><br><span class="line">    <span class="string">'notes'</span>,</span><br><span class="line">    <span class="comment"># rest framework 추가</span></span><br><span class="line">    <span class="string">'rest_framework'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="models-py-모델-구성"><a href="#models-py-모델-구성" class="headerlink" title="models.py : 모델 구성"></a>models.py : 모델 구성</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Notes</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    text = models.CharField(max_length=<span class="number">255</span>)</span><br><span class="line">    created_at = models.DateTimeField(auto_now=<span class="literal">False</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.text</span><br></pre></td></tr></table></figure><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ (venv) python manage.py makemigrations</span><br><span class="line">$ (venv) python manage.py migrate</span><br></pre></td></tr></table></figure><h3 id="notes-serializers-py-모델을-참조하여-구성"><a href="#notes-serializers-py-모델을-참조하여-구성" class="headerlink" title="notes/serializers.py : 모델을 참조하여 구성"></a>notes/serializers.py : 모델을 참조하여 구성</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Notes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteSerializer</span><span class="params">(serializers.ModelSerializer)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Notes</span><br><span class="line">        fields = (<span class="string">"id"</span>, <span class="string">"text"</span>)</span><br></pre></td></tr></table></figure><h3 id="note-views-py-실제-controller-serializer-참조"><a href="#note-views-py-실제-controller-serializer-참조" class="headerlink" title="note/views.py : 실제 controller (serializer 참조)"></a>note/views.py : 실제 controller (serializer 참조)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> NoteSerializer</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Notes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoteViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    serializer_class = NoteSerializer</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Notes.objects.all().order_by(<span class="string">"-created_at"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">perform_create</span><span class="params">(self, serializer)</span>:</span></span><br><span class="line">        serializer.save()</span><br></pre></td></tr></table></figure><h3 id="urls-py-API-라우팅"><a href="#urls-py-API-라우팅" class="headerlink" title="urls.py : API 라우팅"></a>urls.py : API 라우팅</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> notes <span class="keyword">import</span> urls</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> include, url</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">"admin/"</span>, admin.site.urls), </span><br><span class="line">    url(<span class="string">r"^api/"</span>, include(urls))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">---------------------------------</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> NoteViewSet</span><br><span class="line"></span><br><span class="line"><span class="comment"># notes/urls.py</span></span><br><span class="line">note_list = NoteViewSet.as_view(&#123;<span class="string">"get"</span>: <span class="string">"list"</span>, <span class="string">"post"</span>: <span class="string">"create"</span>&#125;)</span><br><span class="line"></span><br><span class="line">note_detail = NoteViewSet.as_view(</span><br><span class="line">    &#123;<span class="string">"get"</span>: <span class="string">"retrieve"</span>, <span class="string">"patch"</span>: <span class="string">"partial_update"</span>, <span class="string">"delete"</span>: <span class="string">"destroy"</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">"^notes/$"</span>, note_list, name=<span class="string">"note-list"</span>),</span><br><span class="line">    url(<span class="string">"^notes/(?P&lt;pk&gt;[0-9]+)/$"</span>, note_detail, name=<span class="string">"note-detail"</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-amp-Django-프로젝트&quot;&gt;&lt;a href=&quot;#React-amp-Django-프로젝트&quot; class=&quot;headerlink&quot; title=&quot;React &amp;amp; Django 프로젝트&quot;&gt;&lt;/a&gt;React &amp;amp; Django 프로
      
    
    </summary>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/categories/React-Django/"/>
    
    
      <category term="React &amp; Django" scheme="https://khs9628.github.io/tags/React-Django/"/>
    
  </entry>
  
</feed>
