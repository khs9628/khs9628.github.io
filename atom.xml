<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>현수쓰</title>
  
  <subtitle>하루를 기록하다</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://khs9628.github.io/"/>
  <updated>2019-09-09T09:04:26.588Z</updated>
  <id>https://khs9628.github.io/</id>
  
  <author>
    <name>kimhyunsoo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RESTFUL API?</title>
    <link href="https://khs9628.github.io/2019/09/09/Django2/"/>
    <id>https://khs9628.github.io/2019/09/09/Django2/</id>
    <published>2019-09-09T08:06:04.000Z</published>
    <updated>2019-09-09T09:04:26.588Z</updated>
    
    <content type="html"><![CDATA[<h4 id="REST-REpresentational-State-Transfer"><a href="#REST-REpresentational-State-Transfer" class="headerlink" title="REST? - REpresentational State Transfer"></a>REST? - REpresentational State Transfer</h4><ul><li>HTTP를 이용해 통신하는 네트워크상에서 정한 약속</li><li>분산 하이퍼미디어 시스템을 위한 소프트웨어 설계 형식</li><li>자원을 대표하는 단어 OR 식별자로 자원의 상태를 전송하는 방법</li><li>자원을 이름으로 구분하여 상태를 전송하는 방법</li><li>하위 호환을 깨뜨리지 않고 독립적 발전할 수 있게 도와주는 방법</li></ul><blockquote><p>REST 필요충분조건?</p><ul><li>Server - Client</li><li>STATELESS</li><li>Cache</li><li>Uniform Interface</li><li>Layered System</li><li>Code-On-Demand</li></ul></blockquote><h4 id="API-Application-Program-Interface"><a href="#API-Application-Program-Interface" class="headerlink" title="API? -  Application Program Interface"></a>API? -  Application Program Interface</h4><p><img src="/assets/img/api.PNG" alt="API"><br>특정방식으로 response나 request를 보내는 형식</p><h4 id="RESTAPI"><a href="#RESTAPI" class="headerlink" title="RESTAPI?"></a>RESTAPI?</h4><p>REST 아키텍쳐 스타일을 따르는 API<br>HTTP로 CRUD를 구현할 수 있는 API?<br>-&gt; JSON : 모든 태그가 만들어져 있는 것도 아님 만든 이가 정의하기 나름  -&gt; RESTFUL하지 못함</p><h4 id="현재의-RESTFUL-API"><a href="#현재의-RESTFUL-API" class="headerlink" title="현재의 RESTFUL API?"></a>현재의 RESTFUL API?</h4><p>Self-Description (x)  HATROAS(x)<br>-&gt; 잘 지켜지지 않고 있다!</p><h3 id="JSON-직렬화-Serializer"><a href="#JSON-직렬화-Serializer" class="headerlink" title="JSON 직렬화 - Serializer"></a>JSON 직렬화 - Serializer</h3><p>(Model)Form vs (Model)Serializer</p><table><thead><tr><th>Django</th><th>Serializer</th></tr></thead><tbody><tr><td>Form/ModelForm</td><td>Serializer/ModelSerializer</td></tr><tr><td>Model로 부터 Field 읽어옴</td><td></td></tr><tr><td>유효성검사</td><td></td></tr><tr><td>HTML Form</td><td>JSON 문자열</td></tr></tbody></table><p><img src="/assets/img/serializer.PNG" alt="Serializer"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;REST-REpresentational-State-Transfer&quot;&gt;&lt;a href=&quot;#REST-REpresentational-State-Transfer&quot; class=&quot;headerlink&quot; title=&quot;REST? - REpresentati
      
    
    </summary>
    
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>CBV(Class Based View)</title>
    <link href="https://khs9628.github.io/2019/09/09/Django1/"/>
    <id>https://khs9628.github.io/2019/09/09/Django1/</id>
    <published>2019-09-09T07:33:40.000Z</published>
    <updated>2019-09-09T08:39:05.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Restful-API-Django"><a href="#Restful-API-Django" class="headerlink" title="Restful API Django"></a>Restful API Django</h2><p><img src="/assets/img/RestAPI.png" alt="RESTAPI"></p><h4 id="JSON-JavaScript-Object-Notation"><a href="#JSON-JavaScript-Object-Notation" class="headerlink" title="JSON (JavaScript Object Notation)"></a>JSON (JavaScript Object Notation)</h4><p>데이터의 송수신을 자바스크립트의 객체로서 수행할 수 있게끔하는 가벼운 문자열 데이터 표현식<br>&lt;&gt; XML(Extensible Markup Language)<br>만국 공통 자료형 -&gt; 문자열<br>문자열로 변환해서 전송하는 과정 -&gt; 직렬화(Serializer)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">diary = &#123;</span><br><span class="line">    <span class="string">'id'</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="string">'title'</span> : <span class="string">'I\'m starving'</span>,</span><br><span class="line">    <span class="string">'body'</span>: <span class="string">' what&gt;??'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(type(diary)) <span class="comment">#dic</span></span><br><span class="line"></span><br><span class="line">json_diary = json.dump(diary) <span class="comment">#dictionary -&gt; json</span></span><br><span class="line">print(type(json_diary)) <span class="comment">#str</span></span><br><span class="line"></span><br><span class="line">back_diary = json.loads(json_diary) <span class="comment">#json -&gt; dictionary</span></span><br><span class="line">print(type(back_diary)) <span class="comment"># dic</span></span><br></pre></td></tr></table></figure><p><a href="http://www.json.org/" rel="external nofollow noopener noreferrer" target="_blank">JSON참고</a></p><h4 id="Http-Request-amp-Method"><a href="#Http-Request-amp-Method" class="headerlink" title="Http Request &amp; Method"></a>Http Request &amp; Method</h4><p>Http Request</p><table><thead><tr><th>Method</th><th>Meaning</th></tr></thead><tbody><tr><td>GET</td><td>요청받은 URL의 정보를 검색하여 응답한다.</td></tr><tr><td>POST</td><td>요청된 자원을 생성(CREATE)한다.</td></tr><tr><td>PUT</td><td>요청된 자원을 수정(UPDATE)한다.</td></tr><tr><td>DELETE</td><td>요청된 자원을 삭제(DELETE)한다.</td></tr><tr><td>PATCH</td><td>요청된 자원의 일부를 교체(수정)한다.</td></tr><tr><td>OPTION</td><td>웹서버에서 지원되는 메소드의 종류 확인</td></tr></tbody></table><p>HTTP Response</p><blockquote><p>1xx(정보) : 요청을 받았으며 프로세스를 계속한다.<br>2xx(성공) : 요청을 성공적으로 받았으며 인식했고 수용하였다.<br>3xx(리다이렉션) : 요청 완료를 위해 추가 작업 조치가 필요하다.<br>4xx(클라이언트 오류) : 요청의 문법이 잘못되었거나 요청을 처리할 수 없다.<br>5xx(서버 오류) : 서버가 명백히 유효한 요청에 대해 충족을 실패했다.</p></blockquote><h4 id="Httpie"><a href="#Httpie" class="headerlink" title="Httpie"></a>Httpie</h4><p>Command Line으로 동작하는 Http Client</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade httpie <span class="comment">#설치</span></span><br><span class="line">http [flags] [Method] URL [ITEM[ITME]]</span><br><span class="line"><span class="comment">#flags = 옵션</span></span><br><span class="line"><span class="comment">#Method = Request (GET / POST / PUT / DELETE / PATCH / OPTION)</span></span><br><span class="line"><span class="comment">#ITEM = 인자 #GET -&gt; X == A #POST -&gt; X = A</span></span><br></pre></td></tr></table></figure><p>POST</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#JSON 형식의 요청:</span></span><br><span class="line">http --json POST [주소] GET == 값 / POST = 값</span><br><span class="line"><span class="comment">#HTML form 형식의 요청:</span></span><br><span class="line">http --form POST [주소] GET == 값 / POST = 값</span><br></pre></td></tr></table></figure><p>HTML 방식<br><img src="/assets/img/httpPost.png" alt="예"><br>JSON방식<br><img src="/assets/img/httpPost2.png" alt="예2"></p><p><a href="https://httpie.org/" rel="external nofollow noopener noreferrer" target="_blank">HTTPIE 참고 사이트</a></p><h4 id="CBV-Generic-View-lt-gt-FBV"><a href="#CBV-Generic-View-lt-gt-FBV" class="headerlink" title="CBV(Generic View) &lt;&gt; FBV"></a>CBV(Generic View) &lt;&gt; FBV</h4><p>Class Based View &lt;&gt; Function Based View<br>3가지 질문<br>왜 클래스?<br>함수로 작성한 것과 무슨 차이?<br>Views.py는 뭘로 채워 넣어야 해? -&gt; callable object</p><p>function or class = callable object<br>class -&gt; 상속이 가능하다! -&gt; 중복의 제거 , 코드의 재사용</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Restful-API-Django&quot;&gt;&lt;a href=&quot;#Restful-API-Django&quot; class=&quot;headerlink&quot; title=&quot;Restful API Django&quot;&gt;&lt;/a&gt;Restful API Django&lt;/h2&gt;&lt;p&gt;&lt;img s
      
    
    </summary>
    
    
    
      <category term="Django" scheme="https://khs9628.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>전화번호 목록</title>
    <link href="https://khs9628.github.io/2019/09/07/codingTest2/"/>
    <id>https://khs9628.github.io/2019/09/07/codingTest2/</id>
    <published>2019-09-07T12:05:57.000Z</published>
    <updated>2019-09-08T14:19:00.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="전화번호-목록"><a href="#전화번호-목록" class="headerlink" title="전화번호 목록"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/42576" rel="external nofollow noopener noreferrer" target="_blank">전화번호 목록</a></h2><p>전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다. 전화번호가 다음과 같을 경우,구조대 전화번호는 영석이의 전화번호의 접두사입니다.</p><ul><li>구조대 : 119</li><li>박준영 : 97 674 223</li><li>지영석 : 11 9552 4421</li></ul><p>전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><blockquote><ul><li>phone_book의 길이는 1 이상 1,000,000 이하입니다.</li><li>각 전화번호의 길이는 1 이상 20 이하입니다.</li></ul></blockquote><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><p><img src="/assets/img/codingtest2.PNG" alt="RESULT"></p><h2 id="1차-답안-gt-Hash-알고리즘-X"><a href="#1차-답안-gt-Hash-알고리즘-X" class="headerlink" title="1차 답안 -&gt; Hash 알고리즘 X"></a>1차 답안 -&gt; Hash 알고리즘 X</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">solution</span><span class="params">(String[] phone_book)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> answer = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;전화번호-목록&quot;&gt;&lt;a href=&quot;#전화번호-목록&quot; class=&quot;headerlink&quot; title=&quot;전화번호 목록&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42576
      
    
    </summary>
    
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>NEXT</title>
    <link href="https://khs9628.github.io/2019/09/07/DBtest2/"/>
    <id>https://khs9628.github.io/2019/09/07/DBtest2/</id>
    <published>2019-09-07T09:40:40.000Z</published>
    <updated>2019-09-08T14:19:06.633Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;하루를 기록하다&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
    
    
      <category term="DB" scheme="https://khs9628.github.io/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>7DAYSQL Challenge</title>
    <link href="https://khs9628.github.io/2019/09/07/DBtest1/"/>
    <id>https://khs9628.github.io/2019/09/07/DBtest1/</id>
    <published>2019-09-07T07:08:56.000Z</published>
    <updated>2019-09-08T14:19:10.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7DAYSQL-Challenge"><a href="#7DAYSQL-Challenge" class="headerlink" title="7DAYSQL Challenge"></a>7DAYSQL Challenge</h1><pre><code>ANIMAL_INS 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블입니다.ANIMAL_INS 테이블 구조는 다음과 같으며, ANIMAL_ID, ANIMAL_TYPE, DATETIME,INTAKE_CONDITION, NAME, SEX_UPON_INTAKE는 각각 동물의 아이디, 생물 종,보호 시작일, 보호 시작 시 상태, 이름, 성별 및 중성화 여부를 나타냅니다.</code></pre><h3 id="ANIMAL-INS-TABLE"><a href="#ANIMAL-INS-TABLE" class="headerlink" title="ANIMAL_INS TABLE"></a>ANIMAL_INS TABLE</h3><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>INTAKE_CONDITION</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table><p><img src="/assets/img/animalin.PNG" alt="inTable"></p><pre><code>ANIMAL_OUTS 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은테이블입니다. ANIMAL_OUTS 테이블 구조는 다음과 같으며, ANIMAL_ID,ANIMAL_TYPE, DATETIME, NAME, SEX_UPON_OUTCOME는 각각 동물의 아이디, 생물종, 입양일, 이름, 성별 및 중성화 여부를 나타냅니다. ANIMAL_OUTS 테이블의ANIMAL_ID는 ANIMAL_INS의 ANIMAL_ID의 외래 키입니다.</code></pre><h3 id="ANIMAL-OUTS-TABLE"><a href="#ANIMAL-OUTS-TABLE" class="headerlink" title="ANIMAL_OUTS TABLE"></a>ANIMAL_OUTS TABLE</h3><table><thead><tr><th>NAME</th><th>TYPE</th><th>NULLABLE</th></tr></thead><tbody><tr><td>ANIMAL_ID</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>ANIMAL_TYPE</td><td>VARCHAR(N)</td><td>FALSE</td></tr><tr><td>DATETIME</td><td>DATETIME</td><td>FALSE</td></tr><tr><td>NAME</td><td>VARCHAR(N)</td><td>TRUE</td></tr><tr><td>SEX_UPON_INTAKE</td><td>VARCHAR(N)</td><td>FALSE</td></tr></tbody></table><p><img src="/assets/img/animalout.PNG" alt="outTable"></p><h2 id="1번-모든-레코드-조회하기"><a href="#1번-모든-레코드-조회하기" class="headerlink" title="1번. 모든 레코드 조회하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59043" rel="external nofollow noopener noreferrer" target="_blank">1번. 모든 레코드 조회하기</a></h2><h3 id="A"><a href="#A" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ANIMAL_ID</span><br></pre></td></tr></table></figure><h2 id="2번-역순-정렬하기"><a href="#2번-역순-정렬하기" class="headerlink" title="2번. 역순 정렬하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59035" rel="external nofollow noopener noreferrer" target="_blank">2번. 역순 정렬하기</a></h2><pre><code>동물 보호소에 들어온 모든 동물의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 ANIMAL_ID 역순으로 보여주세요. SQL을 실행하면 다음과 같이 출력되어야 합니다.</code></pre><h3 id="A-1"><a href="#A-1" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NAME</span>, DATETIME <span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ANIMAL_ID <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><h2 id="3번-아픈-동물-찾기"><a href="#3번-아픈-동물-찾기" class="headerlink" title="3번. 아픈 동물 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59036" rel="external nofollow noopener noreferrer" target="_blank">3번. 아픈 동물 찾기</a></h2><pre><code>동물 보호소에 들어온 동물 중 아픈 동물의 아이디와 이름을 조회하는 SQL 문을작성해주세요. 이때 결과는 아이디 순으로 조회해주세요.</code></pre><h3 id="A-2"><a href="#A-2" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ANIMAL_ID,<span class="keyword">NAME</span> <span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> INTAKE_CONDITION =<span class="string">'SICK'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ANIMAL_ID <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><h2 id="4번-어린-동물-찾기"><a href="#4번-어린-동물-찾기" class="headerlink" title="4번. 어린 동물 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59037" rel="external nofollow noopener noreferrer" target="_blank">4번. 어린 동물 찾기</a></h2><pre><code>동물 보호소에 들어온 동물 중 젊은 동물의 아이디와 이름을 조회하는 SQL 문을   작성해주세요. 이때 결과는 아이디 순으로 조회해주세요.</code></pre><h3 id="A-3"><a href="#A-3" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ANIMAL_ID , <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> INTAKE_CONDITION &lt;&gt; <span class="string">'AGED'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ANIMAL_ID</span><br></pre></td></tr></table></figure><h2 id="5번-최솟값-구하기"><a href="#5번-최솟값-구하기" class="headerlink" title="5번. 최솟값 구하기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59038" rel="external nofollow noopener noreferrer" target="_blank">5번. 최솟값 구하기</a></h2><pre><code>동물 보호소에 가장 먼저 들어온 동물은 언제 들어왔는지 조회하는 SQL 문을  작성해주세요.</code></pre><h3 id="A-4"><a href="#A-4" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATETIME</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> DATETIME <span class="keyword">ASC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="6번-이름이-없는-동물의-아이디"><a href="#6번-이름이-없는-동물의-아이디" class="headerlink" title="6번. 이름이 없는 동물의 아이디"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59039" rel="external nofollow noopener noreferrer" target="_blank">6번. 이름이 없는 동물의 아이디</a></h2><pre><code>동물 보호소에 들어온 동물 중, 이름이 없는 채로 들어온 동물의 ID를 조회하는 SQL 문을 작성해주세요. 단, ID는 오름차순 정렬되어야 합니다.</code></pre><h3 id="A-5"><a href="#A-5" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ANIMAL_ID </span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NAME</span> <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><h2 id="7번-고양이와-개는-몇-마리-있을까"><a href="#7번-고양이와-개는-몇-마리-있을까" class="headerlink" title="7번. 고양이와 개는 몇 마리 있을까"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59039" rel="external nofollow noopener noreferrer" target="_blank">7번. 고양이와 개는 몇 마리 있을까</a></h2><pre><code>동물 보호소에 들어온 동물 중 고양이와 개가 각각 몇 마리인지 조회하는 SQL문을 작성해주세요. 이때 고양이가 개보다 먼저 조회해주세요.</code></pre><h3 id="A-6"><a href="#A-6" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> animal_type, <span class="keyword">count</span>(animal_type) </span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS </span><br><span class="line"><span class="keyword">WHERE</span> ANIMAL_TYPE <span class="keyword">IN</span> (<span class="string">'Cat'</span>, <span class="string">'Dog'</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> animal_type</span><br></pre></td></tr></table></figure><h2 id="8번-동명-동물-수-찾기"><a href="#8번-동명-동물-수-찾기" class="headerlink" title="8번. 동명 동물 수 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59041" rel="external nofollow noopener noreferrer" target="_blank">8번. 동명 동물 수 찾기</a></h2><pre><code>동물 보호소에 들어온 동물 이름 중 두 번 이상 쓰인 이름과 해당 이름이 쓰인횟수를 조회하는 SQL문을 작성해주세요. 이때 결과는 이름이 없는 동물은 집계에서 제외하며, 결과는 이름 순으로 조회해주세요.</code></pre><h3 id="A-7"><a href="#A-7" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> ,<span class="keyword">COUNT</span>(<span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> ANIMAL_INS) </span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">name</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">name</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(<span class="keyword">name</span>) &gt; <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="9번-없어진-기록-찾기"><a href="#9번-없어진-기록-찾기" class="headerlink" title="9번. 없어진 기록 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59042" rel="external nofollow noopener noreferrer" target="_blank">9번. 없어진 기록 찾기</a></h2><pre><code>천재지변으로 인해 일부 데이터가 유실되었습니다. 입양을 간 기록은 있는데,보호소에 들어온 기록이 없는 동물의 ID와 이름을 ID 순으로 조회하는 SQL문을 작성해주세요.</code></pre><h2 id="A-8"><a href="#A-8" class="headerlink" title="A)"></a>A)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> animal_id , <span class="keyword">name</span></span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_OUTS</span><br><span class="line"><span class="keyword">WHERE</span>  animal_id  <span class="keyword">NOT</span> <span class="keyword">IN</span>( <span class="keyword">SELECT</span> animal_id</span><br><span class="line">    <span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="10번-있었는데-없었습니다"><a href="#10번-있었는데-없었습니다" class="headerlink" title="10번. 있었는데 없었습니다."></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59043" rel="external nofollow noopener noreferrer" target="_blank">10번. 있었는데 없었습니다.</a></h2><pre><code>관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다.</code></pre><h2 id="A-9"><a href="#A-9" class="headerlink" title="A)"></a>A)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> o.animal_id, o.name</span><br><span class="line"><span class="keyword">FROM</span> animal_outs <span class="keyword">AS</span> o</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span>  animal_ins <span class="keyword">AS</span> i</span><br><span class="line"><span class="keyword">ON</span> o.animal_id = i.animal_id</span><br><span class="line"><span class="keyword">WHERE</span> o.datetime &lt; i.datetime</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> i.datetime <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><h2 id="11번-오래-보호한-동물-1"><a href="#11번-오래-보호한-동물-1" class="headerlink" title="11번. 오래 보호한 동물(1)"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59044" rel="external nofollow noopener noreferrer" target="_blank">11번. 오래 보호한 동물(1)</a></h2><pre><code>아직 입양을 못 간 동물 중, 가장 오래 보호소에 있었던 동물 3마리의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일 순으로 조회해야 합니다.</code></pre><h3 id="A-10"><a href="#A-10" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span> , datetime</span><br><span class="line"><span class="keyword">FROM</span> ANIMAL_INS</span><br><span class="line"><span class="keyword">WHERE</span> animal_id  <span class="keyword">NOT</span> <span class="keyword">IN</span>( <span class="keyword">SELECT</span> animal_id</span><br><span class="line">    <span class="keyword">FROM</span> ANIMAL_OUTS</span><br><span class="line">) </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> DATETIME <span class="keyword">ASC</span></span><br><span class="line"><span class="keyword">Limit</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2 id="12번-보호소에서-중성화한-동물"><a href="#12번-보호소에서-중성화한-동물" class="headerlink" title="12번. 보호소에서 중성화한 동물"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59045" rel="external nofollow noopener noreferrer" target="_blank">12번. 보호소에서 중성화한 동물</a></h2><pre><code>보호소에서 중성화 수술을 거친 동물 정보를 알아보려 합니다. 보호소에 들어올당시에는 중성화1되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물의 아이디와생물 종, 이름을 조회하는 아이디 순으로 조회하는 SQL 문을 작성해주세요.</code></pre><h3 id="A-11"><a href="#A-11" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> o.animal_id,o.animal_type ,o.name</span><br><span class="line"><span class="keyword">FROM</span> animal_outs <span class="keyword">AS</span> o</span><br><span class="line"><span class="keyword">JOIN</span>  animal_ins <span class="keyword">AS</span> i</span><br><span class="line"><span class="keyword">ON</span> o.animal_id = i.animal_id</span><br><span class="line"><span class="keyword">WHERE</span> o.SEX_UPON_OUTCOME &lt;&gt; i.SEX_UPON_INTAKE</span><br></pre></td></tr></table></figure><h2 id="13번-루시와-엘라-찾기"><a href="#13번-루시와-엘라-찾기" class="headerlink" title="13번. 루시와 엘라 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59046" rel="external nofollow noopener noreferrer" target="_blank">13번. 루시와 엘라 찾기</a></h2><pre><code>동물 보호소에 들어온 동물 중 이름이 Lucy, Ella, Pickle, Rogan, Sabrina,Mitty인 동물의 아이디와 이름, 성별을 조회하는 SQL 문을 작성해주세요.</code></pre><h3 id="A-12"><a href="#A-12" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> o.animal_id,o.animal_type ,o.name</span><br><span class="line"><span class="keyword">FROM</span> animal_outs <span class="keyword">AS</span> o</span><br><span class="line"><span class="keyword">JOIN</span>  animal_ins <span class="keyword">AS</span> i</span><br><span class="line"><span class="keyword">ON</span> o.animal_id = i.animal_id</span><br><span class="line"><span class="keyword">WHERE</span> o.SEX_UPON_OUTCOME &lt;&gt; i.SEX_UPON_INTAKE</span><br></pre></td></tr></table></figure><h2 id="14번-이름에-el이-들어가는-동물-찾기"><a href="#14번-이름에-el이-들어가는-동물-찾기" class="headerlink" title="14번. 이름에 el이 들어가는 동물 찾기"></a><a href="https://programmers.co.kr/learn/courses/30/lessons/59047" rel="external nofollow noopener noreferrer" target="_blank">14번. 이름에 el이 들어가는 동물 찾기</a></h2><pre><code>보호소에서 중성화 수술을 거친 동물 정보를 알아보려 합니다. 보호소에 들어올당시에는 중성화1되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물의 아이디와생물 종, 이름을 조회하는 아이디 순으로 조회하는 SQL 문을 작성해주세요.</code></pre><h3 id="A-13"><a href="#A-13" class="headerlink" title="A)"></a>A)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> animal_id, <span class="keyword">name</span> </span><br><span class="line"><span class="keyword">FROM</span> animal_ins </span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%el%'</span></span><br><span class="line"><span class="keyword">AND</span> ANIMAL_TYPE = <span class="string">'dog'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">name</span></span><br></pre></td></tr></table></figure><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;7DAYSQL-Challenge&quot;&gt;&lt;a href=&quot;#7DAYSQL-Challenge&quot; class=&quot;headerlink&quot; title=&quot;7DAYSQL Challenge&quot;&gt;&lt;/a&gt;7DAYSQL Challenge&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;AN
      
    
    </summary>
    
    
    
      <category term="DB" scheme="https://khs9628.github.io/tags/DB/"/>
    
  </entry>
  
  <entry>
    <title>완주하지 못한 선수</title>
    <link href="https://khs9628.github.io/2019/09/07/codingTest1/"/>
    <id>https://khs9628.github.io/2019/09/07/codingTest1/</id>
    <published>2019-09-07T06:17:57.000Z</published>
    <updated>2019-09-08T14:18:52.604Z</updated>
    
    <content type="html"><![CDATA[<h2 id="완주하지-못한-선수"><a href="#완주하지-못한-선수" class="headerlink" title="완주하지 못한 선수."></a><a href="https://programmers.co.kr/learn/courses/30/lessons/42576" rel="external nofollow noopener noreferrer" target="_blank">완주하지 못한 선수.</a></h2><p>수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.   마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열  completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.</p><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><blockquote><ul><li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.</li><li>completion의 길이는 participant의 길이보다 1 작습니다.</li><li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.</li><li>참가자 중에는 동명이인이 있을 수 있습니다.</li></ul></blockquote><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><p><img src="/assets/img/codingtest1.PNG" alt="RESULT"></p><h2 id="1차-답안-gt-Hash-알고리즘-X"><a href="#1차-답안-gt-Hash-알고리즘-X" class="headerlink" title="1차 답안 -&gt; Hash 알고리즘 X"></a>1차 답안 -&gt; Hash 알고리즘 X</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">solution</span><span class="params">(String[] participant, String[] completion)</span> </span>&#123;</span><br><span class="line">        String answer = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; participant.length; i++)&#123;</span><br><span class="line">            Boolean stop = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; completion.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(participant[i].equals(completion[j]))&#123;</span><br><span class="line">                  completion[j] = <span class="keyword">null</span>;</span><br><span class="line">                  stop = <span class="keyword">false</span>;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">                &#125; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(stop == <span class="keyword">true</span>)&#123;</span><br><span class="line">                    answer = participant[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="cf-HASH란"><a href="#cf-HASH란" class="headerlink" title="cf) HASH란?"></a>cf) HASH란?</h2><blockquote><p>2<br>1</p></blockquote><h2 id="2차-답안-gt-Hash-알고리즘"><a href="#2차-답안-gt-Hash-알고리즘" class="headerlink" title="2차 답안 -&gt; Hash 알고리즘"></a>2차 답안 -&gt; Hash 알고리즘</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">Solution</span><span class="params">(String[] participant, String[] completion)</span></span>&#123;</span><br><span class="line">        String answer = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> val = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Integer&gt; map = <span class="keyword">new</span> Hashmap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(String part: participant)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.get(part) == <span class="keyword">null</span>)&#123;</span><br><span class="line">                map.get(part,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                val = map.get(part)+<span class="number">1</span>;</span><br><span class="line">                map.put(part,val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String comp : completion)&#123;</span><br><span class="line">            val = map.get(comp)-<span class="number">1</span>;</span><br><span class="line">            map.put(comp,val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(String key : map.keySet())&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.get(key)==<span class="number">1</span>)&#123;</span><br><span class="line">                answer = key;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> answer;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3차-답안-gt-sort-메소드-이용"><a href="#3차-답안-gt-sort-메소드-이용" class="headerlink" title="3차 답안 -&gt; sort()메소드 이용"></a>3차 답안 -&gt; sort()메소드 이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">Solution</span><span class="params">(String[] participant, String[] completion)</span></span>&#123;</span><br><span class="line">        Arrays.sort(participant);</span><br><span class="line">        Arrays.sort(completion);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;completion.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(participant[i].equals(completion[i]))&#123;</span><br><span class="line">                <span class="keyword">return</span> participant[i];</span><br><span class="line">            &#125;           </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> participant[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;완주하지-못한-선수&quot;&gt;&lt;a href=&quot;#완주하지-못한-선수&quot; class=&quot;headerlink&quot; title=&quot;완주하지 못한 선수.&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/les
      
    
    </summary>
    
    
    
      <category term="알고리즘" scheme="https://khs9628.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>목차</title>
    <link href="https://khs9628.github.io/2019/09/06/first/"/>
    <id>https://khs9628.github.io/2019/09/06/first/</id>
    <published>2019-09-06T13:18:44.000Z</published>
    <updated>2019-09-09T07:38:30.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MAIN-목차-및-정리개념"><a href="#MAIN-목차-및-정리개념" class="headerlink" title="MAIN 목차 및 정리개념"></a>MAIN 목차 및 정리개념</h1><h2 id="기술-블로그-관련-POST"><a href="#기술-블로그-관련-POST" class="headerlink" title="기술 블로그 관련 POST"></a>기술 블로그 관련 POST</h2><h3 id="1-SPRING-개념정리"><a href="#1-SPRING-개념정리" class="headerlink" title="1. SPRING 개념정리"></a>1. SPRING 개념정리</h3><ul><li>Tiles 프레임워크</li></ul><h3 id="2-Django"><a href="#2-Django" class="headerlink" title="2. Django"></a>2. Django</h3><ol><li>CBV</li><li>Serializer</li><li>?</li></ol><h3 id="3-React"><a href="#3-React" class="headerlink" title="3. React"></a>3. React</h3><h3 id="4-알고리즘-DB-문제-정리"><a href="#4-알고리즘-DB-문제-정리" class="headerlink" title="4. 알고리즘 / DB 문제 정리"></a>4. 알고리즘 / DB 문제 정리</h3><ul><li><p>코딩 테스트 문제</p><ol><li>HASH 알고리즘<ul><li><a href="https://khs9628.github.io/2019/09/07/codingTest1/">완주하지 못한 선수</a></li><li><a href="https://khs9628.github.io/2019/09/07/codingTest2/">전화번호 목록</a></li></ul></li><li><a href>NEXT</a></li></ol></li><li><p>DB 문제</p><ol><li><a href="https://khs9628.github.io/2019/09/07/DBtest1/">7daySQL</a></li><li><a href>NEXT</a></li></ol></li></ul><h3 id="5-포토폴리오"><a href="#5-포토폴리오" class="headerlink" title="5. 포토폴리오"></a>5. 포토폴리오</h3><ul><li>WorkManager</li><li>GuardOWL</li><li>나왐마</li><li>5DUCKU</li></ul><blockquote><p>하루를 기록하다</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MAIN-목차-및-정리개념&quot;&gt;&lt;a href=&quot;#MAIN-목차-및-정리개념&quot; class=&quot;headerlink&quot; title=&quot;MAIN 목차 및 정리개념&quot;&gt;&lt;/a&gt;MAIN 목차 및 정리개념&lt;/h1&gt;&lt;h2 id=&quot;기술-블로그-관련-POST&quot;&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
